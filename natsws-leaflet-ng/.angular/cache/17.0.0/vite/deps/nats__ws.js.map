{
  "version": 3,
  "sources": ["browser-external:crypto", "../../../../../node_modules/nats.ws/esm/nats.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"crypto\" has been externalized for browser compatibility. Cannot access \"crypto.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "// deno-fmt-ignore-file\n// deno-lint-ignore-file\n// This code was bundled using `deno bundle` and it's not recommended to edit it manually\n\nconst Empty = new Uint8Array(0);\nconst TE = new TextEncoder();\nconst TD = new TextDecoder();\nfunction concat(...bufs) {\n    let max = 0;\n    for(let i = 0; i < bufs.length; i++){\n        max += bufs[i].length;\n    }\n    const out = new Uint8Array(max);\n    let index = 0;\n    for(let i = 0; i < bufs.length; i++){\n        out.set(bufs[i], index);\n        index += bufs[i].length;\n    }\n    return out;\n}\nfunction encode(...a) {\n    const bufs = [];\n    for(let i = 0; i < a.length; i++){\n        bufs.push(TE.encode(a[i]));\n    }\n    if (bufs.length === 0) {\n        return Empty;\n    }\n    if (bufs.length === 1) {\n        return bufs[0];\n    }\n    return concat(...bufs);\n}\nfunction decode(a) {\n    if (!a || a.length === 0) {\n        return \"\";\n    }\n    return TD.decode(a);\n}\n\"use strict\";\nconst digits = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nconst base = 36;\nconst maxSeq = 3656158440062976;\nconst minInc = 33;\nconst maxInc = 333;\nconst totalLen = 12 + 10;\nfunction _getRandomValues(a) {\n    for(let i = 0; i < a.length; i++){\n        a[i] = Math.floor(Math.random() * 255);\n    }\n}\nfunction fillRandom(a) {\n    if (globalThis?.crypto?.getRandomValues) {\n        globalThis.crypto.getRandomValues(a);\n    } else {\n        _getRandomValues(a);\n    }\n}\nclass Nuid {\n    buf;\n    seq;\n    inc;\n    constructor(){\n        this.buf = new Uint8Array(totalLen);\n        this.init();\n    }\n    init() {\n        this.setPre();\n        this.initSeqAndInc();\n        this.fillSeq();\n    }\n    initSeqAndInc() {\n        this.seq = Math.floor(Math.random() * maxSeq);\n        this.inc = Math.floor(Math.random() * (maxInc - minInc) + minInc);\n    }\n    setPre() {\n        const cbuf = new Uint8Array(12);\n        fillRandom(cbuf);\n        for(let i = 0; i < 12; i++){\n            const di = cbuf[i] % 36;\n            this.buf[i] = digits.charCodeAt(di);\n        }\n    }\n    fillSeq() {\n        let n = this.seq;\n        for(let i = totalLen - 1; i >= 12; i--){\n            this.buf[i] = digits.charCodeAt(n % base);\n            n = Math.floor(n / base);\n        }\n    }\n    next() {\n        this.seq += this.inc;\n        if (this.seq > 3656158440062976) {\n            this.setPre();\n            this.initSeqAndInc();\n        }\n        this.fillSeq();\n        return String.fromCharCode.apply(String, this.buf);\n    }\n    reset() {\n        this.init();\n    }\n}\nconst nuid = new Nuid();\nvar Events;\n(function(Events) {\n    Events[\"Disconnect\"] = \"disconnect\";\n    Events[\"Reconnect\"] = \"reconnect\";\n    Events[\"Update\"] = \"update\";\n    Events[\"LDM\"] = \"ldm\";\n    Events[\"Error\"] = \"error\";\n})(Events || (Events = {}));\nvar DebugEvents;\n(function(DebugEvents) {\n    DebugEvents[\"Reconnecting\"] = \"reconnecting\";\n    DebugEvents[\"PingTimer\"] = \"pingTimer\";\n    DebugEvents[\"StaleConnection\"] = \"staleConnection\";\n    DebugEvents[\"ClientInitiatedReconnect\"] = \"client initiated reconnect\";\n})(DebugEvents || (DebugEvents = {}));\nvar ErrorCode;\n(function(ErrorCode) {\n    ErrorCode[\"ApiError\"] = \"BAD API\";\n    ErrorCode[\"BadAuthentication\"] = \"BAD_AUTHENTICATION\";\n    ErrorCode[\"BadCreds\"] = \"BAD_CREDS\";\n    ErrorCode[\"BadHeader\"] = \"BAD_HEADER\";\n    ErrorCode[\"BadJson\"] = \"BAD_JSON\";\n    ErrorCode[\"BadPayload\"] = \"BAD_PAYLOAD\";\n    ErrorCode[\"BadSubject\"] = \"BAD_SUBJECT\";\n    ErrorCode[\"Cancelled\"] = \"CANCELLED\";\n    ErrorCode[\"ConnectionClosed\"] = \"CONNECTION_CLOSED\";\n    ErrorCode[\"ConnectionDraining\"] = \"CONNECTION_DRAINING\";\n    ErrorCode[\"ConnectionRefused\"] = \"CONNECTION_REFUSED\";\n    ErrorCode[\"ConnectionTimeout\"] = \"CONNECTION_TIMEOUT\";\n    ErrorCode[\"Disconnect\"] = \"DISCONNECT\";\n    ErrorCode[\"InvalidOption\"] = \"INVALID_OPTION\";\n    ErrorCode[\"InvalidPayload\"] = \"INVALID_PAYLOAD\";\n    ErrorCode[\"MaxPayloadExceeded\"] = \"MAX_PAYLOAD_EXCEEDED\";\n    ErrorCode[\"NoResponders\"] = \"503\";\n    ErrorCode[\"NotFunction\"] = \"NOT_FUNC\";\n    ErrorCode[\"RequestError\"] = \"REQUEST_ERROR\";\n    ErrorCode[\"ServerOptionNotAvailable\"] = \"SERVER_OPT_NA\";\n    ErrorCode[\"SubClosed\"] = \"SUB_CLOSED\";\n    ErrorCode[\"SubDraining\"] = \"SUB_DRAINING\";\n    ErrorCode[\"Timeout\"] = \"TIMEOUT\";\n    ErrorCode[\"Tls\"] = \"TLS\";\n    ErrorCode[\"Unknown\"] = \"UNKNOWN_ERROR\";\n    ErrorCode[\"WssRequired\"] = \"WSS_REQUIRED\";\n    ErrorCode[\"JetStreamInvalidAck\"] = \"JESTREAM_INVALID_ACK\";\n    ErrorCode[\"JetStream404NoMessages\"] = \"404\";\n    ErrorCode[\"JetStream408RequestTimeout\"] = \"408\";\n    ErrorCode[\"JetStream409MaxAckPendingExceeded\"] = \"409\";\n    ErrorCode[\"JetStream409\"] = \"409\";\n    ErrorCode[\"JetStreamNotEnabled\"] = \"503\";\n    ErrorCode[\"JetStreamIdleHeartBeat\"] = \"IDLE_HEARTBEAT\";\n    ErrorCode[\"AuthorizationViolation\"] = \"AUTHORIZATION_VIOLATION\";\n    ErrorCode[\"AuthenticationExpired\"] = \"AUTHENTICATION_EXPIRED\";\n    ErrorCode[\"ProtocolError\"] = \"NATS_PROTOCOL_ERR\";\n    ErrorCode[\"PermissionsViolation\"] = \"PERMISSIONS_VIOLATION\";\n    ErrorCode[\"AuthenticationTimeout\"] = \"AUTHENTICATION_TIMEOUT\";\n})(ErrorCode || (ErrorCode = {}));\nfunction isNatsError(err) {\n    return typeof err.code === \"string\";\n}\nclass Messages {\n    messages;\n    constructor(){\n        this.messages = new Map();\n        this.messages.set(ErrorCode.InvalidPayload, \"Invalid payload type - payloads can be 'binary', 'string', or 'json'\");\n        this.messages.set(ErrorCode.BadJson, \"Bad JSON\");\n        this.messages.set(ErrorCode.WssRequired, \"TLS is required, therefore a secure websocket connection is also required\");\n    }\n    static getMessage(s) {\n        return messages.getMessage(s);\n    }\n    getMessage(s) {\n        return this.messages.get(s) || s;\n    }\n}\nconst messages = new Messages();\nclass NatsError extends Error {\n    name;\n    message;\n    code;\n    permissionContext;\n    chainedError;\n    api_error;\n    constructor(message, code, chainedError){\n        super(message);\n        this.name = \"NatsError\";\n        this.message = message;\n        this.code = code;\n        this.chainedError = chainedError;\n    }\n    static errorForCode(code, chainedError) {\n        const m = Messages.getMessage(code);\n        return new NatsError(m, code, chainedError);\n    }\n    isAuthError() {\n        return this.code === ErrorCode.AuthenticationExpired || this.code === ErrorCode.AuthorizationViolation;\n    }\n    isAuthTimeout() {\n        return this.code === ErrorCode.AuthenticationTimeout;\n    }\n    isPermissionError() {\n        return this.code === ErrorCode.PermissionsViolation;\n    }\n    isProtocolError() {\n        return this.code === ErrorCode.ProtocolError;\n    }\n    isJetStreamError() {\n        return this.api_error !== undefined;\n    }\n    jsError() {\n        return this.api_error ? this.api_error : null;\n    }\n}\nvar Match;\n(function(Match) {\n    Match[Match[\"Exact\"] = 0] = \"Exact\";\n    Match[Match[\"CanonicalMIME\"] = 1] = \"CanonicalMIME\";\n    Match[Match[\"IgnoreCase\"] = 2] = \"IgnoreCase\";\n})(Match || (Match = {}));\nvar RequestStrategy;\n(function(RequestStrategy) {\n    RequestStrategy[\"Timer\"] = \"timer\";\n    RequestStrategy[\"Count\"] = \"count\";\n    RequestStrategy[\"JitterTimer\"] = \"jitterTimer\";\n    RequestStrategy[\"SentinelMsg\"] = \"sentinelMsg\";\n})(RequestStrategy || (RequestStrategy = {}));\nfunction syncIterator(src) {\n    const iter = src[Symbol.asyncIterator]();\n    return {\n        async next () {\n            const m = await iter.next();\n            if (m.done) {\n                return Promise.resolve(null);\n            }\n            return Promise.resolve(m.value);\n        }\n    };\n}\nvar ServiceResponseType;\n(function(ServiceResponseType) {\n    ServiceResponseType[\"STATS\"] = \"io.nats.micro.v1.stats_response\";\n    ServiceResponseType[\"INFO\"] = \"io.nats.micro.v1.info_response\";\n    ServiceResponseType[\"PING\"] = \"io.nats.micro.v1.ping_response\";\n})(ServiceResponseType || (ServiceResponseType = {}));\nconst ServiceErrorHeader = \"Nats-Service-Error\";\nconst ServiceErrorCodeHeader = \"Nats-Service-Error-Code\";\nclass ServiceError extends Error {\n    code;\n    constructor(code, message){\n        super(message);\n        this.code = code;\n    }\n    static isServiceError(msg) {\n        return ServiceError.toServiceError(msg) !== null;\n    }\n    static toServiceError(msg) {\n        const scode = msg?.headers?.get(ServiceErrorCodeHeader) || \"\";\n        if (scode !== \"\") {\n            const code = parseInt(scode) || 400;\n            const description = msg?.headers?.get(ServiceErrorHeader) || \"\";\n            return new ServiceError(code, description.length ? description : scode);\n        }\n        return null;\n    }\n}\nfunction createInbox(prefix = \"\") {\n    prefix = prefix || \"_INBOX\";\n    if (typeof prefix !== \"string\") {\n        throw new Error(\"prefix must be a string\");\n    }\n    prefix.split(\".\").forEach((v)=>{\n        if (v === \"*\" || v === \">\") {\n            throw new Error(`inbox prefixes cannot have wildcards '${prefix}'`);\n        }\n    });\n    return `${prefix}.${nuid.next()}`;\n}\nconst DEFAULT_HOST = \"127.0.0.1\";\nvar ServiceVerb;\n(function(ServiceVerb) {\n    ServiceVerb[\"PING\"] = \"PING\";\n    ServiceVerb[\"STATS\"] = \"STATS\";\n    ServiceVerb[\"INFO\"] = \"INFO\";\n})(ServiceVerb || (ServiceVerb = {}));\nfunction extend(a, ...b) {\n    for(let i = 0; i < b.length; i++){\n        const o = b[i];\n        Object.keys(o).forEach(function(k) {\n            a[k] = o[k];\n        });\n    }\n    return a;\n}\nfunction render(frame) {\n    const cr = \"␍\";\n    const lf = \"␊\";\n    return TD.decode(frame).replace(/\\n/g, lf).replace(/\\r/g, cr);\n}\nfunction timeout(ms, asyncTraces = true) {\n    const err = asyncTraces ? NatsError.errorForCode(ErrorCode.Timeout) : null;\n    let methods;\n    let timer;\n    const p = new Promise((_resolve, reject)=>{\n        const cancel = ()=>{\n            if (timer) {\n                clearTimeout(timer);\n            }\n        };\n        methods = {\n            cancel\n        };\n        timer = setTimeout(()=>{\n            if (err === null) {\n                reject(NatsError.errorForCode(ErrorCode.Timeout));\n            } else {\n                reject(err);\n            }\n        }, ms);\n    });\n    return Object.assign(p, methods);\n}\nfunction delay(ms = 0) {\n    return new Promise((resolve)=>{\n        setTimeout(()=>{\n            resolve();\n        }, ms);\n    });\n}\nfunction deadline(p, millis = 1000) {\n    const err = new Error(`deadline exceeded`);\n    const d = deferred();\n    const timer = setTimeout(()=>d.reject(err), millis);\n    return Promise.race([\n        p,\n        d\n    ]).finally(()=>clearTimeout(timer));\n}\nfunction deferred() {\n    let methods = {};\n    const p = new Promise((resolve, reject)=>{\n        methods = {\n            resolve,\n            reject\n        };\n    });\n    return Object.assign(p, methods);\n}\nfunction shuffle(a) {\n    for(let i = a.length - 1; i > 0; i--){\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [\n            a[j],\n            a[i]\n        ];\n    }\n    return a;\n}\nclass Perf {\n    timers;\n    measures;\n    constructor(){\n        this.timers = new Map();\n        this.measures = new Map();\n    }\n    mark(key) {\n        this.timers.set(key, performance.now());\n    }\n    measure(key, startKey, endKey) {\n        const s = this.timers.get(startKey);\n        if (s === undefined) {\n            throw new Error(`${startKey} is not defined`);\n        }\n        const e = this.timers.get(endKey);\n        if (e === undefined) {\n            throw new Error(`${endKey} is not defined`);\n        }\n        this.measures.set(key, e - s);\n    }\n    getEntries() {\n        const values = [];\n        this.measures.forEach((v, k)=>{\n            values.push({\n                name: k,\n                duration: v\n            });\n        });\n        return values;\n    }\n}\nfunction jitter(n) {\n    if (n === 0) {\n        return 0;\n    }\n    return Math.floor(n / 2 + Math.random() * n);\n}\nfunction backoff(policy = [\n    0,\n    250,\n    250,\n    500,\n    500,\n    3000,\n    5000\n]) {\n    if (!Array.isArray(policy)) {\n        policy = [\n            0,\n            250,\n            250,\n            500,\n            500,\n            3000,\n            5000\n        ];\n    }\n    const max = policy.length - 1;\n    return {\n        backoff (attempt) {\n            return jitter(attempt > max ? policy[max] : policy[attempt]);\n        }\n    };\n}\nclass DataBuffer {\n    buffers;\n    byteLength;\n    constructor(){\n        this.buffers = [];\n        this.byteLength = 0;\n    }\n    static concat(...bufs) {\n        let max = 0;\n        for(let i = 0; i < bufs.length; i++){\n            max += bufs[i].length;\n        }\n        const out = new Uint8Array(max);\n        let index = 0;\n        for(let i = 0; i < bufs.length; i++){\n            out.set(bufs[i], index);\n            index += bufs[i].length;\n        }\n        return out;\n    }\n    static fromAscii(m) {\n        if (!m) {\n            m = \"\";\n        }\n        return TE.encode(m);\n    }\n    static toAscii(a) {\n        return TD.decode(a);\n    }\n    reset() {\n        this.buffers.length = 0;\n        this.byteLength = 0;\n    }\n    pack() {\n        if (this.buffers.length > 1) {\n            const v = new Uint8Array(this.byteLength);\n            let index = 0;\n            for(let i = 0; i < this.buffers.length; i++){\n                v.set(this.buffers[i], index);\n                index += this.buffers[i].length;\n            }\n            this.buffers.length = 0;\n            this.buffers.push(v);\n        }\n    }\n    shift() {\n        if (this.buffers.length) {\n            const a = this.buffers.shift();\n            if (a) {\n                this.byteLength -= a.length;\n                return a;\n            }\n        }\n        return new Uint8Array(0);\n    }\n    drain(n) {\n        if (this.buffers.length) {\n            this.pack();\n            const v = this.buffers.pop();\n            if (v) {\n                const max = this.byteLength;\n                if (n === undefined || n > max) {\n                    n = max;\n                }\n                const d = v.subarray(0, n);\n                if (max > n) {\n                    this.buffers.push(v.subarray(n));\n                }\n                this.byteLength = max - n;\n                return d;\n            }\n        }\n        return new Uint8Array(0);\n    }\n    fill(a, ...bufs) {\n        if (a) {\n            this.buffers.push(a);\n            this.byteLength += a.length;\n        }\n        for(let i = 0; i < bufs.length; i++){\n            if (bufs[i] && bufs[i].length) {\n                this.buffers.push(bufs[i]);\n                this.byteLength += bufs[i].length;\n            }\n        }\n    }\n    peek() {\n        if (this.buffers.length) {\n            this.pack();\n            return this.buffers[0];\n        }\n        return new Uint8Array(0);\n    }\n    size() {\n        return this.byteLength;\n    }\n    length() {\n        return this.buffers.length;\n    }\n}\nlet transportConfig;\nfunction setTransportFactory(config) {\n    transportConfig = config;\n}\nfunction defaultPort() {\n    return transportConfig !== undefined && transportConfig.defaultPort !== undefined ? transportConfig.defaultPort : 4222;\n}\nfunction getUrlParseFn() {\n    return transportConfig !== undefined && transportConfig.urlParseFn ? transportConfig.urlParseFn : undefined;\n}\nfunction newTransport() {\n    if (!transportConfig || typeof transportConfig.factory !== \"function\") {\n        throw new Error(\"transport fn is not set\");\n    }\n    return transportConfig.factory();\n}\nfunction getResolveFn() {\n    return transportConfig !== undefined && transportConfig.dnsResolveFn ? transportConfig.dnsResolveFn : undefined;\n}\nconst CR_LF = \"\\r\\n\";\nCR_LF.length;\nconst CRLF = DataBuffer.fromAscii(CR_LF);\nconst CR = new Uint8Array(CRLF)[0];\nconst LF = new Uint8Array(CRLF)[1];\nfunction protoLen(ba) {\n    for(let i = 0; i < ba.length; i++){\n        const n = i + 1;\n        if (ba.byteLength > n && ba[i] === CR && ba[n] === LF) {\n            return n + 1;\n        }\n    }\n    return 0;\n}\nfunction extractProtocolMessage(a) {\n    const len = protoLen(a);\n    if (len > 0) {\n        const ba = new Uint8Array(a);\n        const out = ba.slice(0, len);\n        return TD.decode(out);\n    }\n    return \"\";\n}\nconst IPv4LEN = 4;\nconst ASCII0 = 48;\nconst ASCIIA = 65;\nconst ASCIIa = 97;\nfunction ipV4(a, b, c, d) {\n    const ip = new Uint8Array(16);\n    const prefix = [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0xff,\n        0xff\n    ];\n    prefix.forEach((v, idx)=>{\n        ip[idx] = v;\n    });\n    ip[12] = a;\n    ip[13] = b;\n    ip[14] = c;\n    ip[15] = d;\n    return ip;\n}\nfunction isIP(h) {\n    return parseIP(h) !== undefined;\n}\nfunction parseIP(h) {\n    for(let i = 0; i < h.length; i++){\n        switch(h[i]){\n            case \".\":\n                return parseIPv4(h);\n            case \":\":\n                return parseIPv6(h);\n        }\n    }\n    return;\n}\nfunction parseIPv4(s) {\n    const ip = new Uint8Array(4);\n    for(let i = 0; i < 4; i++){\n        if (s.length === 0) {\n            return undefined;\n        }\n        if (i > 0) {\n            if (s[0] !== \".\") {\n                return undefined;\n            }\n            s = s.substring(1);\n        }\n        const { n, c, ok } = dtoi(s);\n        if (!ok || n > 0xFF) {\n            return undefined;\n        }\n        s = s.substring(c);\n        ip[i] = n;\n    }\n    return ipV4(ip[0], ip[1], ip[2], ip[3]);\n}\nfunction parseIPv6(s) {\n    const ip = new Uint8Array(16);\n    let ellipsis = -1;\n    if (s.length >= 2 && s[0] === \":\" && s[1] === \":\") {\n        ellipsis = 0;\n        s = s.substring(2);\n        if (s.length === 0) {\n            return ip;\n        }\n    }\n    let i = 0;\n    while(i < 16){\n        const { n, c, ok } = xtoi(s);\n        if (!ok || n > 0xFFFF) {\n            return undefined;\n        }\n        if (c < s.length && s[c] === \".\") {\n            if (ellipsis < 0 && i != 16 - 4) {\n                return undefined;\n            }\n            if (i + 4 > 16) {\n                return undefined;\n            }\n            const ip4 = parseIPv4(s);\n            if (ip4 === undefined) {\n                return undefined;\n            }\n            ip[i] = ip4[12];\n            ip[i + 1] = ip4[13];\n            ip[i + 2] = ip4[14];\n            ip[i + 3] = ip4[15];\n            s = \"\";\n            i += IPv4LEN;\n            break;\n        }\n        ip[i] = n >> 8;\n        ip[i + 1] = n;\n        i += 2;\n        s = s.substring(c);\n        if (s.length === 0) {\n            break;\n        }\n        if (s[0] !== \":\" || s.length == 1) {\n            return undefined;\n        }\n        s = s.substring(1);\n        if (s[0] === \":\") {\n            if (ellipsis >= 0) {\n                return undefined;\n            }\n            ellipsis = i;\n            s = s.substring(1);\n            if (s.length === 0) {\n                break;\n            }\n        }\n    }\n    if (s.length !== 0) {\n        return undefined;\n    }\n    if (i < 16) {\n        if (ellipsis < 0) {\n            return undefined;\n        }\n        const n = 16 - i;\n        for(let j = i - 1; j >= ellipsis; j--){\n            ip[j + n] = ip[j];\n        }\n        for(let j = ellipsis + n - 1; j >= ellipsis; j--){\n            ip[j] = 0;\n        }\n    } else if (ellipsis >= 0) {\n        return undefined;\n    }\n    return ip;\n}\nfunction dtoi(s) {\n    let i = 0;\n    let n = 0;\n    for(i = 0; i < s.length && 48 <= s.charCodeAt(i) && s.charCodeAt(i) <= 57; i++){\n        n = n * 10 + (s.charCodeAt(i) - ASCII0);\n        if (n >= 0xFFFFFF) {\n            return {\n                n: 0xFFFFFF,\n                c: i,\n                ok: false\n            };\n        }\n    }\n    if (i === 0) {\n        return {\n            n: 0,\n            c: 0,\n            ok: false\n        };\n    }\n    return {\n        n: n,\n        c: i,\n        ok: true\n    };\n}\nfunction xtoi(s) {\n    let n = 0;\n    let i = 0;\n    for(i = 0; i < s.length; i++){\n        if (48 <= s.charCodeAt(i) && s.charCodeAt(i) <= 57) {\n            n *= 16;\n            n += s.charCodeAt(i) - ASCII0;\n        } else if (97 <= s.charCodeAt(i) && s.charCodeAt(i) <= 102) {\n            n *= 16;\n            n += s.charCodeAt(i) - ASCIIa + 10;\n        } else if (65 <= s.charCodeAt(i) && s.charCodeAt(i) <= 70) {\n            n *= 16;\n            n += s.charCodeAt(i) - ASCIIA + 10;\n        } else {\n            break;\n        }\n        if (n >= 0xFFFFFF) {\n            return {\n                n: 0,\n                c: i,\n                ok: false\n            };\n        }\n    }\n    if (i === 0) {\n        return {\n            n: 0,\n            c: i,\n            ok: false\n        };\n    }\n    return {\n        n: n,\n        c: i,\n        ok: true\n    };\n}\nfunction isIPV4OrHostname(hp) {\n    if (hp.indexOf(\".\") !== -1) {\n        return true;\n    }\n    if (hp.indexOf(\"[\") !== -1 || hp.indexOf(\"::\") !== -1) {\n        return false;\n    }\n    if (hp.split(\":\").length <= 2) {\n        return true;\n    }\n    return false;\n}\nfunction isIPV6(hp) {\n    return !isIPV4OrHostname(hp);\n}\nfunction filterIpv6MappedToIpv4(hp) {\n    const prefix = \"::FFFF:\";\n    const idx = hp.toUpperCase().indexOf(prefix);\n    if (idx !== -1 && hp.indexOf(\".\") !== -1) {\n        let ip = hp.substring(idx + prefix.length);\n        ip = ip.replace(\"[\", \"\");\n        return ip.replace(\"]\", \"\");\n    }\n    return hp;\n}\nfunction hostPort(u) {\n    u = u.trim();\n    if (u.match(/^(.*:\\/\\/)(.*)/m)) {\n        u = u.replace(/^(.*:\\/\\/)(.*)/gm, \"$2\");\n    }\n    u = filterIpv6MappedToIpv4(u);\n    if (isIPV6(u) && u.indexOf(\"[\") === -1) {\n        u = `[${u}]`;\n    }\n    const op = isIPV6(u) ? u.match(/(]:)(\\d+)/) : u.match(/(:)(\\d+)/);\n    const port = op && op.length === 3 && op[1] && op[2] ? parseInt(op[2]) : 4222;\n    const protocol = port === 80 ? \"https\" : \"http\";\n    const url = new URL(`${protocol}://${u}`);\n    url.port = `${port}`;\n    let hostname = url.hostname;\n    if (hostname.charAt(0) === \"[\") {\n        hostname = hostname.substring(1, hostname.length - 1);\n    }\n    const listen = url.host;\n    return {\n        listen,\n        hostname,\n        port\n    };\n}\nclass ServerImpl {\n    src;\n    listen;\n    hostname;\n    port;\n    didConnect;\n    reconnects;\n    lastConnect;\n    gossiped;\n    tlsName;\n    resolves;\n    constructor(u, gossiped = false){\n        this.src = u;\n        this.tlsName = \"\";\n        const v = hostPort(u);\n        this.listen = v.listen;\n        this.hostname = v.hostname;\n        this.port = v.port;\n        this.didConnect = false;\n        this.reconnects = 0;\n        this.lastConnect = 0;\n        this.gossiped = gossiped;\n    }\n    toString() {\n        return this.listen;\n    }\n    async resolve(opts) {\n        if (!opts.fn) {\n            return [\n                this\n            ];\n        }\n        const buf = [];\n        if (isIP(this.hostname)) {\n            return [\n                this\n            ];\n        } else {\n            const ips = await opts.fn(this.hostname);\n            if (opts.debug) {\n                console.log(`resolve ${this.hostname} = ${ips.join(\",\")}`);\n            }\n            for (const ip of ips){\n                const proto = this.port === 80 ? \"https\" : \"http\";\n                const url = new URL(`${proto}://${isIPV6(ip) ? \"[\" + ip + \"]\" : ip}`);\n                url.port = `${this.port}`;\n                const ss = new ServerImpl(url.host, false);\n                ss.tlsName = this.hostname;\n                buf.push(ss);\n            }\n        }\n        if (opts.randomize) {\n            shuffle(buf);\n        }\n        this.resolves = buf;\n        return buf;\n    }\n}\nclass Servers {\n    firstSelect;\n    servers;\n    currentServer;\n    tlsName;\n    randomize;\n    constructor(listens = [], opts = {}){\n        this.firstSelect = true;\n        this.servers = [];\n        this.tlsName = \"\";\n        this.randomize = opts.randomize || false;\n        const urlParseFn = getUrlParseFn();\n        if (listens) {\n            listens.forEach((hp)=>{\n                hp = urlParseFn ? urlParseFn(hp) : hp;\n                this.servers.push(new ServerImpl(hp));\n            });\n            if (this.randomize) {\n                this.servers = shuffle(this.servers);\n            }\n        }\n        if (this.servers.length === 0) {\n            this.addServer(`${DEFAULT_HOST}:${defaultPort()}`, false);\n        }\n        this.currentServer = this.servers[0];\n    }\n    clear() {\n        this.servers.length = 0;\n    }\n    updateTLSName() {\n        const cs = this.getCurrentServer();\n        if (!isIP(cs.hostname)) {\n            this.tlsName = cs.hostname;\n            this.servers.forEach((s)=>{\n                if (s.gossiped) {\n                    s.tlsName = this.tlsName;\n                }\n            });\n        }\n    }\n    getCurrentServer() {\n        return this.currentServer;\n    }\n    addServer(u, implicit = false) {\n        const urlParseFn = getUrlParseFn();\n        u = urlParseFn ? urlParseFn(u) : u;\n        const s = new ServerImpl(u, implicit);\n        if (isIP(s.hostname)) {\n            s.tlsName = this.tlsName;\n        }\n        this.servers.push(s);\n    }\n    selectServer() {\n        if (this.firstSelect) {\n            this.firstSelect = false;\n            return this.currentServer;\n        }\n        const t = this.servers.shift();\n        if (t) {\n            this.servers.push(t);\n            this.currentServer = t;\n        }\n        return t;\n    }\n    removeCurrentServer() {\n        this.removeServer(this.currentServer);\n    }\n    removeServer(server) {\n        if (server) {\n            const index = this.servers.indexOf(server);\n            this.servers.splice(index, 1);\n        }\n    }\n    length() {\n        return this.servers.length;\n    }\n    next() {\n        return this.servers.length ? this.servers[0] : undefined;\n    }\n    getServers() {\n        return this.servers;\n    }\n    update(info) {\n        const added = [];\n        let deleted = [];\n        const urlParseFn = getUrlParseFn();\n        const discovered = new Map();\n        if (info.connect_urls && info.connect_urls.length > 0) {\n            info.connect_urls.forEach((hp)=>{\n                hp = urlParseFn ? urlParseFn(hp) : hp;\n                const s = new ServerImpl(hp, true);\n                discovered.set(hp, s);\n            });\n        }\n        const toDelete = [];\n        this.servers.forEach((s, index)=>{\n            const u = s.listen;\n            if (s.gossiped && this.currentServer.listen !== u && discovered.get(u) === undefined) {\n                toDelete.push(index);\n            }\n            discovered.delete(u);\n        });\n        toDelete.reverse();\n        toDelete.forEach((index)=>{\n            const removed = this.servers.splice(index, 1);\n            deleted = deleted.concat(removed[0].listen);\n        });\n        discovered.forEach((v, k)=>{\n            this.servers.push(v);\n            added.push(k);\n        });\n        return {\n            added,\n            deleted\n        };\n    }\n}\nclass QueuedIteratorImpl {\n    inflight;\n    processed;\n    received;\n    noIterator;\n    iterClosed;\n    done;\n    signal;\n    yields;\n    filtered;\n    pendingFiltered;\n    ingestionFilterFn;\n    protocolFilterFn;\n    dispatchedFn;\n    ctx;\n    _data;\n    err;\n    time;\n    yielding;\n    constructor(){\n        this.inflight = 0;\n        this.filtered = 0;\n        this.pendingFiltered = 0;\n        this.processed = 0;\n        this.received = 0;\n        this.noIterator = false;\n        this.done = false;\n        this.signal = deferred();\n        this.yields = [];\n        this.iterClosed = deferred();\n        this.time = 0;\n        this.yielding = false;\n    }\n    [Symbol.asyncIterator]() {\n        return this.iterate();\n    }\n    push(v) {\n        if (this.done) {\n            return;\n        }\n        if (typeof v === \"function\") {\n            this.yields.push(v);\n            this.signal.resolve();\n            return;\n        }\n        const { ingest, protocol } = this.ingestionFilterFn ? this.ingestionFilterFn(v, this.ctx || this) : {\n            ingest: true,\n            protocol: false\n        };\n        if (ingest) {\n            if (protocol) {\n                this.filtered++;\n                this.pendingFiltered++;\n            }\n            this.yields.push(v);\n            this.signal.resolve();\n        }\n    }\n    async *iterate() {\n        if (this.noIterator) {\n            throw new NatsError(\"unsupported iterator\", ErrorCode.ApiError);\n        }\n        if (this.yielding) {\n            throw new NatsError(\"already yielding\", ErrorCode.ApiError);\n        }\n        this.yielding = true;\n        try {\n            while(true){\n                if (this.yields.length === 0) {\n                    await this.signal;\n                }\n                if (this.err) {\n                    throw this.err;\n                }\n                const yields = this.yields;\n                this.inflight = yields.length;\n                this.yields = [];\n                for(let i = 0; i < yields.length; i++){\n                    if (typeof yields[i] === \"function\") {\n                        const fn = yields[i];\n                        try {\n                            fn();\n                        } catch (err) {\n                            throw err;\n                        }\n                        if (this.err) {\n                            throw this.err;\n                        }\n                        continue;\n                    }\n                    const ok = this.protocolFilterFn ? this.protocolFilterFn(yields[i]) : true;\n                    if (ok) {\n                        this.processed++;\n                        const start = Date.now();\n                        yield yields[i];\n                        this.time = Date.now() - start;\n                        if (this.dispatchedFn && yields[i]) {\n                            this.dispatchedFn(yields[i]);\n                        }\n                    } else {\n                        this.pendingFiltered--;\n                    }\n                    this.inflight--;\n                }\n                if (this.done) {\n                    break;\n                } else if (this.yields.length === 0) {\n                    yields.length = 0;\n                    this.yields = yields;\n                    this.signal = deferred();\n                }\n            }\n        } finally{\n            this.stop();\n        }\n    }\n    stop(err) {\n        if (this.done) {\n            return;\n        }\n        this.err = err;\n        this.done = true;\n        this.signal.resolve();\n        this.iterClosed.resolve();\n    }\n    getProcessed() {\n        return this.noIterator ? this.received : this.processed;\n    }\n    getPending() {\n        return this.yields.length + this.inflight - this.pendingFiltered;\n    }\n    getReceived() {\n        return this.received - this.filtered;\n    }\n}\nfunction canonicalMIMEHeaderKey(k) {\n    const dash = 45;\n    const toLower = 97 - 65;\n    let upper = true;\n    const buf = new Array(k.length);\n    for(let i = 0; i < k.length; i++){\n        let c = k.charCodeAt(i);\n        if (c === 58 || c < 33 || c > 126) {\n            throw new NatsError(`'${k[i]}' is not a valid character for a header key`, ErrorCode.BadHeader);\n        }\n        if (upper && 97 <= c && c <= 122) {\n            c -= toLower;\n        } else if (!upper && 65 <= c && c <= 90) {\n            c += toLower;\n        }\n        buf[i] = c;\n        upper = c == dash;\n    }\n    return String.fromCharCode(...buf);\n}\nfunction headers(code = 0, description = \"\") {\n    if (code === 0 && description !== \"\" || code > 0 && description === \"\") {\n        throw new Error(\"setting status requires both code and description\");\n    }\n    return new MsgHdrsImpl(code, description);\n}\nconst HEADER = \"NATS/1.0\";\nclass MsgHdrsImpl {\n    _code;\n    headers;\n    _description;\n    constructor(code = 0, description = \"\"){\n        this._code = code;\n        this._description = description;\n        this.headers = new Map();\n    }\n    [Symbol.iterator]() {\n        return this.headers.entries();\n    }\n    size() {\n        return this.headers.size;\n    }\n    equals(mh) {\n        if (mh && this.headers.size === mh.headers.size && this._code === mh._code) {\n            for (const [k, v] of this.headers){\n                const a = mh.values(k);\n                if (v.length !== a.length) {\n                    return false;\n                }\n                const vv = [\n                    ...v\n                ].sort();\n                const aa = [\n                    ...a\n                ].sort();\n                for(let i = 0; i < vv.length; i++){\n                    if (vv[i] !== aa[i]) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    static decode(a) {\n        const mh = new MsgHdrsImpl();\n        const s = TD.decode(a);\n        const lines = s.split(\"\\r\\n\");\n        const h = lines[0];\n        if (h !== HEADER) {\n            let str = h.replace(HEADER, \"\").trim();\n            if (str.length > 0) {\n                mh._code = parseInt(str, 10);\n                if (isNaN(mh._code)) {\n                    mh._code = 0;\n                }\n                const scode = mh._code.toString();\n                str = str.replace(scode, \"\");\n                mh._description = str.trim();\n            }\n        }\n        if (lines.length >= 1) {\n            lines.slice(1).map((s)=>{\n                if (s) {\n                    const idx = s.indexOf(\":\");\n                    if (idx > -1) {\n                        const k = s.slice(0, idx);\n                        const v = s.slice(idx + 1).trim();\n                        mh.append(k, v);\n                    }\n                }\n            });\n        }\n        return mh;\n    }\n    toString() {\n        if (this.headers.size === 0 && this._code === 0) {\n            return \"\";\n        }\n        let s = HEADER;\n        if (this._code > 0 && this._description !== \"\") {\n            s += ` ${this._code} ${this._description}`;\n        }\n        for (const [k, v] of this.headers){\n            for(let i = 0; i < v.length; i++){\n                s = `${s}\\r\\n${k}: ${v[i]}`;\n            }\n        }\n        return `${s}\\r\\n\\r\\n`;\n    }\n    encode() {\n        return TE.encode(this.toString());\n    }\n    static validHeaderValue(k) {\n        const inv = /[\\r\\n]/;\n        if (inv.test(k)) {\n            throw new NatsError(\"invalid header value - \\\\r and \\\\n are not allowed.\", ErrorCode.BadHeader);\n        }\n        return k.trim();\n    }\n    keys() {\n        const keys = [];\n        for (const sk of this.headers.keys()){\n            keys.push(sk);\n        }\n        return keys;\n    }\n    findKeys(k, match = Match.Exact) {\n        const keys = this.keys();\n        switch(match){\n            case Match.Exact:\n                return keys.filter((v)=>{\n                    return v === k;\n                });\n            case Match.CanonicalMIME:\n                k = canonicalMIMEHeaderKey(k);\n                return keys.filter((v)=>{\n                    return v === k;\n                });\n            default:\n                {\n                    const lci = k.toLowerCase();\n                    return keys.filter((v)=>{\n                        return lci === v.toLowerCase();\n                    });\n                }\n        }\n    }\n    get(k, match = Match.Exact) {\n        const keys = this.findKeys(k, match);\n        if (keys.length) {\n            const v = this.headers.get(keys[0]);\n            if (v) {\n                return Array.isArray(v) ? v[0] : v;\n            }\n        }\n        return \"\";\n    }\n    last(k, match = Match.Exact) {\n        const keys = this.findKeys(k, match);\n        if (keys.length) {\n            const v = this.headers.get(keys[0]);\n            if (v) {\n                return Array.isArray(v) ? v[v.length - 1] : v;\n            }\n        }\n        return \"\";\n    }\n    has(k, match = Match.Exact) {\n        return this.findKeys(k, match).length > 0;\n    }\n    set(k, v, match = Match.Exact) {\n        this.delete(k, match);\n        this.append(k, v, match);\n    }\n    append(k, v, match = Match.Exact) {\n        const ck = canonicalMIMEHeaderKey(k);\n        if (match === Match.CanonicalMIME) {\n            k = ck;\n        }\n        const keys = this.findKeys(k, match);\n        k = keys.length > 0 ? keys[0] : k;\n        const value = MsgHdrsImpl.validHeaderValue(v);\n        let a = this.headers.get(k);\n        if (!a) {\n            a = [];\n            this.headers.set(k, a);\n        }\n        a.push(value);\n    }\n    values(k, match = Match.Exact) {\n        const buf = [];\n        const keys = this.findKeys(k, match);\n        keys.forEach((v)=>{\n            const values = this.headers.get(v);\n            if (values) {\n                buf.push(...values);\n            }\n        });\n        return buf;\n    }\n    delete(k, match = Match.Exact) {\n        const keys = this.findKeys(k, match);\n        keys.forEach((v)=>{\n            this.headers.delete(v);\n        });\n    }\n    get hasError() {\n        return this._code >= 300;\n    }\n    get status() {\n        return `${this._code} ${this._description}`.trim();\n    }\n    toRecord() {\n        const data = {};\n        this.keys().forEach((v)=>{\n            data[v] = this.values(v);\n        });\n        return data;\n    }\n    get code() {\n        return this._code;\n    }\n    get description() {\n        return this._description;\n    }\n    static fromRecord(r) {\n        const h = new MsgHdrsImpl();\n        for(const k in r){\n            h.headers.set(k, r[k]);\n        }\n        return h;\n    }\n}\nfunction StringCodec() {\n    return {\n        encode (d) {\n            return TE.encode(d);\n        },\n        decode (a) {\n            return TD.decode(a);\n        }\n    };\n}\nfunction JSONCodec(reviver) {\n    return {\n        encode (d) {\n            try {\n                if (d === undefined) {\n                    d = null;\n                }\n                return TE.encode(JSON.stringify(d));\n            } catch (err) {\n                throw NatsError.errorForCode(ErrorCode.BadJson, err);\n            }\n        },\n        decode (a) {\n            try {\n                return JSON.parse(TD.decode(a), reviver);\n            } catch (err) {\n                throw NatsError.errorForCode(ErrorCode.BadJson, err);\n            }\n        }\n    };\n}\nfunction isRequestError(msg) {\n    if (msg && msg.data.length === 0 && msg.headers?.code === 503) {\n        return NatsError.errorForCode(ErrorCode.NoResponders);\n    }\n    return null;\n}\nclass MsgImpl {\n    _headers;\n    _msg;\n    _rdata;\n    _reply;\n    _subject;\n    publisher;\n    static jc;\n    constructor(msg, data, publisher){\n        this._msg = msg;\n        this._rdata = data;\n        this.publisher = publisher;\n    }\n    get subject() {\n        if (this._subject) {\n            return this._subject;\n        }\n        this._subject = TD.decode(this._msg.subject);\n        return this._subject;\n    }\n    get reply() {\n        if (this._reply) {\n            return this._reply;\n        }\n        this._reply = TD.decode(this._msg.reply);\n        return this._reply;\n    }\n    get sid() {\n        return this._msg.sid;\n    }\n    get headers() {\n        if (this._msg.hdr > -1 && !this._headers) {\n            const buf = this._rdata.subarray(0, this._msg.hdr);\n            this._headers = MsgHdrsImpl.decode(buf);\n        }\n        return this._headers;\n    }\n    get data() {\n        if (!this._rdata) {\n            return new Uint8Array(0);\n        }\n        return this._msg.hdr > -1 ? this._rdata.subarray(this._msg.hdr) : this._rdata;\n    }\n    respond(data = Empty, opts) {\n        if (this.reply) {\n            this.publisher.publish(this.reply, data, opts);\n            return true;\n        }\n        return false;\n    }\n    size() {\n        const subj = this._msg.subject.length;\n        const reply = this._msg.reply?.length || 0;\n        const payloadAndHeaders = this._msg.size === -1 ? 0 : this._msg.size;\n        return subj + reply + payloadAndHeaders;\n    }\n    json(reviver) {\n        return JSONCodec(reviver).decode(this.data);\n    }\n    string() {\n        return TD.decode(this.data);\n    }\n}\nclass MuxSubscription {\n    baseInbox;\n    reqs;\n    constructor(){\n        this.reqs = new Map();\n    }\n    size() {\n        return this.reqs.size;\n    }\n    init(prefix) {\n        this.baseInbox = `${createInbox(prefix)}.`;\n        return this.baseInbox;\n    }\n    add(r) {\n        if (!isNaN(r.received)) {\n            r.received = 0;\n        }\n        this.reqs.set(r.token, r);\n    }\n    get(token) {\n        return this.reqs.get(token);\n    }\n    cancel(r) {\n        this.reqs.delete(r.token);\n    }\n    getToken(m) {\n        const s = m.subject || \"\";\n        if (s.indexOf(this.baseInbox) === 0) {\n            return s.substring(this.baseInbox.length);\n        }\n        return null;\n    }\n    all() {\n        return Array.from(this.reqs.values());\n    }\n    handleError(isMuxPermissionError, err) {\n        if (err && err.permissionContext) {\n            if (isMuxPermissionError) {\n                this.all().forEach((r)=>{\n                    r.resolver(err, {});\n                });\n                return true;\n            }\n            const ctx = err.permissionContext;\n            if (ctx.operation === \"publish\") {\n                const req = this.all().find((s)=>{\n                    return s.requestSubject === ctx.subject;\n                });\n                if (req) {\n                    req.resolver(err, {});\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    dispatcher() {\n        return (err, m)=>{\n            const token = this.getToken(m);\n            if (token) {\n                const r = this.get(token);\n                if (r) {\n                    if (err === null && m.headers) {\n                        err = isRequestError(m);\n                    }\n                    r.resolver(err, m);\n                }\n            }\n        };\n    }\n    close() {\n        const err = NatsError.errorForCode(ErrorCode.Timeout);\n        this.reqs.forEach((req)=>{\n            req.resolver(err, {});\n        });\n    }\n}\nclass Heartbeat {\n    ph;\n    interval;\n    maxOut;\n    timer;\n    pendings;\n    constructor(ph, interval, maxOut){\n        this.ph = ph;\n        this.interval = interval;\n        this.maxOut = maxOut;\n        this.pendings = [];\n    }\n    start() {\n        this.cancel();\n        this._schedule();\n    }\n    cancel(stale) {\n        if (this.timer) {\n            clearTimeout(this.timer);\n            this.timer = undefined;\n        }\n        this._reset();\n        if (stale) {\n            this.ph.disconnect();\n        }\n    }\n    _schedule() {\n        this.timer = setTimeout(()=>{\n            this.ph.dispatchStatus({\n                type: DebugEvents.PingTimer,\n                data: `${this.pendings.length + 1}`\n            });\n            if (this.pendings.length === this.maxOut) {\n                this.cancel(true);\n                return;\n            }\n            const ping = deferred();\n            this.ph.flush(ping).then(()=>{\n                this._reset();\n            }).catch(()=>{\n                this.cancel();\n            });\n            this.pendings.push(ping);\n            this._schedule();\n        }, this.interval);\n    }\n    _reset() {\n        this.pendings = this.pendings.filter((p)=>{\n            const d = p;\n            d.resolve();\n            return false;\n        });\n    }\n}\nclass AssertionError extends Error {\n    constructor(msg){\n        super(msg);\n        this.name = \"AssertionError\";\n    }\n}\nfunction assert(cond, msg = \"Assertion failed.\") {\n    if (!cond) {\n        throw new AssertionError(msg);\n    }\n}\nconst MIN_READ = 32 * 1024;\nconst MAX_SIZE = 2 ** 32 - 2;\nfunction copy(src, dst, off = 0) {\n    const r = dst.byteLength - off;\n    if (src.byteLength > r) {\n        src = src.subarray(0, r);\n    }\n    dst.set(src, off);\n    return src.byteLength;\n}\nclass DenoBuffer {\n    _buf;\n    _off;\n    constructor(ab){\n        this._off = 0;\n        if (ab == null) {\n            this._buf = new Uint8Array(0);\n            return;\n        }\n        this._buf = new Uint8Array(ab);\n    }\n    bytes(options = {\n        copy: true\n    }) {\n        if (options.copy === false) return this._buf.subarray(this._off);\n        return this._buf.slice(this._off);\n    }\n    empty() {\n        return this._buf.byteLength <= this._off;\n    }\n    get length() {\n        return this._buf.byteLength - this._off;\n    }\n    get capacity() {\n        return this._buf.buffer.byteLength;\n    }\n    truncate(n) {\n        if (n === 0) {\n            this.reset();\n            return;\n        }\n        if (n < 0 || n > this.length) {\n            throw Error(\"bytes.Buffer: truncation out of range\");\n        }\n        this._reslice(this._off + n);\n    }\n    reset() {\n        this._reslice(0);\n        this._off = 0;\n    }\n    _tryGrowByReslice(n) {\n        const l = this._buf.byteLength;\n        if (n <= this.capacity - l) {\n            this._reslice(l + n);\n            return l;\n        }\n        return -1;\n    }\n    _reslice(len) {\n        assert(len <= this._buf.buffer.byteLength);\n        this._buf = new Uint8Array(this._buf.buffer, 0, len);\n    }\n    readByte() {\n        const a = new Uint8Array(1);\n        if (this.read(a)) {\n            return a[0];\n        }\n        return null;\n    }\n    read(p) {\n        if (this.empty()) {\n            this.reset();\n            if (p.byteLength === 0) {\n                return 0;\n            }\n            return null;\n        }\n        const nread = copy(this._buf.subarray(this._off), p);\n        this._off += nread;\n        return nread;\n    }\n    writeByte(n) {\n        return this.write(Uint8Array.of(n));\n    }\n    writeString(s) {\n        return this.write(TE.encode(s));\n    }\n    write(p) {\n        const m = this._grow(p.byteLength);\n        return copy(p, this._buf, m);\n    }\n    _grow(n) {\n        const m = this.length;\n        if (m === 0 && this._off !== 0) {\n            this.reset();\n        }\n        const i = this._tryGrowByReslice(n);\n        if (i >= 0) {\n            return i;\n        }\n        const c = this.capacity;\n        if (n <= Math.floor(c / 2) - m) {\n            copy(this._buf.subarray(this._off), this._buf);\n        } else if (c + n > MAX_SIZE) {\n            throw new Error(\"The buffer cannot be grown beyond the maximum size.\");\n        } else {\n            const buf = new Uint8Array(Math.min(2 * c + n, MAX_SIZE));\n            copy(this._buf.subarray(this._off), buf);\n            this._buf = buf;\n        }\n        this._off = 0;\n        this._reslice(Math.min(m + n, MAX_SIZE));\n        return m;\n    }\n    grow(n) {\n        if (n < 0) {\n            throw Error(\"Buffer._grow: negative count\");\n        }\n        const m = this._grow(n);\n        this._reslice(m);\n    }\n    readFrom(r) {\n        let n = 0;\n        const tmp = new Uint8Array(MIN_READ);\n        while(true){\n            const shouldGrow = this.capacity - this.length < MIN_READ;\n            const buf = shouldGrow ? tmp : new Uint8Array(this._buf.buffer, this.length);\n            const nread = r.read(buf);\n            if (nread === null) {\n                return n;\n            }\n            if (shouldGrow) this.write(buf.subarray(0, nread));\n            else this._reslice(this.length + nread);\n            n += nread;\n        }\n    }\n}\nvar Kind;\n(function(Kind) {\n    Kind[Kind[\"OK\"] = 0] = \"OK\";\n    Kind[Kind[\"ERR\"] = 1] = \"ERR\";\n    Kind[Kind[\"MSG\"] = 2] = \"MSG\";\n    Kind[Kind[\"INFO\"] = 3] = \"INFO\";\n    Kind[Kind[\"PING\"] = 4] = \"PING\";\n    Kind[Kind[\"PONG\"] = 5] = \"PONG\";\n})(Kind || (Kind = {}));\nfunction newMsgArg() {\n    const ma = {};\n    ma.sid = -1;\n    ma.hdr = -1;\n    ma.size = -1;\n    return ma;\n}\nconst ASCII_0 = 48;\nclass Parser {\n    dispatcher;\n    state;\n    as;\n    drop;\n    hdr;\n    ma;\n    argBuf;\n    msgBuf;\n    constructor(dispatcher){\n        this.dispatcher = dispatcher;\n        this.state = State.OP_START;\n        this.as = 0;\n        this.drop = 0;\n        this.hdr = 0;\n    }\n    parse(buf) {\n        let i;\n        for(i = 0; i < buf.length; i++){\n            const b = buf[i];\n            switch(this.state){\n                case State.OP_START:\n                    switch(b){\n                        case cc.M:\n                        case cc.m:\n                            this.state = State.OP_M;\n                            this.hdr = -1;\n                            this.ma = newMsgArg();\n                            break;\n                        case cc.H:\n                        case cc.h:\n                            this.state = State.OP_H;\n                            this.hdr = 0;\n                            this.ma = newMsgArg();\n                            break;\n                        case cc.P:\n                        case cc.p:\n                            this.state = State.OP_P;\n                            break;\n                        case cc.PLUS:\n                            this.state = State.OP_PLUS;\n                            break;\n                        case cc.MINUS:\n                            this.state = State.OP_MINUS;\n                            break;\n                        case cc.I:\n                        case cc.i:\n                            this.state = State.OP_I;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_H:\n                    switch(b){\n                        case cc.M:\n                        case cc.m:\n                            this.state = State.OP_M;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_M:\n                    switch(b){\n                        case cc.S:\n                        case cc.s:\n                            this.state = State.OP_MS;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_MS:\n                    switch(b){\n                        case cc.G:\n                        case cc.g:\n                            this.state = State.OP_MSG;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_MSG:\n                    switch(b){\n                        case cc.SPACE:\n                        case cc.TAB:\n                            this.state = State.OP_MSG_SPC;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_MSG_SPC:\n                    switch(b){\n                        case cc.SPACE:\n                        case cc.TAB:\n                            continue;\n                        default:\n                            this.state = State.MSG_ARG;\n                            this.as = i;\n                    }\n                    break;\n                case State.MSG_ARG:\n                    switch(b){\n                        case cc.CR:\n                            this.drop = 1;\n                            break;\n                        case cc.NL:\n                            {\n                                const arg = this.argBuf ? this.argBuf.bytes() : buf.subarray(this.as, i - this.drop);\n                                this.processMsgArgs(arg);\n                                this.drop = 0;\n                                this.as = i + 1;\n                                this.state = State.MSG_PAYLOAD;\n                                i = this.as + this.ma.size - 1;\n                                break;\n                            }\n                        default:\n                            if (this.argBuf) {\n                                this.argBuf.writeByte(b);\n                            }\n                    }\n                    break;\n                case State.MSG_PAYLOAD:\n                    if (this.msgBuf) {\n                        if (this.msgBuf.length >= this.ma.size) {\n                            const data = this.msgBuf.bytes({\n                                copy: false\n                            });\n                            this.dispatcher.push({\n                                kind: Kind.MSG,\n                                msg: this.ma,\n                                data: data\n                            });\n                            this.argBuf = undefined;\n                            this.msgBuf = undefined;\n                            this.state = State.MSG_END;\n                        } else {\n                            let toCopy = this.ma.size - this.msgBuf.length;\n                            const avail = buf.length - i;\n                            if (avail < toCopy) {\n                                toCopy = avail;\n                            }\n                            if (toCopy > 0) {\n                                this.msgBuf.write(buf.subarray(i, i + toCopy));\n                                i = i + toCopy - 1;\n                            } else {\n                                this.msgBuf.writeByte(b);\n                            }\n                        }\n                    } else if (i - this.as >= this.ma.size) {\n                        this.dispatcher.push({\n                            kind: Kind.MSG,\n                            msg: this.ma,\n                            data: buf.subarray(this.as, i)\n                        });\n                        this.argBuf = undefined;\n                        this.msgBuf = undefined;\n                        this.state = State.MSG_END;\n                    }\n                    break;\n                case State.MSG_END:\n                    switch(b){\n                        case cc.NL:\n                            this.drop = 0;\n                            this.as = i + 1;\n                            this.state = State.OP_START;\n                            break;\n                        default:\n                            continue;\n                    }\n                    break;\n                case State.OP_PLUS:\n                    switch(b){\n                        case cc.O:\n                        case cc.o:\n                            this.state = State.OP_PLUS_O;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_PLUS_O:\n                    switch(b){\n                        case cc.K:\n                        case cc.k:\n                            this.state = State.OP_PLUS_OK;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_PLUS_OK:\n                    switch(b){\n                        case cc.NL:\n                            this.dispatcher.push({\n                                kind: Kind.OK\n                            });\n                            this.drop = 0;\n                            this.state = State.OP_START;\n                            break;\n                    }\n                    break;\n                case State.OP_MINUS:\n                    switch(b){\n                        case cc.E:\n                        case cc.e:\n                            this.state = State.OP_MINUS_E;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_MINUS_E:\n                    switch(b){\n                        case cc.R:\n                        case cc.r:\n                            this.state = State.OP_MINUS_ER;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_MINUS_ER:\n                    switch(b){\n                        case cc.R:\n                        case cc.r:\n                            this.state = State.OP_MINUS_ERR;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_MINUS_ERR:\n                    switch(b){\n                        case cc.SPACE:\n                        case cc.TAB:\n                            this.state = State.OP_MINUS_ERR_SPC;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_MINUS_ERR_SPC:\n                    switch(b){\n                        case cc.SPACE:\n                        case cc.TAB:\n                            continue;\n                        default:\n                            this.state = State.MINUS_ERR_ARG;\n                            this.as = i;\n                    }\n                    break;\n                case State.MINUS_ERR_ARG:\n                    switch(b){\n                        case cc.CR:\n                            this.drop = 1;\n                            break;\n                        case cc.NL:\n                            {\n                                let arg;\n                                if (this.argBuf) {\n                                    arg = this.argBuf.bytes();\n                                    this.argBuf = undefined;\n                                } else {\n                                    arg = buf.subarray(this.as, i - this.drop);\n                                }\n                                this.dispatcher.push({\n                                    kind: Kind.ERR,\n                                    data: arg\n                                });\n                                this.drop = 0;\n                                this.as = i + 1;\n                                this.state = State.OP_START;\n                                break;\n                            }\n                        default:\n                            if (this.argBuf) {\n                                this.argBuf.write(Uint8Array.of(b));\n                            }\n                    }\n                    break;\n                case State.OP_P:\n                    switch(b){\n                        case cc.I:\n                        case cc.i:\n                            this.state = State.OP_PI;\n                            break;\n                        case cc.O:\n                        case cc.o:\n                            this.state = State.OP_PO;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_PO:\n                    switch(b){\n                        case cc.N:\n                        case cc.n:\n                            this.state = State.OP_PON;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_PON:\n                    switch(b){\n                        case cc.G:\n                        case cc.g:\n                            this.state = State.OP_PONG;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_PONG:\n                    switch(b){\n                        case cc.NL:\n                            this.dispatcher.push({\n                                kind: Kind.PONG\n                            });\n                            this.drop = 0;\n                            this.state = State.OP_START;\n                            break;\n                    }\n                    break;\n                case State.OP_PI:\n                    switch(b){\n                        case cc.N:\n                        case cc.n:\n                            this.state = State.OP_PIN;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_PIN:\n                    switch(b){\n                        case cc.G:\n                        case cc.g:\n                            this.state = State.OP_PING;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_PING:\n                    switch(b){\n                        case cc.NL:\n                            this.dispatcher.push({\n                                kind: Kind.PING\n                            });\n                            this.drop = 0;\n                            this.state = State.OP_START;\n                            break;\n                    }\n                    break;\n                case State.OP_I:\n                    switch(b){\n                        case cc.N:\n                        case cc.n:\n                            this.state = State.OP_IN;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_IN:\n                    switch(b){\n                        case cc.F:\n                        case cc.f:\n                            this.state = State.OP_INF;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_INF:\n                    switch(b){\n                        case cc.O:\n                        case cc.o:\n                            this.state = State.OP_INFO;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_INFO:\n                    switch(b){\n                        case cc.SPACE:\n                        case cc.TAB:\n                            this.state = State.OP_INFO_SPC;\n                            break;\n                        default:\n                            throw this.fail(buf.subarray(i));\n                    }\n                    break;\n                case State.OP_INFO_SPC:\n                    switch(b){\n                        case cc.SPACE:\n                        case cc.TAB:\n                            continue;\n                        default:\n                            this.state = State.INFO_ARG;\n                            this.as = i;\n                    }\n                    break;\n                case State.INFO_ARG:\n                    switch(b){\n                        case cc.CR:\n                            this.drop = 1;\n                            break;\n                        case cc.NL:\n                            {\n                                let arg;\n                                if (this.argBuf) {\n                                    arg = this.argBuf.bytes();\n                                    this.argBuf = undefined;\n                                } else {\n                                    arg = buf.subarray(this.as, i - this.drop);\n                                }\n                                this.dispatcher.push({\n                                    kind: Kind.INFO,\n                                    data: arg\n                                });\n                                this.drop = 0;\n                                this.as = i + 1;\n                                this.state = State.OP_START;\n                                break;\n                            }\n                        default:\n                            if (this.argBuf) {\n                                this.argBuf.writeByte(b);\n                            }\n                    }\n                    break;\n                default:\n                    throw this.fail(buf.subarray(i));\n            }\n        }\n        if ((this.state === State.MSG_ARG || this.state === State.MINUS_ERR_ARG || this.state === State.INFO_ARG) && !this.argBuf) {\n            this.argBuf = new DenoBuffer(buf.subarray(this.as, i - this.drop));\n        }\n        if (this.state === State.MSG_PAYLOAD && !this.msgBuf) {\n            if (!this.argBuf) {\n                this.cloneMsgArg();\n            }\n            this.msgBuf = new DenoBuffer(buf.subarray(this.as));\n        }\n    }\n    cloneMsgArg() {\n        const s = this.ma.subject.length;\n        const r = this.ma.reply ? this.ma.reply.length : 0;\n        const buf = new Uint8Array(s + r);\n        buf.set(this.ma.subject);\n        if (this.ma.reply) {\n            buf.set(this.ma.reply, s);\n        }\n        this.argBuf = new DenoBuffer(buf);\n        this.ma.subject = buf.subarray(0, s);\n        if (this.ma.reply) {\n            this.ma.reply = buf.subarray(s);\n        }\n    }\n    processMsgArgs(arg) {\n        if (this.hdr >= 0) {\n            return this.processHeaderMsgArgs(arg);\n        }\n        const args = [];\n        let start = -1;\n        for(let i = 0; i < arg.length; i++){\n            const b = arg[i];\n            switch(b){\n                case cc.SPACE:\n                case cc.TAB:\n                case cc.CR:\n                case cc.NL:\n                    if (start >= 0) {\n                        args.push(arg.subarray(start, i));\n                        start = -1;\n                    }\n                    break;\n                default:\n                    if (start < 0) {\n                        start = i;\n                    }\n            }\n        }\n        if (start >= 0) {\n            args.push(arg.subarray(start));\n        }\n        switch(args.length){\n            case 3:\n                this.ma.subject = args[0];\n                this.ma.sid = this.protoParseInt(args[1]);\n                this.ma.reply = undefined;\n                this.ma.size = this.protoParseInt(args[2]);\n                break;\n            case 4:\n                this.ma.subject = args[0];\n                this.ma.sid = this.protoParseInt(args[1]);\n                this.ma.reply = args[2];\n                this.ma.size = this.protoParseInt(args[3]);\n                break;\n            default:\n                throw this.fail(arg, \"processMsgArgs Parse Error\");\n        }\n        if (this.ma.sid < 0) {\n            throw this.fail(arg, \"processMsgArgs Bad or Missing Sid Error\");\n        }\n        if (this.ma.size < 0) {\n            throw this.fail(arg, \"processMsgArgs Bad or Missing Size Error\");\n        }\n    }\n    fail(data, label = \"\") {\n        if (!label) {\n            label = `parse error [${this.state}]`;\n        } else {\n            label = `${label} [${this.state}]`;\n        }\n        return new Error(`${label}: ${TD.decode(data)}`);\n    }\n    processHeaderMsgArgs(arg) {\n        const args = [];\n        let start = -1;\n        for(let i = 0; i < arg.length; i++){\n            const b = arg[i];\n            switch(b){\n                case cc.SPACE:\n                case cc.TAB:\n                case cc.CR:\n                case cc.NL:\n                    if (start >= 0) {\n                        args.push(arg.subarray(start, i));\n                        start = -1;\n                    }\n                    break;\n                default:\n                    if (start < 0) {\n                        start = i;\n                    }\n            }\n        }\n        if (start >= 0) {\n            args.push(arg.subarray(start));\n        }\n        switch(args.length){\n            case 4:\n                this.ma.subject = args[0];\n                this.ma.sid = this.protoParseInt(args[1]);\n                this.ma.reply = undefined;\n                this.ma.hdr = this.protoParseInt(args[2]);\n                this.ma.size = this.protoParseInt(args[3]);\n                break;\n            case 5:\n                this.ma.subject = args[0];\n                this.ma.sid = this.protoParseInt(args[1]);\n                this.ma.reply = args[2];\n                this.ma.hdr = this.protoParseInt(args[3]);\n                this.ma.size = this.protoParseInt(args[4]);\n                break;\n            default:\n                throw this.fail(arg, \"processHeaderMsgArgs Parse Error\");\n        }\n        if (this.ma.sid < 0) {\n            throw this.fail(arg, \"processHeaderMsgArgs Bad or Missing Sid Error\");\n        }\n        if (this.ma.hdr < 0 || this.ma.hdr > this.ma.size) {\n            throw this.fail(arg, \"processHeaderMsgArgs Bad or Missing Header Size Error\");\n        }\n        if (this.ma.size < 0) {\n            throw this.fail(arg, \"processHeaderMsgArgs Bad or Missing Size Error\");\n        }\n    }\n    protoParseInt(a) {\n        if (a.length === 0) {\n            return -1;\n        }\n        let n = 0;\n        for(let i = 0; i < a.length; i++){\n            if (a[i] < 48 || a[i] > 57) {\n                return -1;\n            }\n            n = n * 10 + (a[i] - ASCII_0);\n        }\n        return n;\n    }\n}\nvar State;\n(function(State) {\n    State[State[\"OP_START\"] = 0] = \"OP_START\";\n    State[State[\"OP_PLUS\"] = 1] = \"OP_PLUS\";\n    State[State[\"OP_PLUS_O\"] = 2] = \"OP_PLUS_O\";\n    State[State[\"OP_PLUS_OK\"] = 3] = \"OP_PLUS_OK\";\n    State[State[\"OP_MINUS\"] = 4] = \"OP_MINUS\";\n    State[State[\"OP_MINUS_E\"] = 5] = \"OP_MINUS_E\";\n    State[State[\"OP_MINUS_ER\"] = 6] = \"OP_MINUS_ER\";\n    State[State[\"OP_MINUS_ERR\"] = 7] = \"OP_MINUS_ERR\";\n    State[State[\"OP_MINUS_ERR_SPC\"] = 8] = \"OP_MINUS_ERR_SPC\";\n    State[State[\"MINUS_ERR_ARG\"] = 9] = \"MINUS_ERR_ARG\";\n    State[State[\"OP_M\"] = 10] = \"OP_M\";\n    State[State[\"OP_MS\"] = 11] = \"OP_MS\";\n    State[State[\"OP_MSG\"] = 12] = \"OP_MSG\";\n    State[State[\"OP_MSG_SPC\"] = 13] = \"OP_MSG_SPC\";\n    State[State[\"MSG_ARG\"] = 14] = \"MSG_ARG\";\n    State[State[\"MSG_PAYLOAD\"] = 15] = \"MSG_PAYLOAD\";\n    State[State[\"MSG_END\"] = 16] = \"MSG_END\";\n    State[State[\"OP_H\"] = 17] = \"OP_H\";\n    State[State[\"OP_P\"] = 18] = \"OP_P\";\n    State[State[\"OP_PI\"] = 19] = \"OP_PI\";\n    State[State[\"OP_PIN\"] = 20] = \"OP_PIN\";\n    State[State[\"OP_PING\"] = 21] = \"OP_PING\";\n    State[State[\"OP_PO\"] = 22] = \"OP_PO\";\n    State[State[\"OP_PON\"] = 23] = \"OP_PON\";\n    State[State[\"OP_PONG\"] = 24] = \"OP_PONG\";\n    State[State[\"OP_I\"] = 25] = \"OP_I\";\n    State[State[\"OP_IN\"] = 26] = \"OP_IN\";\n    State[State[\"OP_INF\"] = 27] = \"OP_INF\";\n    State[State[\"OP_INFO\"] = 28] = \"OP_INFO\";\n    State[State[\"OP_INFO_SPC\"] = 29] = \"OP_INFO_SPC\";\n    State[State[\"INFO_ARG\"] = 30] = \"INFO_ARG\";\n})(State || (State = {}));\nvar cc;\n(function(cc) {\n    cc[cc[\"CR\"] = \"\\r\".charCodeAt(0)] = \"CR\";\n    cc[cc[\"E\"] = \"E\".charCodeAt(0)] = \"E\";\n    cc[cc[\"e\"] = \"e\".charCodeAt(0)] = \"e\";\n    cc[cc[\"F\"] = \"F\".charCodeAt(0)] = \"F\";\n    cc[cc[\"f\"] = \"f\".charCodeAt(0)] = \"f\";\n    cc[cc[\"G\"] = \"G\".charCodeAt(0)] = \"G\";\n    cc[cc[\"g\"] = \"g\".charCodeAt(0)] = \"g\";\n    cc[cc[\"H\"] = \"H\".charCodeAt(0)] = \"H\";\n    cc[cc[\"h\"] = \"h\".charCodeAt(0)] = \"h\";\n    cc[cc[\"I\"] = \"I\".charCodeAt(0)] = \"I\";\n    cc[cc[\"i\"] = \"i\".charCodeAt(0)] = \"i\";\n    cc[cc[\"K\"] = \"K\".charCodeAt(0)] = \"K\";\n    cc[cc[\"k\"] = \"k\".charCodeAt(0)] = \"k\";\n    cc[cc[\"M\"] = \"M\".charCodeAt(0)] = \"M\";\n    cc[cc[\"m\"] = \"m\".charCodeAt(0)] = \"m\";\n    cc[cc[\"MINUS\"] = \"-\".charCodeAt(0)] = \"MINUS\";\n    cc[cc[\"N\"] = \"N\".charCodeAt(0)] = \"N\";\n    cc[cc[\"n\"] = \"n\".charCodeAt(0)] = \"n\";\n    cc[cc[\"NL\"] = \"\\n\".charCodeAt(0)] = \"NL\";\n    cc[cc[\"O\"] = \"O\".charCodeAt(0)] = \"O\";\n    cc[cc[\"o\"] = \"o\".charCodeAt(0)] = \"o\";\n    cc[cc[\"P\"] = \"P\".charCodeAt(0)] = \"P\";\n    cc[cc[\"p\"] = \"p\".charCodeAt(0)] = \"p\";\n    cc[cc[\"PLUS\"] = \"+\".charCodeAt(0)] = \"PLUS\";\n    cc[cc[\"R\"] = \"R\".charCodeAt(0)] = \"R\";\n    cc[cc[\"r\"] = \"r\".charCodeAt(0)] = \"r\";\n    cc[cc[\"S\"] = \"S\".charCodeAt(0)] = \"S\";\n    cc[cc[\"s\"] = \"s\".charCodeAt(0)] = \"s\";\n    cc[cc[\"SPACE\"] = \" \".charCodeAt(0)] = \"SPACE\";\n    cc[cc[\"TAB\"] = \"\\t\".charCodeAt(0)] = \"TAB\";\n})(cc || (cc = {}));\nfunction parseSemVer(s = \"\") {\n    const m = s.match(/(\\d+).(\\d+).(\\d+)/);\n    if (m) {\n        return {\n            major: parseInt(m[1]),\n            minor: parseInt(m[2]),\n            micro: parseInt(m[3])\n        };\n    }\n    throw new Error(`'${s}' is not a semver value`);\n}\nfunction compare(a, b) {\n    if (a.major < b.major) return -1;\n    if (a.major > b.major) return 1;\n    if (a.minor < b.minor) return -1;\n    if (a.minor > b.minor) return 1;\n    if (a.micro < b.micro) return -1;\n    if (a.micro > b.micro) return 1;\n    return 0;\n}\nvar Feature;\n(function(Feature) {\n    Feature[\"JS_KV\"] = \"js_kv\";\n    Feature[\"JS_OBJECTSTORE\"] = \"js_objectstore\";\n    Feature[\"JS_PULL_MAX_BYTES\"] = \"js_pull_max_bytes\";\n    Feature[\"JS_NEW_CONSUMER_CREATE_API\"] = \"js_new_consumer_create\";\n    Feature[\"JS_ALLOW_DIRECT\"] = \"js_allow_direct\";\n    Feature[\"JS_MULTIPLE_CONSUMER_FILTER\"] = \"js_multiple_consumer_filter\";\n    Feature[\"JS_SIMPLIFICATION\"] = \"js_simplification\";\n    Feature[\"JS_STREAM_CONSUMER_METADATA\"] = \"js_stream_consumer_metadata\";\n    Feature[\"JS_CONSUMER_FILTER_SUBJECTS\"] = \"js_consumer_filter_subjects\";\n    Feature[\"JS_STREAM_FIRST_SEQ\"] = \"js_stream_first_seq\";\n    Feature[\"JS_STREAM_SUBJECT_TRANSFORM\"] = \"js_stream_subject_transform\";\n    Feature[\"JS_STREAM_SOURCE_SUBJECT_TRANSFORM\"] = \"js_stream_source_subject_transform\";\n    Feature[\"JS_STREAM_COMPRESSION\"] = \"js_stream_compression\";\n    Feature[\"JS_DEFAULT_CONSUMER_LIMITS\"] = \"js_default_consumer_limits\";\n})(Feature || (Feature = {}));\nclass Features {\n    server;\n    features;\n    disabled;\n    constructor(v){\n        this.features = new Map();\n        this.disabled = [];\n        this.update(v);\n    }\n    resetDisabled() {\n        this.disabled.length = 0;\n        this.update(this.server);\n    }\n    disable(f) {\n        this.disabled.push(f);\n        this.update(this.server);\n    }\n    isDisabled(f) {\n        return this.disabled.indexOf(f) !== -1;\n    }\n    update(v) {\n        if (typeof v === \"string\") {\n            v = parseSemVer(v);\n        }\n        this.server = v;\n        this.set(Feature.JS_KV, \"2.6.2\");\n        this.set(Feature.JS_OBJECTSTORE, \"2.6.3\");\n        this.set(Feature.JS_PULL_MAX_BYTES, \"2.8.3\");\n        this.set(Feature.JS_NEW_CONSUMER_CREATE_API, \"2.9.0\");\n        this.set(Feature.JS_ALLOW_DIRECT, \"2.9.0\");\n        this.set(Feature.JS_MULTIPLE_CONSUMER_FILTER, \"2.10.0\");\n        this.set(Feature.JS_SIMPLIFICATION, \"2.9.4\");\n        this.set(Feature.JS_STREAM_CONSUMER_METADATA, \"2.10.0\");\n        this.set(Feature.JS_CONSUMER_FILTER_SUBJECTS, \"2.10.0\");\n        this.set(Feature.JS_STREAM_FIRST_SEQ, \"2.10.0\");\n        this.set(Feature.JS_STREAM_SUBJECT_TRANSFORM, \"2.10.0\");\n        this.set(Feature.JS_STREAM_SOURCE_SUBJECT_TRANSFORM, \"2.10.0\");\n        this.set(Feature.JS_STREAM_COMPRESSION, \"2.10.0\");\n        this.set(Feature.JS_DEFAULT_CONSUMER_LIMITS, \"2.10.0\");\n        this.disabled.forEach((f)=>{\n            this.features.delete(f);\n        });\n    }\n    set(f, requires) {\n        this.features.set(f, {\n            min: requires,\n            ok: compare(this.server, parseSemVer(requires)) >= 0\n        });\n    }\n    get(f) {\n        return this.features.get(f) || {\n            min: \"unknown\",\n            ok: false\n        };\n    }\n    supports(f) {\n        return this.get(f)?.ok || false;\n    }\n    require(v) {\n        if (typeof v === \"string\") {\n            v = parseSemVer(v);\n        }\n        return compare(this.server, v) >= 0;\n    }\n}\n(function(nacl) {\n    'use strict';\n    var u64 = function(h, l) {\n        this.hi = h | 0 >>> 0;\n        this.lo = l | 0 >>> 0;\n    };\n    var gf = function(init) {\n        var i, r = new Float64Array(16);\n        if (init) for(i = 0; i < init.length; i++)r[i] = init[i];\n        return r;\n    };\n    var randombytes = function() {\n        throw new Error('no PRNG');\n    };\n    var _0 = new Uint8Array(16);\n    var _9 = new Uint8Array(32);\n    _9[0] = 9;\n    var gf0 = gf(), gf1 = gf([\n        1\n    ]), _121665 = gf([\n        0xdb41,\n        1\n    ]), D = gf([\n        0x78a3,\n        0x1359,\n        0x4dca,\n        0x75eb,\n        0xd8ab,\n        0x4141,\n        0x0a4d,\n        0x0070,\n        0xe898,\n        0x7779,\n        0x4079,\n        0x8cc7,\n        0xfe73,\n        0x2b6f,\n        0x6cee,\n        0x5203\n    ]), D2 = gf([\n        0xf159,\n        0x26b2,\n        0x9b94,\n        0xebd6,\n        0xb156,\n        0x8283,\n        0x149a,\n        0x00e0,\n        0xd130,\n        0xeef3,\n        0x80f2,\n        0x198e,\n        0xfce7,\n        0x56df,\n        0xd9dc,\n        0x2406\n    ]), X = gf([\n        0xd51a,\n        0x8f25,\n        0x2d60,\n        0xc956,\n        0xa7b2,\n        0x9525,\n        0xc760,\n        0x692c,\n        0xdc5c,\n        0xfdd6,\n        0xe231,\n        0xc0a4,\n        0x53fe,\n        0xcd6e,\n        0x36d3,\n        0x2169\n    ]), Y = gf([\n        0x6658,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666,\n        0x6666\n    ]), I = gf([\n        0xa0b0,\n        0x4a0e,\n        0x1b27,\n        0xc4ee,\n        0xe478,\n        0xad2f,\n        0x1806,\n        0x2f43,\n        0xd7a7,\n        0x3dfb,\n        0x0099,\n        0x2b4d,\n        0xdf0b,\n        0x4fc1,\n        0x2480,\n        0x2b83\n    ]);\n    function L32(x, c) {\n        return x << c | x >>> 32 - c;\n    }\n    function ld32(x, i) {\n        var u = x[i + 3] & 0xff;\n        u = u << 8 | x[i + 2] & 0xff;\n        u = u << 8 | x[i + 1] & 0xff;\n        return u << 8 | x[i + 0] & 0xff;\n    }\n    function dl64(x, i) {\n        var h = x[i] << 24 | x[i + 1] << 16 | x[i + 2] << 8 | x[i + 3];\n        var l = x[i + 4] << 24 | x[i + 5] << 16 | x[i + 6] << 8 | x[i + 7];\n        return new u64(h, l);\n    }\n    function st32(x, j, u) {\n        var i;\n        for(i = 0; i < 4; i++){\n            x[j + i] = u & 255;\n            u >>>= 8;\n        }\n    }\n    function ts64(x, i, u) {\n        x[i] = u.hi >> 24 & 0xff;\n        x[i + 1] = u.hi >> 16 & 0xff;\n        x[i + 2] = u.hi >> 8 & 0xff;\n        x[i + 3] = u.hi & 0xff;\n        x[i + 4] = u.lo >> 24 & 0xff;\n        x[i + 5] = u.lo >> 16 & 0xff;\n        x[i + 6] = u.lo >> 8 & 0xff;\n        x[i + 7] = u.lo & 0xff;\n    }\n    function vn(x, xi, y, yi, n) {\n        var i, d = 0;\n        for(i = 0; i < n; i++)d |= x[xi + i] ^ y[yi + i];\n        return (1 & d - 1 >>> 8) - 1;\n    }\n    function crypto_verify_16(x, xi, y, yi) {\n        return vn(x, xi, y, yi, 16);\n    }\n    function crypto_verify_32(x, xi, y, yi) {\n        return vn(x, xi, y, yi, 32);\n    }\n    function core(out, inp, k, c, h) {\n        var w = new Uint32Array(16), x = new Uint32Array(16), y = new Uint32Array(16), t = new Uint32Array(4);\n        var i, j, m;\n        for(i = 0; i < 4; i++){\n            x[5 * i] = ld32(c, 4 * i);\n            x[1 + i] = ld32(k, 4 * i);\n            x[6 + i] = ld32(inp, 4 * i);\n            x[11 + i] = ld32(k, 16 + 4 * i);\n        }\n        for(i = 0; i < 16; i++)y[i] = x[i];\n        for(i = 0; i < 20; i++){\n            for(j = 0; j < 4; j++){\n                for(m = 0; m < 4; m++)t[m] = x[(5 * j + 4 * m) % 16];\n                t[1] ^= L32(t[0] + t[3] | 0, 7);\n                t[2] ^= L32(t[1] + t[0] | 0, 9);\n                t[3] ^= L32(t[2] + t[1] | 0, 13);\n                t[0] ^= L32(t[3] + t[2] | 0, 18);\n                for(m = 0; m < 4; m++)w[4 * j + (j + m) % 4] = t[m];\n            }\n            for(m = 0; m < 16; m++)x[m] = w[m];\n        }\n        if (h) {\n            for(i = 0; i < 16; i++)x[i] = x[i] + y[i] | 0;\n            for(i = 0; i < 4; i++){\n                x[5 * i] = x[5 * i] - ld32(c, 4 * i) | 0;\n                x[6 + i] = x[6 + i] - ld32(inp, 4 * i) | 0;\n            }\n            for(i = 0; i < 4; i++){\n                st32(out, 4 * i, x[5 * i]);\n                st32(out, 16 + 4 * i, x[6 + i]);\n            }\n        } else {\n            for(i = 0; i < 16; i++)st32(out, 4 * i, x[i] + y[i] | 0);\n        }\n    }\n    function crypto_core_salsa20(out, inp, k, c) {\n        core(out, inp, k, c, false);\n        return 0;\n    }\n    function crypto_core_hsalsa20(out, inp, k, c) {\n        core(out, inp, k, c, true);\n        return 0;\n    }\n    var sigma = new Uint8Array([\n        101,\n        120,\n        112,\n        97,\n        110,\n        100,\n        32,\n        51,\n        50,\n        45,\n        98,\n        121,\n        116,\n        101,\n        32,\n        107\n    ]);\n    function crypto_stream_salsa20_xor(c, cpos, m, mpos, b, n, k) {\n        var z = new Uint8Array(16), x = new Uint8Array(64);\n        var u, i;\n        if (!b) return 0;\n        for(i = 0; i < 16; i++)z[i] = 0;\n        for(i = 0; i < 8; i++)z[i] = n[i];\n        while(b >= 64){\n            crypto_core_salsa20(x, z, k, sigma);\n            for(i = 0; i < 64; i++)c[cpos + i] = (m ? m[mpos + i] : 0) ^ x[i];\n            u = 1;\n            for(i = 8; i < 16; i++){\n                u = u + (z[i] & 0xff) | 0;\n                z[i] = u & 0xff;\n                u >>>= 8;\n            }\n            b -= 64;\n            cpos += 64;\n            if (m) mpos += 64;\n        }\n        if (b > 0) {\n            crypto_core_salsa20(x, z, k, sigma);\n            for(i = 0; i < b; i++)c[cpos + i] = (m ? m[mpos + i] : 0) ^ x[i];\n        }\n        return 0;\n    }\n    function crypto_stream_salsa20(c, cpos, d, n, k) {\n        return crypto_stream_salsa20_xor(c, cpos, null, 0, d, n, k);\n    }\n    function crypto_stream(c, cpos, d, n, k) {\n        var s = new Uint8Array(32);\n        crypto_core_hsalsa20(s, n, k, sigma);\n        return crypto_stream_salsa20(c, cpos, d, n.subarray(16), s);\n    }\n    function crypto_stream_xor(c, cpos, m, mpos, d, n, k) {\n        var s = new Uint8Array(32);\n        crypto_core_hsalsa20(s, n, k, sigma);\n        return crypto_stream_salsa20_xor(c, cpos, m, mpos, d, n.subarray(16), s);\n    }\n    function add1305(h, c) {\n        var j, u = 0;\n        for(j = 0; j < 17; j++){\n            u = u + (h[j] + c[j] | 0) | 0;\n            h[j] = u & 255;\n            u >>>= 8;\n        }\n    }\n    var minusp = new Uint32Array([\n        5,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        252\n    ]);\n    function crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n        var s, i, j, u;\n        var x = new Uint32Array(17), r = new Uint32Array(17), h = new Uint32Array(17), c = new Uint32Array(17), g = new Uint32Array(17);\n        for(j = 0; j < 17; j++)r[j] = h[j] = 0;\n        for(j = 0; j < 16; j++)r[j] = k[j];\n        r[3] &= 15;\n        r[4] &= 252;\n        r[7] &= 15;\n        r[8] &= 252;\n        r[11] &= 15;\n        r[12] &= 252;\n        r[15] &= 15;\n        while(n > 0){\n            for(j = 0; j < 17; j++)c[j] = 0;\n            for(j = 0; j < 16 && j < n; ++j)c[j] = m[mpos + j];\n            c[j] = 1;\n            mpos += j;\n            n -= j;\n            add1305(h, c);\n            for(i = 0; i < 17; i++){\n                x[i] = 0;\n                for(j = 0; j < 17; j++)x[i] = x[i] + h[j] * (j <= i ? r[i - j] : 320 * r[i + 17 - j] | 0) | 0 | 0;\n            }\n            for(i = 0; i < 17; i++)h[i] = x[i];\n            u = 0;\n            for(j = 0; j < 16; j++){\n                u = u + h[j] | 0;\n                h[j] = u & 255;\n                u >>>= 8;\n            }\n            u = u + h[16] | 0;\n            h[16] = u & 3;\n            u = 5 * (u >>> 2) | 0;\n            for(j = 0; j < 16; j++){\n                u = u + h[j] | 0;\n                h[j] = u & 255;\n                u >>>= 8;\n            }\n            u = u + h[16] | 0;\n            h[16] = u;\n        }\n        for(j = 0; j < 17; j++)g[j] = h[j];\n        add1305(h, minusp);\n        s = -(h[16] >>> 7) | 0;\n        for(j = 0; j < 17; j++)h[j] ^= s & (g[j] ^ h[j]);\n        for(j = 0; j < 16; j++)c[j] = k[j + 16];\n        c[16] = 0;\n        add1305(h, c);\n        for(j = 0; j < 16; j++)out[outpos + j] = h[j];\n        return 0;\n    }\n    function crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n        var x = new Uint8Array(16);\n        crypto_onetimeauth(x, 0, m, mpos, n, k);\n        return crypto_verify_16(h, hpos, x, 0);\n    }\n    function crypto_secretbox(c, m, d, n, k) {\n        var i;\n        if (d < 32) return -1;\n        crypto_stream_xor(c, 0, m, 0, d, n, k);\n        crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n        for(i = 0; i < 16; i++)c[i] = 0;\n        return 0;\n    }\n    function crypto_secretbox_open(m, c, d, n, k) {\n        var i;\n        var x = new Uint8Array(32);\n        if (d < 32) return -1;\n        crypto_stream(x, 0, 32, n, k);\n        if (crypto_onetimeauth_verify(c, 16, c, 32, d - 32, x) !== 0) return -1;\n        crypto_stream_xor(m, 0, c, 0, d, n, k);\n        for(i = 0; i < 32; i++)m[i] = 0;\n        return 0;\n    }\n    function set25519(r, a) {\n        var i;\n        for(i = 0; i < 16; i++)r[i] = a[i] | 0;\n    }\n    function car25519(o) {\n        var c;\n        var i;\n        for(i = 0; i < 16; i++){\n            o[i] += 65536;\n            c = Math.floor(o[i] / 65536);\n            o[(i + 1) * (i < 15 ? 1 : 0)] += c - 1 + 37 * (c - 1) * (i === 15 ? 1 : 0);\n            o[i] -= c * 65536;\n        }\n    }\n    function sel25519(p, q, b) {\n        var t, c = ~(b - 1);\n        for(var i = 0; i < 16; i++){\n            t = c & (p[i] ^ q[i]);\n            p[i] ^= t;\n            q[i] ^= t;\n        }\n    }\n    function pack25519(o, n) {\n        var i, j, b;\n        var m = gf(), t = gf();\n        for(i = 0; i < 16; i++)t[i] = n[i];\n        car25519(t);\n        car25519(t);\n        car25519(t);\n        for(j = 0; j < 2; j++){\n            m[0] = t[0] - 0xffed;\n            for(i = 1; i < 15; i++){\n                m[i] = t[i] - 0xffff - (m[i - 1] >> 16 & 1);\n                m[i - 1] &= 0xffff;\n            }\n            m[15] = t[15] - 0x7fff - (m[14] >> 16 & 1);\n            b = m[15] >> 16 & 1;\n            m[14] &= 0xffff;\n            sel25519(t, m, 1 - b);\n        }\n        for(i = 0; i < 16; i++){\n            o[2 * i] = t[i] & 0xff;\n            o[2 * i + 1] = t[i] >> 8;\n        }\n    }\n    function neq25519(a, b) {\n        var c = new Uint8Array(32), d = new Uint8Array(32);\n        pack25519(c, a);\n        pack25519(d, b);\n        return crypto_verify_32(c, 0, d, 0);\n    }\n    function par25519(a) {\n        var d = new Uint8Array(32);\n        pack25519(d, a);\n        return d[0] & 1;\n    }\n    function unpack25519(o, n) {\n        var i;\n        for(i = 0; i < 16; i++)o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n        o[15] &= 0x7fff;\n    }\n    function A(o, a, b) {\n        var i;\n        for(i = 0; i < 16; i++)o[i] = a[i] + b[i] | 0;\n    }\n    function Z(o, a, b) {\n        var i;\n        for(i = 0; i < 16; i++)o[i] = a[i] - b[i] | 0;\n    }\n    function M(o, a, b) {\n        var i, j, t = new Float64Array(31);\n        for(i = 0; i < 31; i++)t[i] = 0;\n        for(i = 0; i < 16; i++){\n            for(j = 0; j < 16; j++){\n                t[i + j] += a[i] * b[j];\n            }\n        }\n        for(i = 0; i < 15; i++){\n            t[i] += 38 * t[i + 16];\n        }\n        for(i = 0; i < 16; i++)o[i] = t[i];\n        car25519(o);\n        car25519(o);\n    }\n    function S(o, a) {\n        M(o, a, a);\n    }\n    function inv25519(o, i) {\n        var c = gf();\n        var a;\n        for(a = 0; a < 16; a++)c[a] = i[a];\n        for(a = 253; a >= 0; a--){\n            S(c, c);\n            if (a !== 2 && a !== 4) M(c, c, i);\n        }\n        for(a = 0; a < 16; a++)o[a] = c[a];\n    }\n    function pow2523(o, i) {\n        var c = gf();\n        var a;\n        for(a = 0; a < 16; a++)c[a] = i[a];\n        for(a = 250; a >= 0; a--){\n            S(c, c);\n            if (a !== 1) M(c, c, i);\n        }\n        for(a = 0; a < 16; a++)o[a] = c[a];\n    }\n    function crypto_scalarmult(q, n, p) {\n        var z = new Uint8Array(32);\n        var x = new Float64Array(80), r, i;\n        var a = gf(), b = gf(), c = gf(), d = gf(), e = gf(), f = gf();\n        for(i = 0; i < 31; i++)z[i] = n[i];\n        z[31] = n[31] & 127 | 64;\n        z[0] &= 248;\n        unpack25519(x, p);\n        for(i = 0; i < 16; i++){\n            b[i] = x[i];\n            d[i] = a[i] = c[i] = 0;\n        }\n        a[0] = d[0] = 1;\n        for(i = 254; i >= 0; --i){\n            r = z[i >>> 3] >>> (i & 7) & 1;\n            sel25519(a, b, r);\n            sel25519(c, d, r);\n            A(e, a, c);\n            Z(a, a, c);\n            A(c, b, d);\n            Z(b, b, d);\n            S(d, e);\n            S(f, a);\n            M(a, c, a);\n            M(c, b, e);\n            A(e, a, c);\n            Z(a, a, c);\n            S(b, a);\n            Z(c, d, f);\n            M(a, c, _121665);\n            A(a, a, d);\n            M(c, c, a);\n            M(a, d, f);\n            M(d, b, x);\n            S(b, e);\n            sel25519(a, b, r);\n            sel25519(c, d, r);\n        }\n        for(i = 0; i < 16; i++){\n            x[i + 16] = a[i];\n            x[i + 32] = c[i];\n            x[i + 48] = b[i];\n            x[i + 64] = d[i];\n        }\n        var x32 = x.subarray(32);\n        var x16 = x.subarray(16);\n        inv25519(x32, x32);\n        M(x16, x16, x32);\n        pack25519(q, x16);\n        return 0;\n    }\n    function crypto_scalarmult_base(q, n) {\n        return crypto_scalarmult(q, n, _9);\n    }\n    function crypto_box_keypair(y, x) {\n        randombytes(x, 32);\n        return crypto_scalarmult_base(y, x);\n    }\n    function crypto_box_beforenm(k, y, x) {\n        var s = new Uint8Array(32);\n        crypto_scalarmult(s, x, y);\n        return crypto_core_hsalsa20(k, _0, s, sigma);\n    }\n    var crypto_box_afternm = crypto_secretbox;\n    var crypto_box_open_afternm = crypto_secretbox_open;\n    function crypto_box(c, m, d, n, y, x) {\n        var k = new Uint8Array(32);\n        crypto_box_beforenm(k, y, x);\n        return crypto_box_afternm(c, m, d, n, k);\n    }\n    function crypto_box_open(m, c, d, n, y, x) {\n        var k = new Uint8Array(32);\n        crypto_box_beforenm(k, y, x);\n        return crypto_box_open_afternm(m, c, d, n, k);\n    }\n    function add64() {\n        var a = 0, b = 0, c = 0, d = 0, m16 = 65535, l, h, i;\n        for(i = 0; i < arguments.length; i++){\n            l = arguments[i].lo;\n            h = arguments[i].hi;\n            a += l & m16;\n            b += l >>> 16;\n            c += h & m16;\n            d += h >>> 16;\n        }\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        return new u64(c & m16 | d << 16, a & m16 | b << 16);\n    }\n    function shr64(x, c) {\n        return new u64(x.hi >>> c, x.lo >>> c | x.hi << 32 - c);\n    }\n    function xor64() {\n        var l = 0, h = 0, i;\n        for(i = 0; i < arguments.length; i++){\n            l ^= arguments[i].lo;\n            h ^= arguments[i].hi;\n        }\n        return new u64(h, l);\n    }\n    function R(x, c) {\n        var h, l, c1 = 32 - c;\n        if (c < 32) {\n            h = x.hi >>> c | x.lo << c1;\n            l = x.lo >>> c | x.hi << c1;\n        } else if (c < 64) {\n            h = x.lo >>> c | x.hi << c1;\n            l = x.hi >>> c | x.lo << c1;\n        }\n        return new u64(h, l);\n    }\n    function Ch(x, y, z) {\n        var h = x.hi & y.hi ^ ~x.hi & z.hi, l = x.lo & y.lo ^ ~x.lo & z.lo;\n        return new u64(h, l);\n    }\n    function Maj(x, y, z) {\n        var h = x.hi & y.hi ^ x.hi & z.hi ^ y.hi & z.hi, l = x.lo & y.lo ^ x.lo & z.lo ^ y.lo & z.lo;\n        return new u64(h, l);\n    }\n    function Sigma0(x) {\n        return xor64(R(x, 28), R(x, 34), R(x, 39));\n    }\n    function Sigma1(x) {\n        return xor64(R(x, 14), R(x, 18), R(x, 41));\n    }\n    function sigma0(x) {\n        return xor64(R(x, 1), R(x, 8), shr64(x, 7));\n    }\n    function sigma1(x) {\n        return xor64(R(x, 19), R(x, 61), shr64(x, 6));\n    }\n    var K = [\n        new u64(0x428a2f98, 0xd728ae22),\n        new u64(0x71374491, 0x23ef65cd),\n        new u64(0xb5c0fbcf, 0xec4d3b2f),\n        new u64(0xe9b5dba5, 0x8189dbbc),\n        new u64(0x3956c25b, 0xf348b538),\n        new u64(0x59f111f1, 0xb605d019),\n        new u64(0x923f82a4, 0xaf194f9b),\n        new u64(0xab1c5ed5, 0xda6d8118),\n        new u64(0xd807aa98, 0xa3030242),\n        new u64(0x12835b01, 0x45706fbe),\n        new u64(0x243185be, 0x4ee4b28c),\n        new u64(0x550c7dc3, 0xd5ffb4e2),\n        new u64(0x72be5d74, 0xf27b896f),\n        new u64(0x80deb1fe, 0x3b1696b1),\n        new u64(0x9bdc06a7, 0x25c71235),\n        new u64(0xc19bf174, 0xcf692694),\n        new u64(0xe49b69c1, 0x9ef14ad2),\n        new u64(0xefbe4786, 0x384f25e3),\n        new u64(0x0fc19dc6, 0x8b8cd5b5),\n        new u64(0x240ca1cc, 0x77ac9c65),\n        new u64(0x2de92c6f, 0x592b0275),\n        new u64(0x4a7484aa, 0x6ea6e483),\n        new u64(0x5cb0a9dc, 0xbd41fbd4),\n        new u64(0x76f988da, 0x831153b5),\n        new u64(0x983e5152, 0xee66dfab),\n        new u64(0xa831c66d, 0x2db43210),\n        new u64(0xb00327c8, 0x98fb213f),\n        new u64(0xbf597fc7, 0xbeef0ee4),\n        new u64(0xc6e00bf3, 0x3da88fc2),\n        new u64(0xd5a79147, 0x930aa725),\n        new u64(0x06ca6351, 0xe003826f),\n        new u64(0x14292967, 0x0a0e6e70),\n        new u64(0x27b70a85, 0x46d22ffc),\n        new u64(0x2e1b2138, 0x5c26c926),\n        new u64(0x4d2c6dfc, 0x5ac42aed),\n        new u64(0x53380d13, 0x9d95b3df),\n        new u64(0x650a7354, 0x8baf63de),\n        new u64(0x766a0abb, 0x3c77b2a8),\n        new u64(0x81c2c92e, 0x47edaee6),\n        new u64(0x92722c85, 0x1482353b),\n        new u64(0xa2bfe8a1, 0x4cf10364),\n        new u64(0xa81a664b, 0xbc423001),\n        new u64(0xc24b8b70, 0xd0f89791),\n        new u64(0xc76c51a3, 0x0654be30),\n        new u64(0xd192e819, 0xd6ef5218),\n        new u64(0xd6990624, 0x5565a910),\n        new u64(0xf40e3585, 0x5771202a),\n        new u64(0x106aa070, 0x32bbd1b8),\n        new u64(0x19a4c116, 0xb8d2d0c8),\n        new u64(0x1e376c08, 0x5141ab53),\n        new u64(0x2748774c, 0xdf8eeb99),\n        new u64(0x34b0bcb5, 0xe19b48a8),\n        new u64(0x391c0cb3, 0xc5c95a63),\n        new u64(0x4ed8aa4a, 0xe3418acb),\n        new u64(0x5b9cca4f, 0x7763e373),\n        new u64(0x682e6ff3, 0xd6b2b8a3),\n        new u64(0x748f82ee, 0x5defb2fc),\n        new u64(0x78a5636f, 0x43172f60),\n        new u64(0x84c87814, 0xa1f0ab72),\n        new u64(0x8cc70208, 0x1a6439ec),\n        new u64(0x90befffa, 0x23631e28),\n        new u64(0xa4506ceb, 0xde82bde9),\n        new u64(0xbef9a3f7, 0xb2c67915),\n        new u64(0xc67178f2, 0xe372532b),\n        new u64(0xca273ece, 0xea26619c),\n        new u64(0xd186b8c7, 0x21c0c207),\n        new u64(0xeada7dd6, 0xcde0eb1e),\n        new u64(0xf57d4f7f, 0xee6ed178),\n        new u64(0x06f067aa, 0x72176fba),\n        new u64(0x0a637dc5, 0xa2c898a6),\n        new u64(0x113f9804, 0xbef90dae),\n        new u64(0x1b710b35, 0x131c471b),\n        new u64(0x28db77f5, 0x23047d84),\n        new u64(0x32caab7b, 0x40c72493),\n        new u64(0x3c9ebe0a, 0x15c9bebc),\n        new u64(0x431d67c4, 0x9c100d4c),\n        new u64(0x4cc5d4be, 0xcb3e42b6),\n        new u64(0x597f299c, 0xfc657e2a),\n        new u64(0x5fcb6fab, 0x3ad6faec),\n        new u64(0x6c44198c, 0x4a475817)\n    ];\n    function crypto_hashblocks(x, m, n) {\n        var z = [], b = [], a = [], w = [], t, i, j;\n        for(i = 0; i < 8; i++)z[i] = a[i] = dl64(x, 8 * i);\n        var pos = 0;\n        while(n >= 128){\n            for(i = 0; i < 16; i++)w[i] = dl64(m, 8 * i + pos);\n            for(i = 0; i < 80; i++){\n                for(j = 0; j < 8; j++)b[j] = a[j];\n                t = add64(a[7], Sigma1(a[4]), Ch(a[4], a[5], a[6]), K[i], w[i % 16]);\n                b[7] = add64(t, Sigma0(a[0]), Maj(a[0], a[1], a[2]));\n                b[3] = add64(b[3], t);\n                for(j = 0; j < 8; j++)a[(j + 1) % 8] = b[j];\n                if (i % 16 === 15) {\n                    for(j = 0; j < 16; j++){\n                        w[j] = add64(w[j], w[(j + 9) % 16], sigma0(w[(j + 1) % 16]), sigma1(w[(j + 14) % 16]));\n                    }\n                }\n            }\n            for(i = 0; i < 8; i++){\n                a[i] = add64(a[i], z[i]);\n                z[i] = a[i];\n            }\n            pos += 128;\n            n -= 128;\n        }\n        for(i = 0; i < 8; i++)ts64(x, 8 * i, z[i]);\n        return n;\n    }\n    var iv = new Uint8Array([\n        0x6a,\n        0x09,\n        0xe6,\n        0x67,\n        0xf3,\n        0xbc,\n        0xc9,\n        0x08,\n        0xbb,\n        0x67,\n        0xae,\n        0x85,\n        0x84,\n        0xca,\n        0xa7,\n        0x3b,\n        0x3c,\n        0x6e,\n        0xf3,\n        0x72,\n        0xfe,\n        0x94,\n        0xf8,\n        0x2b,\n        0xa5,\n        0x4f,\n        0xf5,\n        0x3a,\n        0x5f,\n        0x1d,\n        0x36,\n        0xf1,\n        0x51,\n        0x0e,\n        0x52,\n        0x7f,\n        0xad,\n        0xe6,\n        0x82,\n        0xd1,\n        0x9b,\n        0x05,\n        0x68,\n        0x8c,\n        0x2b,\n        0x3e,\n        0x6c,\n        0x1f,\n        0x1f,\n        0x83,\n        0xd9,\n        0xab,\n        0xfb,\n        0x41,\n        0xbd,\n        0x6b,\n        0x5b,\n        0xe0,\n        0xcd,\n        0x19,\n        0x13,\n        0x7e,\n        0x21,\n        0x79\n    ]);\n    function crypto_hash(out, m, n) {\n        var h = new Uint8Array(64), x = new Uint8Array(256);\n        var i, b = n;\n        for(i = 0; i < 64; i++)h[i] = iv[i];\n        crypto_hashblocks(h, m, n);\n        n %= 128;\n        for(i = 0; i < 256; i++)x[i] = 0;\n        for(i = 0; i < n; i++)x[i] = m[b - n + i];\n        x[n] = 128;\n        n = 256 - 128 * (n < 112 ? 1 : 0);\n        x[n - 9] = 0;\n        ts64(x, n - 8, new u64(b / 0x20000000 | 0, b << 3));\n        crypto_hashblocks(h, x, n);\n        for(i = 0; i < 64; i++)out[i] = h[i];\n        return 0;\n    }\n    function add(p, q) {\n        var a = gf(), b = gf(), c = gf(), d = gf(), e = gf(), f = gf(), g = gf(), h = gf(), t = gf();\n        Z(a, p[1], p[0]);\n        Z(t, q[1], q[0]);\n        M(a, a, t);\n        A(b, p[0], p[1]);\n        A(t, q[0], q[1]);\n        M(b, b, t);\n        M(c, p[3], q[3]);\n        M(c, c, D2);\n        M(d, p[2], q[2]);\n        A(d, d, d);\n        Z(e, b, a);\n        Z(f, d, c);\n        A(g, d, c);\n        A(h, b, a);\n        M(p[0], e, f);\n        M(p[1], h, g);\n        M(p[2], g, f);\n        M(p[3], e, h);\n    }\n    function cswap(p, q, b) {\n        var i;\n        for(i = 0; i < 4; i++){\n            sel25519(p[i], q[i], b);\n        }\n    }\n    function pack(r, p) {\n        var tx = gf(), ty = gf(), zi = gf();\n        inv25519(zi, p[2]);\n        M(tx, p[0], zi);\n        M(ty, p[1], zi);\n        pack25519(r, ty);\n        r[31] ^= par25519(tx) << 7;\n    }\n    function scalarmult(p, q, s) {\n        var b, i;\n        set25519(p[0], gf0);\n        set25519(p[1], gf1);\n        set25519(p[2], gf1);\n        set25519(p[3], gf0);\n        for(i = 255; i >= 0; --i){\n            b = s[i / 8 | 0] >> (i & 7) & 1;\n            cswap(p, q, b);\n            add(q, p);\n            add(p, p);\n            cswap(p, q, b);\n        }\n    }\n    function scalarbase(p, s) {\n        var q = [\n            gf(),\n            gf(),\n            gf(),\n            gf()\n        ];\n        set25519(q[0], X);\n        set25519(q[1], Y);\n        set25519(q[2], gf1);\n        M(q[3], X, Y);\n        scalarmult(p, q, s);\n    }\n    function crypto_sign_keypair(pk, sk, seeded) {\n        var d = new Uint8Array(64);\n        var p = [\n            gf(),\n            gf(),\n            gf(),\n            gf()\n        ];\n        var i;\n        if (!seeded) randombytes(sk, 32);\n        crypto_hash(d, sk, 32);\n        d[0] &= 248;\n        d[31] &= 127;\n        d[31] |= 64;\n        scalarbase(p, d);\n        pack(pk, p);\n        for(i = 0; i < 32; i++)sk[i + 32] = pk[i];\n        return 0;\n    }\n    var L = new Float64Array([\n        0xed,\n        0xd3,\n        0xf5,\n        0x5c,\n        0x1a,\n        0x63,\n        0x12,\n        0x58,\n        0xd6,\n        0x9c,\n        0xf7,\n        0xa2,\n        0xde,\n        0xf9,\n        0xde,\n        0x14,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0x10\n    ]);\n    function modL(r, x) {\n        var carry, i, j, k;\n        for(i = 63; i >= 32; --i){\n            carry = 0;\n            for(j = i - 32, k = i - 12; j < k; ++j){\n                x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n                carry = Math.floor((x[j] + 128) / 256);\n                x[j] -= carry * 256;\n            }\n            x[j] += carry;\n            x[i] = 0;\n        }\n        carry = 0;\n        for(j = 0; j < 32; j++){\n            x[j] += carry - (x[31] >> 4) * L[j];\n            carry = x[j] >> 8;\n            x[j] &= 255;\n        }\n        for(j = 0; j < 32; j++)x[j] -= carry * L[j];\n        for(i = 0; i < 32; i++){\n            x[i + 1] += x[i] >> 8;\n            r[i] = x[i] & 255;\n        }\n    }\n    function reduce(r) {\n        var x = new Float64Array(64), i;\n        for(i = 0; i < 64; i++)x[i] = r[i];\n        for(i = 0; i < 64; i++)r[i] = 0;\n        modL(r, x);\n    }\n    function crypto_sign(sm, m, n, sk) {\n        var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n        var i, j, x = new Float64Array(64);\n        var p = [\n            gf(),\n            gf(),\n            gf(),\n            gf()\n        ];\n        crypto_hash(d, sk, 32);\n        d[0] &= 248;\n        d[31] &= 127;\n        d[31] |= 64;\n        var smlen = n + 64;\n        for(i = 0; i < n; i++)sm[64 + i] = m[i];\n        for(i = 0; i < 32; i++)sm[32 + i] = d[32 + i];\n        crypto_hash(r, sm.subarray(32), n + 32);\n        reduce(r);\n        scalarbase(p, r);\n        pack(sm, p);\n        for(i = 32; i < 64; i++)sm[i] = sk[i];\n        crypto_hash(h, sm, n + 64);\n        reduce(h);\n        for(i = 0; i < 64; i++)x[i] = 0;\n        for(i = 0; i < 32; i++)x[i] = r[i];\n        for(i = 0; i < 32; i++){\n            for(j = 0; j < 32; j++){\n                x[i + j] += h[i] * d[j];\n            }\n        }\n        modL(sm.subarray(32), x);\n        return smlen;\n    }\n    function unpackneg(r, p) {\n        var t = gf(), chk = gf(), num = gf(), den = gf(), den2 = gf(), den4 = gf(), den6 = gf();\n        set25519(r[2], gf1);\n        unpack25519(r[1], p);\n        S(num, r[1]);\n        M(den, num, D);\n        Z(num, num, r[2]);\n        A(den, r[2], den);\n        S(den2, den);\n        S(den4, den2);\n        M(den6, den4, den2);\n        M(t, den6, num);\n        M(t, t, den);\n        pow2523(t, t);\n        M(t, t, num);\n        M(t, t, den);\n        M(t, t, den);\n        M(r[0], t, den);\n        S(chk, r[0]);\n        M(chk, chk, den);\n        if (neq25519(chk, num)) M(r[0], r[0], I);\n        S(chk, r[0]);\n        M(chk, chk, den);\n        if (neq25519(chk, num)) return -1;\n        if (par25519(r[0]) === p[31] >> 7) Z(r[0], gf0, r[0]);\n        M(r[3], r[0], r[1]);\n        return 0;\n    }\n    function crypto_sign_open(m, sm, n, pk) {\n        var i;\n        var t = new Uint8Array(32), h = new Uint8Array(64);\n        var p = [\n            gf(),\n            gf(),\n            gf(),\n            gf()\n        ], q = [\n            gf(),\n            gf(),\n            gf(),\n            gf()\n        ];\n        if (n < 64) return -1;\n        if (unpackneg(q, pk)) return -1;\n        for(i = 0; i < n; i++)m[i] = sm[i];\n        for(i = 0; i < 32; i++)m[i + 32] = pk[i];\n        crypto_hash(h, m, n);\n        reduce(h);\n        scalarmult(p, q, h);\n        scalarbase(q, sm.subarray(32));\n        add(p, q);\n        pack(t, p);\n        n -= 64;\n        if (crypto_verify_32(sm, 0, t, 0)) {\n            for(i = 0; i < n; i++)m[i] = 0;\n            return -1;\n        }\n        for(i = 0; i < n; i++)m[i] = sm[i + 64];\n        return n;\n    }\n    var crypto_secretbox_KEYBYTES = 32, crypto_secretbox_NONCEBYTES = 24, crypto_secretbox_ZEROBYTES = 32, crypto_secretbox_BOXZEROBYTES = 16, crypto_scalarmult_BYTES = 32, crypto_scalarmult_SCALARBYTES = 32, crypto_box_PUBLICKEYBYTES = 32, crypto_box_SECRETKEYBYTES = 32, crypto_box_BEFORENMBYTES = 32, crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES, crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES, crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES, crypto_sign_BYTES = 64, crypto_sign_PUBLICKEYBYTES = 32, crypto_sign_SECRETKEYBYTES = 64, crypto_sign_SEEDBYTES = 32, crypto_hash_BYTES = 64;\n    nacl.lowlevel = {\n        crypto_core_hsalsa20: crypto_core_hsalsa20,\n        crypto_stream_xor: crypto_stream_xor,\n        crypto_stream: crypto_stream,\n        crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n        crypto_stream_salsa20: crypto_stream_salsa20,\n        crypto_onetimeauth: crypto_onetimeauth,\n        crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n        crypto_verify_16: crypto_verify_16,\n        crypto_verify_32: crypto_verify_32,\n        crypto_secretbox: crypto_secretbox,\n        crypto_secretbox_open: crypto_secretbox_open,\n        crypto_scalarmult: crypto_scalarmult,\n        crypto_scalarmult_base: crypto_scalarmult_base,\n        crypto_box_beforenm: crypto_box_beforenm,\n        crypto_box_afternm: crypto_box_afternm,\n        crypto_box: crypto_box,\n        crypto_box_open: crypto_box_open,\n        crypto_box_keypair: crypto_box_keypair,\n        crypto_hash: crypto_hash,\n        crypto_sign: crypto_sign,\n        crypto_sign_keypair: crypto_sign_keypair,\n        crypto_sign_open: crypto_sign_open,\n        crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n        crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n        crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n        crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n        crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n        crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n        crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n        crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n        crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n        crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n        crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n        crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n        crypto_sign_BYTES: crypto_sign_BYTES,\n        crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n        crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n        crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n        crypto_hash_BYTES: crypto_hash_BYTES,\n        gf: gf,\n        D: D,\n        L: L,\n        pack25519: pack25519,\n        unpack25519: unpack25519,\n        M: M,\n        A: A,\n        S: S,\n        Z: Z,\n        pow2523: pow2523,\n        add: add,\n        set25519: set25519,\n        modL: modL,\n        scalarmult: scalarmult,\n        scalarbase: scalarbase\n    };\n    function checkLengths(k, n) {\n        if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n        if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n    }\n    function checkBoxLengths(pk, sk) {\n        if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n        if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n    }\n    function checkArrayTypes() {\n        for(var i = 0; i < arguments.length; i++){\n            if (!(arguments[i] instanceof Uint8Array)) throw new TypeError('unexpected type, use Uint8Array');\n        }\n    }\n    function cleanup(arr) {\n        for(var i = 0; i < arr.length; i++)arr[i] = 0;\n    }\n    nacl.randomBytes = function(n) {\n        var b = new Uint8Array(n);\n        randombytes(b, n);\n        return b;\n    };\n    nacl.secretbox = function(msg, nonce, key) {\n        checkArrayTypes(msg, nonce, key);\n        checkLengths(key, nonce);\n        var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n        var c = new Uint8Array(m.length);\n        for(var i = 0; i < msg.length; i++)m[i + crypto_secretbox_ZEROBYTES] = msg[i];\n        crypto_secretbox(c, m, m.length, nonce, key);\n        return c.subarray(crypto_secretbox_BOXZEROBYTES);\n    };\n    nacl.secretbox.open = function(box, nonce, key) {\n        checkArrayTypes(box, nonce, key);\n        checkLengths(key, nonce);\n        var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n        var m = new Uint8Array(c.length);\n        for(var i = 0; i < box.length; i++)c[i + crypto_secretbox_BOXZEROBYTES] = box[i];\n        if (c.length < 32) return null;\n        if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n        return m.subarray(crypto_secretbox_ZEROBYTES);\n    };\n    nacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\n    nacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\n    nacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n    nacl.scalarMult = function(n, p) {\n        checkArrayTypes(n, p);\n        if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n        if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n        var q = new Uint8Array(crypto_scalarmult_BYTES);\n        crypto_scalarmult(q, n, p);\n        return q;\n    };\n    nacl.scalarMult.base = function(n) {\n        checkArrayTypes(n);\n        if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n        var q = new Uint8Array(crypto_scalarmult_BYTES);\n        crypto_scalarmult_base(q, n);\n        return q;\n    };\n    nacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\n    nacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n    nacl.box = function(msg, nonce, publicKey, secretKey) {\n        var k = nacl.box.before(publicKey, secretKey);\n        return nacl.secretbox(msg, nonce, k);\n    };\n    nacl.box.before = function(publicKey, secretKey) {\n        checkArrayTypes(publicKey, secretKey);\n        checkBoxLengths(publicKey, secretKey);\n        var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n        crypto_box_beforenm(k, publicKey, secretKey);\n        return k;\n    };\n    nacl.box.after = nacl.secretbox;\n    nacl.box.open = function(msg, nonce, publicKey, secretKey) {\n        var k = nacl.box.before(publicKey, secretKey);\n        return nacl.secretbox.open(msg, nonce, k);\n    };\n    nacl.box.open.after = nacl.secretbox.open;\n    nacl.box.keyPair = function() {\n        var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n        var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n        crypto_box_keypair(pk, sk);\n        return {\n            publicKey: pk,\n            secretKey: sk\n        };\n    };\n    nacl.box.keyPair.fromSecretKey = function(secretKey) {\n        checkArrayTypes(secretKey);\n        if (secretKey.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n        var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n        crypto_scalarmult_base(pk, secretKey);\n        return {\n            publicKey: pk,\n            secretKey: new Uint8Array(secretKey)\n        };\n    };\n    nacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\n    nacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\n    nacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\n    nacl.box.nonceLength = crypto_box_NONCEBYTES;\n    nacl.box.overheadLength = nacl.secretbox.overheadLength;\n    nacl.sign = function(msg, secretKey) {\n        checkArrayTypes(msg, secretKey);\n        if (secretKey.length !== crypto_sign_SECRETKEYBYTES) throw new Error('bad secret key size');\n        var signedMsg = new Uint8Array(crypto_sign_BYTES + msg.length);\n        crypto_sign(signedMsg, msg, msg.length, secretKey);\n        return signedMsg;\n    };\n    nacl.sign.open = function(signedMsg, publicKey) {\n        checkArrayTypes(signedMsg, publicKey);\n        if (publicKey.length !== crypto_sign_PUBLICKEYBYTES) throw new Error('bad public key size');\n        var tmp = new Uint8Array(signedMsg.length);\n        var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n        if (mlen < 0) return null;\n        var m = new Uint8Array(mlen);\n        for(var i = 0; i < m.length; i++)m[i] = tmp[i];\n        return m;\n    };\n    nacl.sign.detached = function(msg, secretKey) {\n        var signedMsg = nacl.sign(msg, secretKey);\n        var sig = new Uint8Array(crypto_sign_BYTES);\n        for(var i = 0; i < sig.length; i++)sig[i] = signedMsg[i];\n        return sig;\n    };\n    nacl.sign.detached.verify = function(msg, sig, publicKey) {\n        checkArrayTypes(msg, sig, publicKey);\n        if (sig.length !== crypto_sign_BYTES) throw new Error('bad signature size');\n        if (publicKey.length !== crypto_sign_PUBLICKEYBYTES) throw new Error('bad public key size');\n        var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n        var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n        var i;\n        for(i = 0; i < crypto_sign_BYTES; i++)sm[i] = sig[i];\n        for(i = 0; i < msg.length; i++)sm[i + crypto_sign_BYTES] = msg[i];\n        return crypto_sign_open(m, sm, sm.length, publicKey) >= 0;\n    };\n    nacl.sign.keyPair = function() {\n        var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n        var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n        crypto_sign_keypair(pk, sk);\n        return {\n            publicKey: pk,\n            secretKey: sk\n        };\n    };\n    nacl.sign.keyPair.fromSecretKey = function(secretKey) {\n        checkArrayTypes(secretKey);\n        if (secretKey.length !== crypto_sign_SECRETKEYBYTES) throw new Error('bad secret key size');\n        var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n        for(var i = 0; i < pk.length; i++)pk[i] = secretKey[32 + i];\n        return {\n            publicKey: pk,\n            secretKey: new Uint8Array(secretKey)\n        };\n    };\n    nacl.sign.keyPair.fromSeed = function(seed) {\n        checkArrayTypes(seed);\n        if (seed.length !== crypto_sign_SEEDBYTES) throw new Error('bad seed size');\n        var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n        var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n        for(var i = 0; i < 32; i++)sk[i] = seed[i];\n        crypto_sign_keypair(pk, sk, true);\n        return {\n            publicKey: pk,\n            secretKey: sk\n        };\n    };\n    nacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\n    nacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\n    nacl.sign.seedLength = crypto_sign_SEEDBYTES;\n    nacl.sign.signatureLength = crypto_sign_BYTES;\n    nacl.hash = function(msg) {\n        checkArrayTypes(msg);\n        var h = new Uint8Array(crypto_hash_BYTES);\n        crypto_hash(h, msg, msg.length);\n        return h;\n    };\n    nacl.hash.hashLength = crypto_hash_BYTES;\n    nacl.verify = function(x, y) {\n        checkArrayTypes(x, y);\n        if (x.length === 0 || y.length === 0) return false;\n        if (x.length !== y.length) return false;\n        return vn(x, 0, y, 0, x.length) === 0 ? true : false;\n    };\n    nacl.setPRNG = function(fn) {\n        randombytes = fn;\n    };\n    (function() {\n        var crypto1 = typeof globalThis !== 'undefined' ? globalThis.crypto || globalThis.msCrypto : null;\n        if (crypto1 && crypto1.getRandomValues) {\n            var QUOTA = 65536;\n            nacl.setPRNG(function(x, n) {\n                var i, v = new Uint8Array(n);\n                for(i = 0; i < n; i += QUOTA){\n                    crypto1.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n                }\n                for(i = 0; i < n; i++)x[i] = v[i];\n                cleanup(v);\n            });\n        } else if (typeof require !== 'undefined') {\n            crypto1 = require('crypto');\n            if (crypto1 && crypto1.randomBytes) {\n                nacl.setPRNG(function(x, n) {\n                    var i, v = crypto1.randomBytes(n);\n                    for(i = 0; i < n; i++)x[i] = v[i];\n                    cleanup(v);\n                });\n            }\n        }\n    })();\n})(typeof module !== 'undefined' && module.exports ? module.exports : globalThis.nacl = globalThis.nacl || {});\nconst nacl = typeof module !== 'undefined' && module.exports ? module.exports : globalThis.nacl;\nconst denoHelper = {\n    fromSeed: nacl.sign.keyPair.fromSeed,\n    sign: nacl.sign.detached,\n    verify: nacl.sign.detached.verify,\n    randomBytes: nacl.randomBytes\n};\nlet helper;\nfunction setEd25519Helper(lib) {\n    helper = lib;\n}\nfunction getEd25519Helper() {\n    return helper;\n}\nconst crc16tab = new Uint16Array([\n    0x0000,\n    0x1021,\n    0x2042,\n    0x3063,\n    0x4084,\n    0x50a5,\n    0x60c6,\n    0x70e7,\n    0x8108,\n    0x9129,\n    0xa14a,\n    0xb16b,\n    0xc18c,\n    0xd1ad,\n    0xe1ce,\n    0xf1ef,\n    0x1231,\n    0x0210,\n    0x3273,\n    0x2252,\n    0x52b5,\n    0x4294,\n    0x72f7,\n    0x62d6,\n    0x9339,\n    0x8318,\n    0xb37b,\n    0xa35a,\n    0xd3bd,\n    0xc39c,\n    0xf3ff,\n    0xe3de,\n    0x2462,\n    0x3443,\n    0x0420,\n    0x1401,\n    0x64e6,\n    0x74c7,\n    0x44a4,\n    0x5485,\n    0xa56a,\n    0xb54b,\n    0x8528,\n    0x9509,\n    0xe5ee,\n    0xf5cf,\n    0xc5ac,\n    0xd58d,\n    0x3653,\n    0x2672,\n    0x1611,\n    0x0630,\n    0x76d7,\n    0x66f6,\n    0x5695,\n    0x46b4,\n    0xb75b,\n    0xa77a,\n    0x9719,\n    0x8738,\n    0xf7df,\n    0xe7fe,\n    0xd79d,\n    0xc7bc,\n    0x48c4,\n    0x58e5,\n    0x6886,\n    0x78a7,\n    0x0840,\n    0x1861,\n    0x2802,\n    0x3823,\n    0xc9cc,\n    0xd9ed,\n    0xe98e,\n    0xf9af,\n    0x8948,\n    0x9969,\n    0xa90a,\n    0xb92b,\n    0x5af5,\n    0x4ad4,\n    0x7ab7,\n    0x6a96,\n    0x1a71,\n    0x0a50,\n    0x3a33,\n    0x2a12,\n    0xdbfd,\n    0xcbdc,\n    0xfbbf,\n    0xeb9e,\n    0x9b79,\n    0x8b58,\n    0xbb3b,\n    0xab1a,\n    0x6ca6,\n    0x7c87,\n    0x4ce4,\n    0x5cc5,\n    0x2c22,\n    0x3c03,\n    0x0c60,\n    0x1c41,\n    0xedae,\n    0xfd8f,\n    0xcdec,\n    0xddcd,\n    0xad2a,\n    0xbd0b,\n    0x8d68,\n    0x9d49,\n    0x7e97,\n    0x6eb6,\n    0x5ed5,\n    0x4ef4,\n    0x3e13,\n    0x2e32,\n    0x1e51,\n    0x0e70,\n    0xff9f,\n    0xefbe,\n    0xdfdd,\n    0xcffc,\n    0xbf1b,\n    0xaf3a,\n    0x9f59,\n    0x8f78,\n    0x9188,\n    0x81a9,\n    0xb1ca,\n    0xa1eb,\n    0xd10c,\n    0xc12d,\n    0xf14e,\n    0xe16f,\n    0x1080,\n    0x00a1,\n    0x30c2,\n    0x20e3,\n    0x5004,\n    0x4025,\n    0x7046,\n    0x6067,\n    0x83b9,\n    0x9398,\n    0xa3fb,\n    0xb3da,\n    0xc33d,\n    0xd31c,\n    0xe37f,\n    0xf35e,\n    0x02b1,\n    0x1290,\n    0x22f3,\n    0x32d2,\n    0x4235,\n    0x5214,\n    0x6277,\n    0x7256,\n    0xb5ea,\n    0xa5cb,\n    0x95a8,\n    0x8589,\n    0xf56e,\n    0xe54f,\n    0xd52c,\n    0xc50d,\n    0x34e2,\n    0x24c3,\n    0x14a0,\n    0x0481,\n    0x7466,\n    0x6447,\n    0x5424,\n    0x4405,\n    0xa7db,\n    0xb7fa,\n    0x8799,\n    0x97b8,\n    0xe75f,\n    0xf77e,\n    0xc71d,\n    0xd73c,\n    0x26d3,\n    0x36f2,\n    0x0691,\n    0x16b0,\n    0x6657,\n    0x7676,\n    0x4615,\n    0x5634,\n    0xd94c,\n    0xc96d,\n    0xf90e,\n    0xe92f,\n    0x99c8,\n    0x89e9,\n    0xb98a,\n    0xa9ab,\n    0x5844,\n    0x4865,\n    0x7806,\n    0x6827,\n    0x18c0,\n    0x08e1,\n    0x3882,\n    0x28a3,\n    0xcb7d,\n    0xdb5c,\n    0xeb3f,\n    0xfb1e,\n    0x8bf9,\n    0x9bd8,\n    0xabbb,\n    0xbb9a,\n    0x4a75,\n    0x5a54,\n    0x6a37,\n    0x7a16,\n    0x0af1,\n    0x1ad0,\n    0x2ab3,\n    0x3a92,\n    0xfd2e,\n    0xed0f,\n    0xdd6c,\n    0xcd4d,\n    0xbdaa,\n    0xad8b,\n    0x9de8,\n    0x8dc9,\n    0x7c26,\n    0x6c07,\n    0x5c64,\n    0x4c45,\n    0x3ca2,\n    0x2c83,\n    0x1ce0,\n    0x0cc1,\n    0xef1f,\n    0xff3e,\n    0xcf5d,\n    0xdf7c,\n    0xaf9b,\n    0xbfba,\n    0x8fd9,\n    0x9ff8,\n    0x6e17,\n    0x7e36,\n    0x4e55,\n    0x5e74,\n    0x2e93,\n    0x3eb2,\n    0x0ed1,\n    0x1ef0\n]);\nclass crc16 {\n    static checksum(data) {\n        let crc = 0;\n        for(let i = 0; i < data.byteLength; i++){\n            let b = data[i];\n            crc = crc << 8 & 0xffff ^ crc16tab[(crc >> 8 ^ b) & 0x00FF];\n        }\n        return crc;\n    }\n    static validate(data, expected) {\n        let ba = crc16.checksum(data);\n        return ba == expected;\n    }\n}\nconst b32Alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nclass base32 {\n    static encode(src) {\n        let bits = 0;\n        let value = 0;\n        let a = new Uint8Array(src);\n        let buf = new Uint8Array(src.byteLength * 2);\n        let j = 0;\n        for(let i = 0; i < a.byteLength; i++){\n            value = value << 8 | a[i];\n            bits += 8;\n            while(bits >= 5){\n                let index = value >>> bits - 5 & 31;\n                buf[j++] = b32Alphabet.charAt(index).charCodeAt(0);\n                bits -= 5;\n            }\n        }\n        if (bits > 0) {\n            let index = value << 5 - bits & 31;\n            buf[j++] = b32Alphabet.charAt(index).charCodeAt(0);\n        }\n        return buf.slice(0, j);\n    }\n    static decode(src) {\n        let bits = 0;\n        let __byte = 0;\n        let j = 0;\n        let a = new Uint8Array(src);\n        let out = new Uint8Array(a.byteLength * 5 / 8 | 0);\n        for(let i = 0; i < a.byteLength; i++){\n            let v = String.fromCharCode(a[i]);\n            let vv = b32Alphabet.indexOf(v);\n            if (vv === -1) {\n                throw new Error(\"Illegal Base32 character: \" + a[i]);\n            }\n            __byte = __byte << 5 | vv;\n            bits += 5;\n            if (bits >= 8) {\n                out[j++] = __byte >>> bits - 8 & 255;\n                bits -= 8;\n            }\n        }\n        return out.slice(0, j);\n    }\n}\nclass NKeysError extends Error {\n    name;\n    code;\n    chainedError;\n    constructor(code, chainedError){\n        super(code);\n        this.name = \"NKeysError\";\n        this.code = code;\n        this.chainedError = chainedError;\n    }\n}\nfunction createOperator() {\n    return createPair(Prefix.Operator);\n}\nfunction createAccount() {\n    return createPair(Prefix.Account);\n}\nfunction createUser() {\n    return createPair(Prefix.User);\n}\nvar NKeysErrorCode;\n(function(NKeysErrorCode) {\n    NKeysErrorCode[\"InvalidPrefixByte\"] = \"nkeys: invalid prefix byte\";\n    NKeysErrorCode[\"InvalidKey\"] = \"nkeys: invalid key\";\n    NKeysErrorCode[\"InvalidPublicKey\"] = \"nkeys: invalid public key\";\n    NKeysErrorCode[\"InvalidSeedLen\"] = \"nkeys: invalid seed length\";\n    NKeysErrorCode[\"InvalidSeed\"] = \"nkeys: invalid seed\";\n    NKeysErrorCode[\"InvalidEncoding\"] = \"nkeys: invalid encoded key\";\n    NKeysErrorCode[\"InvalidSignature\"] = \"nkeys: signature verification failed\";\n    NKeysErrorCode[\"CannotSign\"] = \"nkeys: cannot sign, no private key available\";\n    NKeysErrorCode[\"PublicKeyOnly\"] = \"nkeys: no seed or private key available\";\n    NKeysErrorCode[\"InvalidChecksum\"] = \"nkeys: invalid checksum\";\n    NKeysErrorCode[\"SerializationError\"] = \"nkeys: serialization error\";\n    NKeysErrorCode[\"ApiError\"] = \"nkeys: api error\";\n    NKeysErrorCode[\"ClearedPair\"] = \"nkeys: pair is cleared\";\n})(NKeysErrorCode || (NKeysErrorCode = {}));\nvar Prefix;\n(function(Prefix) {\n    Prefix[Prefix[\"Seed\"] = 144] = \"Seed\";\n    Prefix[Prefix[\"Private\"] = 120] = \"Private\";\n    Prefix[Prefix[\"Operator\"] = 112] = \"Operator\";\n    Prefix[Prefix[\"Server\"] = 104] = \"Server\";\n    Prefix[Prefix[\"Cluster\"] = 16] = \"Cluster\";\n    Prefix[Prefix[\"Account\"] = 0] = \"Account\";\n    Prefix[Prefix[\"User\"] = 160] = \"User\";\n})(Prefix || (Prefix = {}));\nclass Prefixes {\n    static isValidPublicPrefix(prefix) {\n        return prefix == Prefix.Server || prefix == Prefix.Operator || prefix == Prefix.Cluster || prefix == Prefix.Account || prefix == Prefix.User;\n    }\n    static startsWithValidPrefix(s) {\n        let c = s[0];\n        return c == \"S\" || c == \"P\" || c == \"O\" || c == \"N\" || c == \"C\" || c == \"A\" || c == \"U\";\n    }\n    static isValidPrefix(prefix) {\n        let v = this.parsePrefix(prefix);\n        return v != -1;\n    }\n    static parsePrefix(v) {\n        switch(v){\n            case Prefix.Seed:\n                return Prefix.Seed;\n            case Prefix.Private:\n                return Prefix.Private;\n            case Prefix.Operator:\n                return Prefix.Operator;\n            case Prefix.Server:\n                return Prefix.Server;\n            case Prefix.Cluster:\n                return Prefix.Cluster;\n            case Prefix.Account:\n                return Prefix.Account;\n            case Prefix.User:\n                return Prefix.User;\n            default:\n                return -1;\n        }\n    }\n}\nclass Codec {\n    static encode(prefix, src) {\n        if (!src || !(src instanceof Uint8Array)) {\n            throw new NKeysError(NKeysErrorCode.SerializationError);\n        }\n        if (!Prefixes.isValidPrefix(prefix)) {\n            throw new NKeysError(NKeysErrorCode.InvalidPrefixByte);\n        }\n        return Codec._encode(false, prefix, src);\n    }\n    static encodeSeed(role, src) {\n        if (!src) {\n            throw new NKeysError(NKeysErrorCode.ApiError);\n        }\n        if (!Prefixes.isValidPublicPrefix(role)) {\n            throw new NKeysError(NKeysErrorCode.InvalidPrefixByte);\n        }\n        if (src.byteLength !== 32) {\n            throw new NKeysError(NKeysErrorCode.InvalidSeedLen);\n        }\n        return Codec._encode(true, role, src);\n    }\n    static decode(expected, src) {\n        if (!Prefixes.isValidPrefix(expected)) {\n            throw new NKeysError(NKeysErrorCode.InvalidPrefixByte);\n        }\n        const raw = Codec._decode(src);\n        if (raw[0] !== expected) {\n            throw new NKeysError(NKeysErrorCode.InvalidPrefixByte);\n        }\n        return raw.slice(1);\n    }\n    static decodeSeed(src) {\n        const raw = Codec._decode(src);\n        const prefix = Codec._decodePrefix(raw);\n        if (prefix[0] != Prefix.Seed) {\n            throw new NKeysError(NKeysErrorCode.InvalidSeed);\n        }\n        if (!Prefixes.isValidPublicPrefix(prefix[1])) {\n            throw new NKeysError(NKeysErrorCode.InvalidPrefixByte);\n        }\n        return {\n            buf: raw.slice(2),\n            prefix: prefix[1]\n        };\n    }\n    static _encode(seed, role, payload) {\n        const payloadOffset = seed ? 2 : 1;\n        const payloadLen = payload.byteLength;\n        const cap = payloadOffset + payloadLen + 2;\n        const checkOffset = payloadOffset + payloadLen;\n        const raw = new Uint8Array(cap);\n        if (seed) {\n            const encodedPrefix = Codec._encodePrefix(Prefix.Seed, role);\n            raw.set(encodedPrefix);\n        } else {\n            raw[0] = role;\n        }\n        raw.set(payload, payloadOffset);\n        const checksum = crc16.checksum(raw.slice(0, checkOffset));\n        const dv = new DataView(raw.buffer);\n        dv.setUint16(checkOffset, checksum, true);\n        return base32.encode(raw);\n    }\n    static _decode(src) {\n        if (src.byteLength < 4) {\n            throw new NKeysError(NKeysErrorCode.InvalidEncoding);\n        }\n        let raw;\n        try {\n            raw = base32.decode(src);\n        } catch (ex) {\n            throw new NKeysError(NKeysErrorCode.InvalidEncoding, ex);\n        }\n        const checkOffset = raw.byteLength - 2;\n        const dv = new DataView(raw.buffer);\n        const checksum = dv.getUint16(checkOffset, true);\n        const payload = raw.slice(0, checkOffset);\n        if (!crc16.validate(payload, checksum)) {\n            throw new NKeysError(NKeysErrorCode.InvalidChecksum);\n        }\n        return payload;\n    }\n    static _encodePrefix(kind, role) {\n        const b1 = kind | role >> 5;\n        const b2 = (role & 31) << 3;\n        return new Uint8Array([\n            b1,\n            b2\n        ]);\n    }\n    static _decodePrefix(raw) {\n        const b1 = raw[0] & 248;\n        const b2 = (raw[0] & 7) << 5 | (raw[1] & 248) >> 3;\n        return new Uint8Array([\n            b1,\n            b2\n        ]);\n    }\n}\nclass KP {\n    seed;\n    constructor(seed){\n        this.seed = seed;\n    }\n    getRawSeed() {\n        if (!this.seed) {\n            throw new NKeysError(NKeysErrorCode.ClearedPair);\n        }\n        let sd = Codec.decodeSeed(this.seed);\n        return sd.buf;\n    }\n    getSeed() {\n        if (!this.seed) {\n            throw new NKeysError(NKeysErrorCode.ClearedPair);\n        }\n        return this.seed;\n    }\n    getPublicKey() {\n        if (!this.seed) {\n            throw new NKeysError(NKeysErrorCode.ClearedPair);\n        }\n        const sd = Codec.decodeSeed(this.seed);\n        const kp = getEd25519Helper().fromSeed(this.getRawSeed());\n        const buf = Codec.encode(sd.prefix, kp.publicKey);\n        return new TextDecoder().decode(buf);\n    }\n    getPrivateKey() {\n        if (!this.seed) {\n            throw new NKeysError(NKeysErrorCode.ClearedPair);\n        }\n        const kp = getEd25519Helper().fromSeed(this.getRawSeed());\n        return Codec.encode(Prefix.Private, kp.secretKey);\n    }\n    sign(input) {\n        if (!this.seed) {\n            throw new NKeysError(NKeysErrorCode.ClearedPair);\n        }\n        const kp = getEd25519Helper().fromSeed(this.getRawSeed());\n        return getEd25519Helper().sign(input, kp.secretKey);\n    }\n    verify(input, sig) {\n        if (!this.seed) {\n            throw new NKeysError(NKeysErrorCode.ClearedPair);\n        }\n        const kp = getEd25519Helper().fromSeed(this.getRawSeed());\n        return getEd25519Helper().verify(input, sig, kp.publicKey);\n    }\n    clear() {\n        if (!this.seed) {\n            return;\n        }\n        this.seed.fill(0);\n        this.seed = undefined;\n    }\n}\nfunction createPair(prefix) {\n    const rawSeed = getEd25519Helper().randomBytes(32);\n    let str = Codec.encodeSeed(prefix, new Uint8Array(rawSeed));\n    return new KP(str);\n}\nclass PublicKey {\n    publicKey;\n    constructor(publicKey){\n        this.publicKey = publicKey;\n    }\n    getPublicKey() {\n        if (!this.publicKey) {\n            throw new NKeysError(NKeysErrorCode.ClearedPair);\n        }\n        return new TextDecoder().decode(this.publicKey);\n    }\n    getPrivateKey() {\n        if (!this.publicKey) {\n            throw new NKeysError(NKeysErrorCode.ClearedPair);\n        }\n        throw new NKeysError(NKeysErrorCode.PublicKeyOnly);\n    }\n    getSeed() {\n        if (!this.publicKey) {\n            throw new NKeysError(NKeysErrorCode.ClearedPair);\n        }\n        throw new NKeysError(NKeysErrorCode.PublicKeyOnly);\n    }\n    sign(_) {\n        if (!this.publicKey) {\n            throw new NKeysError(NKeysErrorCode.ClearedPair);\n        }\n        throw new NKeysError(NKeysErrorCode.CannotSign);\n    }\n    verify(input, sig) {\n        if (!this.publicKey) {\n            throw new NKeysError(NKeysErrorCode.ClearedPair);\n        }\n        let buf = Codec._decode(this.publicKey);\n        return getEd25519Helper().verify(input, sig, buf.slice(1));\n    }\n    clear() {\n        if (!this.publicKey) {\n            return;\n        }\n        this.publicKey.fill(0);\n        this.publicKey = undefined;\n    }\n}\nfunction fromPublic(src) {\n    const ba = new TextEncoder().encode(src);\n    const raw = Codec._decode(ba);\n    const prefix = Prefixes.parsePrefix(raw[0]);\n    if (Prefixes.isValidPublicPrefix(prefix)) {\n        return new PublicKey(ba);\n    }\n    throw new NKeysError(NKeysErrorCode.InvalidPublicKey);\n}\nfunction fromSeed(src) {\n    Codec.decodeSeed(src);\n    return new KP(src);\n}\nfunction encode1(bytes) {\n    return btoa(String.fromCharCode(...bytes));\n}\nfunction decode1(b64str) {\n    const bin = atob(b64str);\n    const bytes = new Uint8Array(bin.length);\n    for(let i = 0; i < bin.length; i++){\n        bytes[i] = bin.charCodeAt(i);\n    }\n    return bytes;\n}\nsetEd25519Helper(denoHelper);\nconst mod = {\n    createAccount,\n    createOperator,\n    createPair,\n    createUser,\n    fromPublic,\n    fromSeed,\n    NKeysError,\n    NKeysErrorCode,\n    Prefix,\n    decode: decode1,\n    encode: encode1\n};\nfunction multiAuthenticator(authenticators) {\n    return (nonce)=>{\n        let auth = {};\n        authenticators.forEach((a)=>{\n            const args = a(nonce) || {};\n            auth = Object.assign(auth, args);\n        });\n        return auth;\n    };\n}\nfunction noAuthFn() {\n    return ()=>{\n        return;\n    };\n}\nfunction usernamePasswordAuthenticator(user, pass) {\n    return ()=>{\n        const u = typeof user === \"function\" ? user() : user;\n        const p = typeof pass === \"function\" ? pass() : pass;\n        return {\n            user: u,\n            pass: p\n        };\n    };\n}\nfunction tokenAuthenticator(token) {\n    return ()=>{\n        const auth_token = typeof token === \"function\" ? token() : token;\n        return {\n            auth_token\n        };\n    };\n}\nfunction nkeyAuthenticator(seed) {\n    return (nonce)=>{\n        const s = typeof seed === \"function\" ? seed() : seed;\n        const kp = s ? mod.fromSeed(s) : undefined;\n        const nkey = kp ? kp.getPublicKey() : \"\";\n        const challenge = TE.encode(nonce || \"\");\n        const sigBytes = kp !== undefined && nonce ? kp.sign(challenge) : undefined;\n        const sig = sigBytes ? mod.encode(sigBytes) : \"\";\n        return {\n            nkey,\n            sig\n        };\n    };\n}\nfunction jwtAuthenticator(ajwt, seed) {\n    return (nonce)=>{\n        const jwt = typeof ajwt === \"function\" ? ajwt() : ajwt;\n        const fn = nkeyAuthenticator(seed);\n        const { nkey, sig } = fn(nonce);\n        return {\n            jwt,\n            nkey,\n            sig\n        };\n    };\n}\nfunction credsAuthenticator(creds) {\n    const fn = typeof creds !== \"function\" ? ()=>creds : creds;\n    const parse = ()=>{\n        const CREDS = /\\s*(?:(?:[-]{3,}[^\\n]*[-]{3,}\\n)(.+)(?:\\n\\s*[-]{3,}[^\\n]*[-]{3,}\\n))/ig;\n        const s = TD.decode(fn());\n        let m = CREDS.exec(s);\n        if (!m) {\n            throw NatsError.errorForCode(ErrorCode.BadCreds);\n        }\n        const jwt = m[1].trim();\n        m = CREDS.exec(s);\n        if (!m) {\n            throw NatsError.errorForCode(ErrorCode.BadCreds);\n        }\n        if (!m) {\n            throw NatsError.errorForCode(ErrorCode.BadCreds);\n        }\n        const seed = TE.encode(m[1].trim());\n        return {\n            jwt,\n            seed\n        };\n    };\n    const jwtFn = ()=>{\n        const { jwt } = parse();\n        return jwt;\n    };\n    const nkeyFn = ()=>{\n        const { seed } = parse();\n        return seed;\n    };\n    return jwtAuthenticator(jwtFn, nkeyFn);\n}\nconst DEFAULT_PING_INTERVAL = 2 * 60 * 1000;\nconst DEFAULT_MAX_PING_OUT = 2;\nconst DEFAULT_RECONNECT_TIME_WAIT = 2 * 1000;\nfunction defaultOptions() {\n    return {\n        maxPingOut: 2,\n        maxReconnectAttempts: 10,\n        noRandomize: false,\n        pedantic: false,\n        pingInterval: DEFAULT_PING_INTERVAL,\n        reconnect: true,\n        reconnectJitter: 100,\n        reconnectJitterTLS: 1000,\n        reconnectTimeWait: DEFAULT_RECONNECT_TIME_WAIT,\n        tls: undefined,\n        verbose: false,\n        waitOnFirstConnect: false,\n        ignoreAuthErrorAbort: false\n    };\n}\nfunction buildAuthenticator(opts) {\n    const buf = [];\n    if (typeof opts.authenticator === \"function\") {\n        buf.push(opts.authenticator);\n    }\n    if (Array.isArray(opts.authenticator)) {\n        buf.push(...opts.authenticator);\n    }\n    if (opts.token) {\n        buf.push(tokenAuthenticator(opts.token));\n    }\n    if (opts.user) {\n        buf.push(usernamePasswordAuthenticator(opts.user, opts.pass));\n    }\n    return buf.length === 0 ? noAuthFn() : multiAuthenticator(buf);\n}\nfunction parseOptions(opts) {\n    const dhp = `${DEFAULT_HOST}:${defaultPort()}`;\n    opts = opts || {\n        servers: [\n            dhp\n        ]\n    };\n    opts.servers = opts.servers || [];\n    if (typeof opts.servers === \"string\") {\n        opts.servers = [\n            opts.servers\n        ];\n    }\n    if (opts.servers.length > 0 && opts.port) {\n        throw new NatsError(\"port and servers options are mutually exclusive\", ErrorCode.InvalidOption);\n    }\n    if (opts.servers.length === 0 && opts.port) {\n        opts.servers = [\n            `${DEFAULT_HOST}:${opts.port}`\n        ];\n    }\n    if (opts.servers && opts.servers.length === 0) {\n        opts.servers = [\n            dhp\n        ];\n    }\n    const options = extend(defaultOptions(), opts);\n    options.authenticator = buildAuthenticator(options);\n    [\n        \"reconnectDelayHandler\",\n        \"authenticator\"\n    ].forEach((n)=>{\n        if (options[n] && typeof options[n] !== \"function\") {\n            throw new NatsError(`${n} option should be a function`, ErrorCode.NotFunction);\n        }\n    });\n    if (!options.reconnectDelayHandler) {\n        options.reconnectDelayHandler = ()=>{\n            let extra = options.tls ? options.reconnectJitterTLS : options.reconnectJitter;\n            if (extra) {\n                extra++;\n                extra = Math.floor(Math.random() * extra);\n            }\n            return options.reconnectTimeWait + extra;\n        };\n    }\n    if (options.inboxPrefix) {\n        try {\n            createInbox(options.inboxPrefix);\n        } catch (err) {\n            throw new NatsError(err.message, ErrorCode.ApiError);\n        }\n    }\n    if (options.resolve) {\n        if (typeof getResolveFn() !== \"function\") {\n            throw new NatsError(`'resolve' is not supported on this client`, ErrorCode.InvalidOption);\n        }\n    }\n    return options;\n}\nfunction checkOptions(info, options) {\n    const { proto, tls_required: tlsRequired, tls_available: tlsAvailable } = info;\n    if ((proto === undefined || proto < 1) && options.noEcho) {\n        throw new NatsError(\"noEcho\", ErrorCode.ServerOptionNotAvailable);\n    }\n    const tls = tlsRequired || tlsAvailable || false;\n    if (options.tls && !tls) {\n        throw new NatsError(\"tls\", ErrorCode.ServerOptionNotAvailable);\n    }\n}\nconst FLUSH_THRESHOLD = 1024 * 32;\nconst INFO = /^INFO\\s+([^\\r\\n]+)\\r\\n/i;\nconst PONG_CMD = encode(\"PONG\\r\\n\");\nconst PING_CMD = encode(\"PING\\r\\n\");\nclass Connect {\n    echo;\n    no_responders;\n    protocol;\n    verbose;\n    pedantic;\n    jwt;\n    nkey;\n    sig;\n    user;\n    pass;\n    auth_token;\n    tls_required;\n    name;\n    lang;\n    version;\n    headers;\n    constructor(transport, opts, nonce){\n        this.protocol = 1;\n        this.version = transport.version;\n        this.lang = transport.lang;\n        this.echo = opts.noEcho ? false : undefined;\n        this.verbose = opts.verbose;\n        this.pedantic = opts.pedantic;\n        this.tls_required = opts.tls ? true : undefined;\n        this.name = opts.name;\n        const creds = (opts && typeof opts.authenticator === \"function\" ? opts.authenticator(nonce) : {}) || {};\n        extend(this, creds);\n    }\n}\nclass SubscriptionImpl extends QueuedIteratorImpl {\n    sid;\n    queue;\n    draining;\n    max;\n    subject;\n    drained;\n    protocol;\n    timer;\n    info;\n    cleanupFn;\n    closed;\n    requestSubject;\n    constructor(protocol, subject, opts = {}){\n        super();\n        extend(this, opts);\n        this.protocol = protocol;\n        this.subject = subject;\n        this.draining = false;\n        this.noIterator = typeof opts.callback === \"function\";\n        this.closed = deferred();\n        const asyncTraces = !(protocol.options?.noAsyncTraces || false);\n        if (opts.timeout) {\n            this.timer = timeout(opts.timeout, asyncTraces);\n            this.timer.then(()=>{\n                this.timer = undefined;\n            }).catch((err)=>{\n                this.stop(err);\n                if (this.noIterator) {\n                    this.callback(err, {});\n                }\n            });\n        }\n        if (!this.noIterator) {\n            this.iterClosed.then(()=>{\n                this.closed.resolve();\n                this.unsubscribe();\n            });\n        }\n    }\n    setPrePostHandlers(opts) {\n        if (this.noIterator) {\n            const uc = this.callback;\n            const ingestion = opts.ingestionFilterFn ? opts.ingestionFilterFn : ()=>{\n                return {\n                    ingest: true,\n                    protocol: false\n                };\n            };\n            const filter = opts.protocolFilterFn ? opts.protocolFilterFn : ()=>{\n                return true;\n            };\n            const dispatched = opts.dispatchedFn ? opts.dispatchedFn : ()=>{};\n            this.callback = (err, msg)=>{\n                const { ingest } = ingestion(msg);\n                if (!ingest) {\n                    return;\n                }\n                if (filter(msg)) {\n                    uc(err, msg);\n                    dispatched(msg);\n                }\n            };\n        } else {\n            this.protocolFilterFn = opts.protocolFilterFn;\n            this.dispatchedFn = opts.dispatchedFn;\n        }\n    }\n    callback(err, msg) {\n        this.cancelTimeout();\n        err ? this.stop(err) : this.push(msg);\n    }\n    close() {\n        if (!this.isClosed()) {\n            this.cancelTimeout();\n            const fn = ()=>{\n                this.stop();\n                if (this.cleanupFn) {\n                    try {\n                        this.cleanupFn(this, this.info);\n                    } catch (_err) {}\n                }\n                this.closed.resolve();\n            };\n            if (this.noIterator) {\n                fn();\n            } else {\n                this.push(fn);\n            }\n        }\n    }\n    unsubscribe(max) {\n        this.protocol.unsubscribe(this, max);\n    }\n    cancelTimeout() {\n        if (this.timer) {\n            this.timer.cancel();\n            this.timer = undefined;\n        }\n    }\n    drain() {\n        if (this.protocol.isClosed()) {\n            return Promise.reject(NatsError.errorForCode(ErrorCode.ConnectionClosed));\n        }\n        if (this.isClosed()) {\n            return Promise.reject(NatsError.errorForCode(ErrorCode.SubClosed));\n        }\n        if (!this.drained) {\n            this.draining = true;\n            this.protocol.unsub(this);\n            this.drained = this.protocol.flush(deferred()).then(()=>{\n                this.protocol.subscriptions.cancel(this);\n            }).catch(()=>{\n                this.protocol.subscriptions.cancel(this);\n            });\n        }\n        return this.drained;\n    }\n    isDraining() {\n        return this.draining;\n    }\n    isClosed() {\n        return this.done;\n    }\n    getSubject() {\n        return this.subject;\n    }\n    getMax() {\n        return this.max;\n    }\n    getID() {\n        return this.sid;\n    }\n}\nclass Subscriptions {\n    mux;\n    subs;\n    sidCounter;\n    constructor(){\n        this.sidCounter = 0;\n        this.mux = null;\n        this.subs = new Map();\n    }\n    size() {\n        return this.subs.size;\n    }\n    add(s) {\n        this.sidCounter++;\n        s.sid = this.sidCounter;\n        this.subs.set(s.sid, s);\n        return s;\n    }\n    setMux(s) {\n        this.mux = s;\n        return s;\n    }\n    getMux() {\n        return this.mux;\n    }\n    get(sid) {\n        return this.subs.get(sid);\n    }\n    resub(s) {\n        this.sidCounter++;\n        this.subs.delete(s.sid);\n        s.sid = this.sidCounter;\n        this.subs.set(s.sid, s);\n        return s;\n    }\n    all() {\n        return Array.from(this.subs.values());\n    }\n    cancel(s) {\n        if (s) {\n            s.close();\n            this.subs.delete(s.sid);\n        }\n    }\n    handleError(err) {\n        if (err && err.permissionContext) {\n            const ctx = err.permissionContext;\n            const subs = this.all();\n            let sub;\n            if (ctx.operation === \"subscription\") {\n                sub = subs.find((s)=>{\n                    return s.subject === ctx.subject;\n                });\n            }\n            if (ctx.operation === \"publish\") {\n                sub = subs.find((s)=>{\n                    return s.requestSubject === ctx.subject;\n                });\n            }\n            if (sub) {\n                sub.callback(err, {});\n                sub.close();\n                this.subs.delete(sub.sid);\n                return sub !== this.mux;\n            }\n        }\n        return false;\n    }\n    close() {\n        this.subs.forEach((sub)=>{\n            sub.close();\n        });\n    }\n}\nclass ProtocolHandler {\n    connected;\n    connectedOnce;\n    infoReceived;\n    info;\n    muxSubscriptions;\n    options;\n    outbound;\n    pongs;\n    subscriptions;\n    transport;\n    noMorePublishing;\n    connectError;\n    publisher;\n    _closed;\n    closed;\n    listeners;\n    heartbeats;\n    parser;\n    outMsgs;\n    inMsgs;\n    outBytes;\n    inBytes;\n    pendingLimit;\n    lastError;\n    abortReconnect;\n    servers;\n    server;\n    features;\n    connectPromise;\n    constructor(options, publisher){\n        this._closed = false;\n        this.connected = false;\n        this.connectedOnce = false;\n        this.infoReceived = false;\n        this.noMorePublishing = false;\n        this.abortReconnect = false;\n        this.listeners = [];\n        this.pendingLimit = FLUSH_THRESHOLD;\n        this.outMsgs = 0;\n        this.inMsgs = 0;\n        this.outBytes = 0;\n        this.inBytes = 0;\n        this.options = options;\n        this.publisher = publisher;\n        this.subscriptions = new Subscriptions();\n        this.muxSubscriptions = new MuxSubscription();\n        this.outbound = new DataBuffer();\n        this.pongs = [];\n        this.pendingLimit = options.pendingLimit || this.pendingLimit;\n        this.features = new Features({\n            major: 0,\n            minor: 0,\n            micro: 0\n        });\n        this.connectPromise = null;\n        const servers = typeof options.servers === \"string\" ? [\n            options.servers\n        ] : options.servers;\n        this.servers = new Servers(servers, {\n            randomize: !options.noRandomize\n        });\n        this.closed = deferred();\n        this.parser = new Parser(this);\n        this.heartbeats = new Heartbeat(this, this.options.pingInterval || DEFAULT_PING_INTERVAL, this.options.maxPingOut || DEFAULT_MAX_PING_OUT);\n    }\n    resetOutbound() {\n        this.outbound.reset();\n        const pongs = this.pongs;\n        this.pongs = [];\n        const err = NatsError.errorForCode(ErrorCode.Disconnect);\n        err.stack = \"\";\n        pongs.forEach((p)=>{\n            p.reject(err);\n        });\n        this.parser = new Parser(this);\n        this.infoReceived = false;\n    }\n    dispatchStatus(status) {\n        this.listeners.forEach((q)=>{\n            q.push(status);\n        });\n    }\n    status() {\n        const iter = new QueuedIteratorImpl();\n        this.listeners.push(iter);\n        return iter;\n    }\n    prepare() {\n        if (this.transport) {\n            this.transport.discard();\n        }\n        this.info = undefined;\n        this.resetOutbound();\n        const pong = deferred();\n        pong.catch(()=>{});\n        this.pongs.unshift(pong);\n        this.connectError = (err)=>{\n            pong.reject(err);\n        };\n        this.transport = newTransport();\n        this.transport.closed().then(async (_err)=>{\n            this.connected = false;\n            if (!this.isClosed()) {\n                await this.disconnected(this.transport.closeError || this.lastError);\n                return;\n            }\n        });\n        return pong;\n    }\n    disconnect() {\n        this.dispatchStatus({\n            type: DebugEvents.StaleConnection,\n            data: \"\"\n        });\n        this.transport.disconnect();\n    }\n    reconnect() {\n        if (this.connected) {\n            this.dispatchStatus({\n                type: DebugEvents.ClientInitiatedReconnect,\n                data: \"\"\n            });\n            this.transport.disconnect();\n        }\n        return Promise.resolve();\n    }\n    async disconnected(err) {\n        this.dispatchStatus({\n            type: Events.Disconnect,\n            data: this.servers.getCurrentServer().toString()\n        });\n        if (this.options.reconnect) {\n            await this.dialLoop().then(()=>{\n                this.dispatchStatus({\n                    type: Events.Reconnect,\n                    data: this.servers.getCurrentServer().toString()\n                });\n                if (this.lastError?.code === ErrorCode.AuthenticationExpired) {\n                    this.lastError = undefined;\n                }\n            }).catch((err)=>{\n                this._close(err);\n            });\n        } else {\n            await this._close(err);\n        }\n    }\n    async dial(srv) {\n        const pong = this.prepare();\n        let timer;\n        try {\n            timer = timeout(this.options.timeout || 20000);\n            const cp = this.transport.connect(srv, this.options);\n            await Promise.race([\n                cp,\n                timer\n            ]);\n            (async ()=>{\n                try {\n                    for await (const b of this.transport){\n                        this.parser.parse(b);\n                    }\n                } catch (err) {\n                    console.log(\"reader closed\", err);\n                }\n            })().then();\n        } catch (err) {\n            pong.reject(err);\n        }\n        try {\n            await Promise.race([\n                timer,\n                pong\n            ]);\n            if (timer) {\n                timer.cancel();\n            }\n            this.connected = true;\n            this.connectError = undefined;\n            this.sendSubscriptions();\n            this.connectedOnce = true;\n            this.server.didConnect = true;\n            this.server.reconnects = 0;\n            this.flushPending();\n            this.heartbeats.start();\n        } catch (err) {\n            if (timer) {\n                timer.cancel();\n            }\n            await this.transport.close(err);\n            throw err;\n        }\n    }\n    async _doDial(srv) {\n        const alts = await srv.resolve({\n            fn: getResolveFn(),\n            debug: this.options.debug,\n            randomize: !this.options.noRandomize\n        });\n        let lastErr = null;\n        for (const a of alts){\n            try {\n                lastErr = null;\n                this.dispatchStatus({\n                    type: DebugEvents.Reconnecting,\n                    data: a.toString()\n                });\n                await this.dial(a);\n                return;\n            } catch (err) {\n                lastErr = err;\n            }\n        }\n        throw lastErr;\n    }\n    dialLoop() {\n        if (this.connectPromise === null) {\n            this.connectPromise = this.dodialLoop();\n            this.connectPromise.then(()=>{}).catch(()=>{}).finally(()=>{\n                this.connectPromise = null;\n            });\n        }\n        return this.connectPromise;\n    }\n    async dodialLoop() {\n        let lastError;\n        while(true){\n            if (this._closed) {\n                this.servers.clear();\n            }\n            const wait = this.options.reconnectDelayHandler ? this.options.reconnectDelayHandler() : DEFAULT_RECONNECT_TIME_WAIT;\n            let maxWait = wait;\n            const srv = this.selectServer();\n            if (!srv || this.abortReconnect) {\n                if (lastError) {\n                    throw lastError;\n                } else if (this.lastError) {\n                    throw this.lastError;\n                } else {\n                    throw NatsError.errorForCode(ErrorCode.ConnectionRefused);\n                }\n            }\n            const now = Date.now();\n            if (srv.lastConnect === 0 || srv.lastConnect + wait <= now) {\n                srv.lastConnect = Date.now();\n                try {\n                    await this._doDial(srv);\n                    break;\n                } catch (err) {\n                    lastError = err;\n                    if (!this.connectedOnce) {\n                        if (this.options.waitOnFirstConnect) {\n                            continue;\n                        }\n                        this.servers.removeCurrentServer();\n                    }\n                    srv.reconnects++;\n                    const mra = this.options.maxReconnectAttempts || 0;\n                    if (mra !== -1 && srv.reconnects >= mra) {\n                        this.servers.removeCurrentServer();\n                    }\n                }\n            } else {\n                maxWait = Math.min(maxWait, srv.lastConnect + wait - now);\n                await delay(maxWait);\n            }\n        }\n    }\n    static async connect(options, publisher) {\n        const h = new ProtocolHandler(options, publisher);\n        await h.dialLoop();\n        return h;\n    }\n    static toError(s) {\n        const t = s ? s.toLowerCase() : \"\";\n        if (t.indexOf(\"permissions violation\") !== -1) {\n            const err = new NatsError(s, ErrorCode.PermissionsViolation);\n            const m = s.match(/(Publish|Subscription) to \"(\\S+)\"/);\n            if (m) {\n                err.permissionContext = {\n                    operation: m[1].toLowerCase(),\n                    subject: m[2]\n                };\n            }\n            return err;\n        } else if (t.indexOf(\"authorization violation\") !== -1) {\n            return new NatsError(s, ErrorCode.AuthorizationViolation);\n        } else if (t.indexOf(\"user authentication expired\") !== -1) {\n            return new NatsError(s, ErrorCode.AuthenticationExpired);\n        } else if (t.indexOf(\"authentication timeout\") !== -1) {\n            return new NatsError(s, ErrorCode.AuthenticationTimeout);\n        } else {\n            return new NatsError(s, ErrorCode.ProtocolError);\n        }\n    }\n    processMsg(msg, data) {\n        this.inMsgs++;\n        this.inBytes += data.length;\n        if (!this.subscriptions.sidCounter) {\n            return;\n        }\n        const sub = this.subscriptions.get(msg.sid);\n        if (!sub) {\n            return;\n        }\n        sub.received += 1;\n        if (sub.callback) {\n            sub.callback(null, new MsgImpl(msg, data, this));\n        }\n        if (sub.max !== undefined && sub.received >= sub.max) {\n            sub.unsubscribe();\n        }\n    }\n    processError(m) {\n        const s = decode(m);\n        const err = ProtocolHandler.toError(s);\n        const status = {\n            type: Events.Error,\n            data: err.code\n        };\n        if (err.isPermissionError()) {\n            let isMuxPermissionError = false;\n            if (err.permissionContext) {\n                status.permissionContext = err.permissionContext;\n                const mux = this.subscriptions.getMux();\n                isMuxPermissionError = mux?.subject === err.permissionContext.subject;\n            }\n            this.subscriptions.handleError(err);\n            this.muxSubscriptions.handleError(isMuxPermissionError, err);\n            if (isMuxPermissionError) {\n                this.subscriptions.setMux(null);\n            }\n        }\n        this.dispatchStatus(status);\n        this.handleError(err);\n    }\n    handleError(err) {\n        if (err.isAuthError()) {\n            this.handleAuthError(err);\n        } else if (err.isProtocolError()) {\n            this.lastError = err;\n        } else if (err.isAuthTimeout()) {\n            this.lastError = err;\n        }\n        if (!err.isPermissionError()) {\n            this.lastError = err;\n        }\n    }\n    handleAuthError(err) {\n        if (this.lastError && err.code === this.lastError.code && this.options.ignoreAuthErrorAbort === false) {\n            this.abortReconnect = true;\n        }\n        if (this.connectError) {\n            this.connectError(err);\n        } else {\n            this.disconnect();\n        }\n    }\n    processPing() {\n        this.transport.send(PONG_CMD);\n    }\n    processPong() {\n        const cb = this.pongs.shift();\n        if (cb) {\n            cb.resolve();\n        }\n    }\n    processInfo(m) {\n        const info = JSON.parse(decode(m));\n        this.info = info;\n        const updates = this.options && this.options.ignoreClusterUpdates ? undefined : this.servers.update(info);\n        if (!this.infoReceived) {\n            this.features.update(parseSemVer(info.version));\n            this.infoReceived = true;\n            if (this.transport.isEncrypted()) {\n                this.servers.updateTLSName();\n            }\n            const { version, lang } = this.transport;\n            try {\n                const c = new Connect({\n                    version,\n                    lang\n                }, this.options, info.nonce);\n                if (info.headers) {\n                    c.headers = true;\n                    c.no_responders = true;\n                }\n                const cs = JSON.stringify(c);\n                this.transport.send(encode(`CONNECT ${cs}${CR_LF}`));\n                this.transport.send(PING_CMD);\n            } catch (err) {\n                this._close(err);\n            }\n        }\n        if (updates) {\n            this.dispatchStatus({\n                type: Events.Update,\n                data: updates\n            });\n        }\n        const ldm = info.ldm !== undefined ? info.ldm : false;\n        if (ldm) {\n            this.dispatchStatus({\n                type: Events.LDM,\n                data: this.servers.getCurrentServer().toString()\n            });\n        }\n    }\n    push(e) {\n        switch(e.kind){\n            case Kind.MSG:\n                {\n                    const { msg, data } = e;\n                    this.processMsg(msg, data);\n                    break;\n                }\n            case Kind.OK:\n                break;\n            case Kind.ERR:\n                this.processError(e.data);\n                break;\n            case Kind.PING:\n                this.processPing();\n                break;\n            case Kind.PONG:\n                this.processPong();\n                break;\n            case Kind.INFO:\n                this.processInfo(e.data);\n                break;\n        }\n    }\n    sendCommand(cmd, ...payloads) {\n        const len = this.outbound.length();\n        let buf;\n        if (typeof cmd === \"string\") {\n            buf = encode(cmd);\n        } else {\n            buf = cmd;\n        }\n        this.outbound.fill(buf, ...payloads);\n        if (len === 0) {\n            queueMicrotask(()=>{\n                this.flushPending();\n            });\n        } else if (this.outbound.size() >= this.pendingLimit) {\n            this.flushPending();\n        }\n    }\n    publish(subject, payload = Empty, options) {\n        let data;\n        if (payload instanceof Uint8Array) {\n            data = payload;\n        } else if (typeof payload === \"string\") {\n            data = TE.encode(payload);\n        } else {\n            throw NatsError.errorForCode(ErrorCode.BadPayload);\n        }\n        let len = data.length;\n        options = options || {};\n        options.reply = options.reply || \"\";\n        let headers = Empty;\n        let hlen = 0;\n        if (options.headers) {\n            if (this.info && !this.info.headers) {\n                throw new NatsError(\"headers\", ErrorCode.ServerOptionNotAvailable);\n            }\n            const hdrs = options.headers;\n            headers = hdrs.encode();\n            hlen = headers.length;\n            len = data.length + hlen;\n        }\n        if (this.info && len > this.info.max_payload) {\n            throw NatsError.errorForCode(ErrorCode.MaxPayloadExceeded);\n        }\n        this.outBytes += len;\n        this.outMsgs++;\n        let proto;\n        if (options.headers) {\n            if (options.reply) {\n                proto = `HPUB ${subject} ${options.reply} ${hlen} ${len}\\r\\n`;\n            } else {\n                proto = `HPUB ${subject} ${hlen} ${len}\\r\\n`;\n            }\n            this.sendCommand(proto, headers, data, CRLF);\n        } else {\n            if (options.reply) {\n                proto = `PUB ${subject} ${options.reply} ${len}\\r\\n`;\n            } else {\n                proto = `PUB ${subject} ${len}\\r\\n`;\n            }\n            this.sendCommand(proto, data, CRLF);\n        }\n    }\n    request(r) {\n        this.initMux();\n        this.muxSubscriptions.add(r);\n        return r;\n    }\n    subscribe(s) {\n        this.subscriptions.add(s);\n        this._subunsub(s);\n        return s;\n    }\n    _sub(s) {\n        if (s.queue) {\n            this.sendCommand(`SUB ${s.subject} ${s.queue} ${s.sid}\\r\\n`);\n        } else {\n            this.sendCommand(`SUB ${s.subject} ${s.sid}\\r\\n`);\n        }\n    }\n    _subunsub(s) {\n        this._sub(s);\n        if (s.max) {\n            this.unsubscribe(s, s.max);\n        }\n        return s;\n    }\n    unsubscribe(s, max) {\n        this.unsub(s, max);\n        if (s.max === undefined || s.received >= s.max) {\n            this.subscriptions.cancel(s);\n        }\n    }\n    unsub(s, max) {\n        if (!s || this.isClosed()) {\n            return;\n        }\n        if (max) {\n            this.sendCommand(`UNSUB ${s.sid} ${max}\\r\\n`);\n        } else {\n            this.sendCommand(`UNSUB ${s.sid}\\r\\n`);\n        }\n        s.max = max;\n    }\n    resub(s, subject) {\n        if (!s || this.isClosed()) {\n            return;\n        }\n        s.subject = subject;\n        this.subscriptions.resub(s);\n        this._sub(s);\n    }\n    flush(p) {\n        if (!p) {\n            p = deferred();\n        }\n        this.pongs.push(p);\n        this.outbound.fill(PING_CMD);\n        this.flushPending();\n        return p;\n    }\n    sendSubscriptions() {\n        const cmds = [];\n        this.subscriptions.all().forEach((s)=>{\n            const sub = s;\n            if (sub.queue) {\n                cmds.push(`SUB ${sub.subject} ${sub.queue} ${sub.sid}${CR_LF}`);\n            } else {\n                cmds.push(`SUB ${sub.subject} ${sub.sid}${CR_LF}`);\n            }\n        });\n        if (cmds.length) {\n            this.transport.send(encode(cmds.join(\"\")));\n        }\n    }\n    async _close(err) {\n        if (this._closed) {\n            return;\n        }\n        this.heartbeats.cancel();\n        if (this.connectError) {\n            this.connectError(err);\n            this.connectError = undefined;\n        }\n        this.muxSubscriptions.close();\n        this.subscriptions.close();\n        this.listeners.forEach((l)=>{\n            l.stop();\n        });\n        this._closed = true;\n        await this.transport.close(err);\n        await this.closed.resolve(err);\n    }\n    close() {\n        return this._close();\n    }\n    isClosed() {\n        return this._closed;\n    }\n    drain() {\n        const subs = this.subscriptions.all();\n        const promises = [];\n        subs.forEach((sub)=>{\n            promises.push(sub.drain());\n        });\n        return Promise.all(promises).then(async ()=>{\n            this.noMorePublishing = true;\n            await this.flush();\n            return this.close();\n        }).catch(()=>{});\n    }\n    flushPending() {\n        if (!this.infoReceived || !this.connected) {\n            return;\n        }\n        if (this.outbound.size()) {\n            const d = this.outbound.drain();\n            this.transport.send(d);\n        }\n    }\n    initMux() {\n        const mux = this.subscriptions.getMux();\n        if (!mux) {\n            const inbox = this.muxSubscriptions.init(this.options.inboxPrefix);\n            const sub = new SubscriptionImpl(this, `${inbox}*`);\n            sub.callback = this.muxSubscriptions.dispatcher();\n            this.subscriptions.setMux(sub);\n            this.subscribe(sub);\n        }\n    }\n    selectServer() {\n        const server = this.servers.selectServer();\n        if (server === undefined) {\n            return undefined;\n        }\n        this.server = server;\n        return this.server;\n    }\n    getServer() {\n        return this.server;\n    }\n}\nclass BaseRequest {\n    token;\n    received;\n    ctx;\n    requestSubject;\n    mux;\n    constructor(mux, requestSubject, asyncTraces = true){\n        this.mux = mux;\n        this.requestSubject = requestSubject;\n        this.received = 0;\n        this.token = nuid.next();\n        if (asyncTraces) {\n            this.ctx = new Error();\n        }\n    }\n}\nclass RequestMany extends BaseRequest {\n    callback;\n    done;\n    timer;\n    max;\n    opts;\n    constructor(mux, requestSubject, opts = {\n        maxWait: 1000\n    }){\n        super(mux, requestSubject);\n        this.opts = opts;\n        if (typeof this.opts.callback !== \"function\") {\n            throw new Error(\"callback is required\");\n        }\n        this.callback = this.opts.callback;\n        this.max = typeof opts.maxMessages === \"number\" && opts.maxMessages > 0 ? opts.maxMessages : -1;\n        this.done = deferred();\n        this.done.then(()=>{\n            this.callback(null, null);\n        });\n        this.timer = setTimeout(()=>{\n            this.cancel();\n        }, opts.maxWait);\n    }\n    cancel(err) {\n        if (err) {\n            this.callback(err, null);\n        }\n        clearTimeout(this.timer);\n        this.mux.cancel(this);\n        this.done.resolve();\n    }\n    resolver(err, msg) {\n        if (err) {\n            if (this.ctx) {\n                err.stack += `\\n\\n${this.ctx.stack}`;\n            }\n            this.cancel(err);\n        } else {\n            this.callback(null, msg);\n            if (this.opts.strategy === RequestStrategy.Count) {\n                this.max--;\n                if (this.max === 0) {\n                    this.cancel();\n                }\n            }\n            if (this.opts.strategy === RequestStrategy.JitterTimer) {\n                clearTimeout(this.timer);\n                this.timer = setTimeout(()=>{\n                    this.cancel();\n                }, this.opts.jitter || 300);\n            }\n            if (this.opts.strategy === RequestStrategy.SentinelMsg) {\n                if (msg && msg.data.length === 0) {\n                    this.cancel();\n                }\n            }\n        }\n    }\n}\nclass RequestOne extends BaseRequest {\n    deferred;\n    timer;\n    constructor(mux, requestSubject, opts = {\n        timeout: 1000\n    }, asyncTraces = true){\n        super(mux, requestSubject, asyncTraces);\n        this.deferred = deferred();\n        this.timer = timeout(opts.timeout, asyncTraces);\n    }\n    resolver(err, msg) {\n        if (this.timer) {\n            this.timer.cancel();\n        }\n        if (err) {\n            if (this.ctx) {\n                err.stack += `\\n\\n${this.ctx.stack}`;\n            }\n            this.deferred.reject(err);\n        } else {\n            this.deferred.resolve(msg);\n        }\n        this.cancel();\n    }\n    cancel(err) {\n        if (this.timer) {\n            this.timer.cancel();\n        }\n        this.mux.cancel(this);\n        this.deferred.reject(err ? err : NatsError.errorForCode(ErrorCode.Cancelled));\n    }\n}\nfunction validateDurableName(name) {\n    return minValidation(\"durable\", name);\n}\nfunction validateStreamName(name) {\n    return minValidation(\"stream\", name);\n}\nfunction minValidation(context, name = \"\") {\n    if (name === \"\") {\n        throw Error(`${context} name required`);\n    }\n    const bad = [\n        \".\",\n        \"*\",\n        \">\",\n        \"/\",\n        \"\\\\\",\n        \" \",\n        \"\\t\",\n        \"\\n\",\n        \"\\r\"\n    ];\n    bad.forEach((v)=>{\n        if (name.indexOf(v) !== -1) {\n            switch(v){\n                case \"\\n\":\n                    v = \"\\\\n\";\n                    break;\n                case \"\\r\":\n                    v = \"\\\\r\";\n                    break;\n                case \"\\t\":\n                    v = \"\\\\t\";\n                    break;\n                default:\n            }\n            throw Error(`invalid ${context} name - ${context} name cannot contain '${v}'`);\n        }\n    });\n    return \"\";\n}\nfunction validateName(context, name = \"\") {\n    if (name === \"\") {\n        throw Error(`${context} name required`);\n    }\n    const m = validName(name);\n    if (m.length) {\n        throw new Error(`invalid ${context} name - ${context} name ${m}`);\n    }\n}\nfunction validName(name = \"\") {\n    if (name === \"\") {\n        throw Error(`name required`);\n    }\n    const RE = /^[-\\w]+$/g;\n    const m = name.match(RE);\n    if (m === null) {\n        for (const c of name.split(\"\")){\n            const mm = c.match(RE);\n            if (mm === null) {\n                return `cannot contain '${c}'`;\n            }\n        }\n    }\n    return \"\";\n}\nfunction nanos(millis) {\n    return millis * 1000000;\n}\nfunction millis(ns) {\n    return Math.floor(ns / 1000000);\n}\nfunction isFlowControlMsg(msg) {\n    if (msg.data.length > 0) {\n        return false;\n    }\n    const h = msg.headers;\n    if (!h) {\n        return false;\n    }\n    return h.code >= 100 && h.code < 200;\n}\nfunction isHeartbeatMsg(msg) {\n    return isFlowControlMsg(msg) && msg.headers?.description === \"Idle Heartbeat\";\n}\nfunction newJsErrorMsg(code, description, subject) {\n    const h = headers(code, description);\n    const arg = {\n        hdr: 1,\n        sid: 0,\n        size: 0\n    };\n    const msg = new MsgImpl(arg, Empty, {});\n    msg._headers = h;\n    msg._subject = subject;\n    return msg;\n}\nfunction checkJsError(msg) {\n    if (msg.data.length !== 0) {\n        return null;\n    }\n    const h = msg.headers;\n    if (!h) {\n        return null;\n    }\n    return checkJsErrorCode(h.code, h.description);\n}\nvar Js409Errors;\n(function(Js409Errors) {\n    Js409Errors[\"MaxBatchExceeded\"] = \"exceeded maxrequestbatch of\";\n    Js409Errors[\"MaxExpiresExceeded\"] = \"exceeded maxrequestexpires of\";\n    Js409Errors[\"MaxBytesExceeded\"] = \"exceeded maxrequestmaxbytes of\";\n    Js409Errors[\"MaxMessageSizeExceeded\"] = \"message size exceeds maxbytes\";\n    Js409Errors[\"PushConsumer\"] = \"consumer is push based\";\n    Js409Errors[\"MaxWaitingExceeded\"] = \"exceeded maxwaiting\";\n    Js409Errors[\"IdleHeartbeatMissed\"] = \"idle heartbeats missed\";\n    Js409Errors[\"ConsumerDeleted\"] = \"consumer deleted\";\n})(Js409Errors || (Js409Errors = {}));\nlet MAX_WAITING_FAIL = false;\nfunction isTerminal409(err) {\n    if (err.code !== ErrorCode.JetStream409) {\n        return false;\n    }\n    const fatal = [\n        Js409Errors.MaxBatchExceeded,\n        Js409Errors.MaxExpiresExceeded,\n        Js409Errors.MaxBytesExceeded,\n        Js409Errors.MaxMessageSizeExceeded,\n        Js409Errors.PushConsumer,\n        Js409Errors.IdleHeartbeatMissed,\n        Js409Errors.ConsumerDeleted\n    ];\n    if (MAX_WAITING_FAIL) {\n        fatal.push(Js409Errors.MaxWaitingExceeded);\n    }\n    return fatal.find((s)=>{\n        return err.message.indexOf(s) !== -1;\n    }) !== undefined;\n}\nfunction checkJsErrorCode(code, description = \"\") {\n    if (code < 300) {\n        return null;\n    }\n    description = description.toLowerCase();\n    switch(code){\n        case 404:\n            return new NatsError(description, ErrorCode.JetStream404NoMessages);\n        case 408:\n            return new NatsError(description, ErrorCode.JetStream408RequestTimeout);\n        case 409:\n            {\n                const ec = description.startsWith(Js409Errors.IdleHeartbeatMissed) ? ErrorCode.JetStreamIdleHeartBeat : ErrorCode.JetStream409;\n                return new NatsError(description, ec);\n            }\n        case 503:\n            return NatsError.errorForCode(ErrorCode.JetStreamNotEnabled, new Error(description));\n        default:\n            if (description === \"\") {\n                description = ErrorCode.Unknown;\n            }\n            return new NatsError(description, `${code}`);\n    }\n}\nconst defaultPrefix = \"$JS.API\";\nfunction defaultJsOptions(opts) {\n    opts = opts || {};\n    if (opts.domain) {\n        opts.apiPrefix = `$JS.${opts.domain}.API`;\n        delete opts.domain;\n    }\n    return extend({\n        apiPrefix: defaultPrefix,\n        timeout: 5000\n    }, opts);\n}\nclass BaseApiClient {\n    nc;\n    opts;\n    prefix;\n    timeout;\n    jc;\n    constructor(nc, opts){\n        this.nc = nc;\n        this.opts = defaultJsOptions(opts);\n        this._parseOpts();\n        this.prefix = this.opts.apiPrefix;\n        this.timeout = this.opts.timeout;\n        this.jc = JSONCodec();\n    }\n    getOptions() {\n        return Object.assign({}, this.opts);\n    }\n    _parseOpts() {\n        let prefix = this.opts.apiPrefix;\n        if (!prefix || prefix.length === 0) {\n            throw new Error(\"invalid empty prefix\");\n        }\n        const c = prefix[prefix.length - 1];\n        if (c === \".\") {\n            prefix = prefix.substr(0, prefix.length - 1);\n        }\n        this.opts.apiPrefix = prefix;\n    }\n    async _request(subj, data = null, opts) {\n        opts = opts || {};\n        opts.timeout = this.timeout;\n        let a = Empty;\n        if (data) {\n            a = this.jc.encode(data);\n        }\n        const m = await this.nc.request(subj, a, opts);\n        return this.parseJsResponse(m);\n    }\n    async findStream(subject) {\n        const q = {\n            subject\n        };\n        const r = await this._request(`${this.prefix}.STREAM.NAMES`, q);\n        const names = r;\n        if (!names.streams || names.streams.length !== 1) {\n            throw new Error(\"no stream matches subject\");\n        }\n        return names.streams[0];\n    }\n    getConnection() {\n        return this.nc;\n    }\n    parseJsResponse(m) {\n        const v = this.jc.decode(m.data);\n        const r = v;\n        if (r.error) {\n            const err = checkJsErrorCode(r.error.code, r.error.description);\n            if (err !== null) {\n                err.api_error = r.error;\n                throw err;\n            }\n        }\n        return v;\n    }\n}\nclass Base64Codec {\n    static encode(bytes) {\n        if (typeof bytes === \"string\") {\n            return btoa(bytes);\n        }\n        const a = Array.from(bytes);\n        return btoa(String.fromCharCode(...a));\n    }\n    static decode(s, binary = false) {\n        const bin = atob(s);\n        if (!binary) {\n            return bin;\n        }\n        return Uint8Array.from(bin, (c)=>c.charCodeAt(0));\n    }\n}\nclass Base64UrlPaddedCodec {\n    static encode(bytes) {\n        return Base64UrlPaddedCodec.toB64URLEncoding(Base64Codec.encode(bytes));\n    }\n    static decode(s, binary = false) {\n        return Base64UrlPaddedCodec.decode(Base64UrlPaddedCodec.fromB64URLEncoding(s), binary);\n    }\n    static toB64URLEncoding(b64str) {\n        return b64str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n    }\n    static fromB64URLEncoding(b64str) {\n        return b64str.replace(/_/g, \"/\").replace(/-/g, \"+\");\n    }\n}\nvar RetentionPolicy;\n(function(RetentionPolicy) {\n    RetentionPolicy[\"Limits\"] = \"limits\";\n    RetentionPolicy[\"Interest\"] = \"interest\";\n    RetentionPolicy[\"Workqueue\"] = \"workqueue\";\n})(RetentionPolicy || (RetentionPolicy = {}));\nvar DiscardPolicy;\n(function(DiscardPolicy) {\n    DiscardPolicy[\"Old\"] = \"old\";\n    DiscardPolicy[\"New\"] = \"new\";\n})(DiscardPolicy || (DiscardPolicy = {}));\nvar StorageType;\n(function(StorageType) {\n    StorageType[\"File\"] = \"file\";\n    StorageType[\"Memory\"] = \"memory\";\n})(StorageType || (StorageType = {}));\nvar DeliverPolicy;\n(function(DeliverPolicy) {\n    DeliverPolicy[\"All\"] = \"all\";\n    DeliverPolicy[\"Last\"] = \"last\";\n    DeliverPolicy[\"New\"] = \"new\";\n    DeliverPolicy[\"StartSequence\"] = \"by_start_sequence\";\n    DeliverPolicy[\"StartTime\"] = \"by_start_time\";\n    DeliverPolicy[\"LastPerSubject\"] = \"last_per_subject\";\n})(DeliverPolicy || (DeliverPolicy = {}));\nvar AckPolicy;\n(function(AckPolicy) {\n    AckPolicy[\"None\"] = \"none\";\n    AckPolicy[\"All\"] = \"all\";\n    AckPolicy[\"Explicit\"] = \"explicit\";\n    AckPolicy[\"NotSet\"] = \"\";\n})(AckPolicy || (AckPolicy = {}));\nvar ReplayPolicy;\n(function(ReplayPolicy) {\n    ReplayPolicy[\"Instant\"] = \"instant\";\n    ReplayPolicy[\"Original\"] = \"original\";\n})(ReplayPolicy || (ReplayPolicy = {}));\nvar StoreCompression;\n(function(StoreCompression) {\n    StoreCompression[\"None\"] = \"none\";\n    StoreCompression[\"S2\"] = \"s2\";\n})(StoreCompression || (StoreCompression = {}));\nvar ConsumerApiAction;\n(function(ConsumerApiAction) {\n    ConsumerApiAction[\"CreateOrUpdate\"] = \"\";\n    ConsumerApiAction[\"Update\"] = \"update\";\n    ConsumerApiAction[\"Create\"] = \"create\";\n})(ConsumerApiAction || (ConsumerApiAction = {}));\nfunction defaultConsumer(name, opts = {}) {\n    return Object.assign({\n        name: name,\n        deliver_policy: DeliverPolicy.All,\n        ack_policy: AckPolicy.Explicit,\n        ack_wait: nanos(30 * 1000),\n        replay_policy: ReplayPolicy.Instant\n    }, opts);\n}\nvar AdvisoryKind;\n(function(AdvisoryKind) {\n    AdvisoryKind[\"API\"] = \"api_audit\";\n    AdvisoryKind[\"StreamAction\"] = \"stream_action\";\n    AdvisoryKind[\"ConsumerAction\"] = \"consumer_action\";\n    AdvisoryKind[\"SnapshotCreate\"] = \"snapshot_create\";\n    AdvisoryKind[\"SnapshotComplete\"] = \"snapshot_complete\";\n    AdvisoryKind[\"RestoreCreate\"] = \"restore_create\";\n    AdvisoryKind[\"RestoreComplete\"] = \"restore_complete\";\n    AdvisoryKind[\"MaxDeliver\"] = \"max_deliver\";\n    AdvisoryKind[\"Terminated\"] = \"terminated\";\n    AdvisoryKind[\"Ack\"] = \"consumer_ack\";\n    AdvisoryKind[\"StreamLeaderElected\"] = \"stream_leader_elected\";\n    AdvisoryKind[\"StreamQuorumLost\"] = \"stream_quorum_lost\";\n    AdvisoryKind[\"ConsumerLeaderElected\"] = \"consumer_leader_elected\";\n    AdvisoryKind[\"ConsumerQuorumLost\"] = \"consumer_quorum_lost\";\n})(AdvisoryKind || (AdvisoryKind = {}));\nvar JsHeaders;\n(function(JsHeaders) {\n    JsHeaders[\"StreamSourceHdr\"] = \"Nats-Stream-Source\";\n    JsHeaders[\"LastConsumerSeqHdr\"] = \"Nats-Last-Consumer\";\n    JsHeaders[\"LastStreamSeqHdr\"] = \"Nats-Last-Stream\";\n    JsHeaders[\"ConsumerStalledHdr\"] = \"Nats-Consumer-Stalled\";\n    JsHeaders[\"MessageSizeHdr\"] = \"Nats-Msg-Size\";\n    JsHeaders[\"RollupHdr\"] = \"Nats-Rollup\";\n    JsHeaders[\"RollupValueSubject\"] = \"sub\";\n    JsHeaders[\"RollupValueAll\"] = \"all\";\n    JsHeaders[\"PendingMessagesHdr\"] = \"Nats-Pending-Messages\";\n    JsHeaders[\"PendingBytesHdr\"] = \"Nats-Pending-Bytes\";\n})(JsHeaders || (JsHeaders = {}));\nvar KvWatchInclude;\n(function(KvWatchInclude) {\n    KvWatchInclude[\"LastValue\"] = \"\";\n    KvWatchInclude[\"AllHistory\"] = \"history\";\n    KvWatchInclude[\"UpdatesOnly\"] = \"updates\";\n})(KvWatchInclude || (KvWatchInclude = {}));\nvar DirectMsgHeaders;\n(function(DirectMsgHeaders) {\n    DirectMsgHeaders[\"Stream\"] = \"Nats-Stream\";\n    DirectMsgHeaders[\"Sequence\"] = \"Nats-Sequence\";\n    DirectMsgHeaders[\"TimeStamp\"] = \"Nats-Time-Stamp\";\n    DirectMsgHeaders[\"Subject\"] = \"Nats-Subject\";\n})(DirectMsgHeaders || (DirectMsgHeaders = {}));\nvar RepublishHeaders;\n(function(RepublishHeaders) {\n    RepublishHeaders[\"Stream\"] = \"Nats-Stream\";\n    RepublishHeaders[\"Subject\"] = \"Nats-Subject\";\n    RepublishHeaders[\"Sequence\"] = \"Nats-Sequence\";\n    RepublishHeaders[\"LastSequence\"] = \"Nats-Last-Sequence\";\n    RepublishHeaders[\"Size\"] = \"Nats-Msg-Size\";\n})(RepublishHeaders || (RepublishHeaders = {}));\nconst kvPrefix = \"KV_\";\nclass ConsumerOptsBuilderImpl {\n    config;\n    ordered;\n    mack;\n    stream;\n    callbackFn;\n    max;\n    qname;\n    isBind;\n    filters;\n    constructor(opts){\n        this.stream = \"\";\n        this.mack = false;\n        this.ordered = false;\n        this.config = defaultConsumer(\"\", opts || {});\n    }\n    getOpts() {\n        const o = {};\n        o.config = Object.assign({}, this.config);\n        if (o.config.filter_subject) {\n            this.filterSubject(o.config.filter_subject);\n            o.config.filter_subject = undefined;\n        }\n        if (o.config.filter_subjects) {\n            o.config.filter_subjects?.forEach((v)=>{\n                this.filterSubject(v);\n            });\n            o.config.filter_subjects = undefined;\n        }\n        o.mack = this.mack;\n        o.stream = this.stream;\n        o.callbackFn = this.callbackFn;\n        o.max = this.max;\n        o.queue = this.qname;\n        o.ordered = this.ordered;\n        o.config.ack_policy = o.ordered ? AckPolicy.None : o.config.ack_policy;\n        o.isBind = o.isBind || false;\n        if (this.filters) {\n            switch(this.filters.length){\n                case 0:\n                    break;\n                case 1:\n                    o.config.filter_subject = this.filters[0];\n                    break;\n                default:\n                    o.config.filter_subjects = this.filters;\n            }\n        }\n        return o;\n    }\n    description(description) {\n        this.config.description = description;\n        return this;\n    }\n    deliverTo(subject) {\n        this.config.deliver_subject = subject;\n        return this;\n    }\n    durable(name) {\n        validateDurableName(name);\n        this.config.durable_name = name;\n        return this;\n    }\n    startSequence(seq) {\n        if (seq <= 0) {\n            throw new Error(\"sequence must be greater than 0\");\n        }\n        this.config.deliver_policy = DeliverPolicy.StartSequence;\n        this.config.opt_start_seq = seq;\n        return this;\n    }\n    startTime(time) {\n        this.config.deliver_policy = DeliverPolicy.StartTime;\n        this.config.opt_start_time = time.toISOString();\n        return this;\n    }\n    deliverAll() {\n        this.config.deliver_policy = DeliverPolicy.All;\n        return this;\n    }\n    deliverLastPerSubject() {\n        this.config.deliver_policy = DeliverPolicy.LastPerSubject;\n        return this;\n    }\n    deliverLast() {\n        this.config.deliver_policy = DeliverPolicy.Last;\n        return this;\n    }\n    deliverNew() {\n        this.config.deliver_policy = DeliverPolicy.New;\n        return this;\n    }\n    startAtTimeDelta(millis) {\n        this.startTime(new Date(Date.now() - millis));\n        return this;\n    }\n    headersOnly() {\n        this.config.headers_only = true;\n        return this;\n    }\n    ackNone() {\n        this.config.ack_policy = AckPolicy.None;\n        return this;\n    }\n    ackAll() {\n        this.config.ack_policy = AckPolicy.All;\n        return this;\n    }\n    ackExplicit() {\n        this.config.ack_policy = AckPolicy.Explicit;\n        return this;\n    }\n    ackWait(millis) {\n        this.config.ack_wait = nanos(millis);\n        return this;\n    }\n    maxDeliver(max) {\n        this.config.max_deliver = max;\n        return this;\n    }\n    filterSubject(s) {\n        this.filters = this.filters || [];\n        this.filters.push(s);\n        return this;\n    }\n    replayInstantly() {\n        this.config.replay_policy = ReplayPolicy.Instant;\n        return this;\n    }\n    replayOriginal() {\n        this.config.replay_policy = ReplayPolicy.Original;\n        return this;\n    }\n    sample(n) {\n        n = Math.trunc(n);\n        if (n < 0 || n > 100) {\n            throw new Error(`value must be between 0-100`);\n        }\n        this.config.sample_freq = `${n}%`;\n        return this;\n    }\n    limit(n) {\n        this.config.rate_limit_bps = n;\n        return this;\n    }\n    maxWaiting(max) {\n        this.config.max_waiting = max;\n        return this;\n    }\n    maxAckPending(max) {\n        this.config.max_ack_pending = max;\n        return this;\n    }\n    idleHeartbeat(millis) {\n        this.config.idle_heartbeat = nanos(millis);\n        return this;\n    }\n    flowControl() {\n        this.config.flow_control = true;\n        return this;\n    }\n    deliverGroup(name) {\n        this.queue(name);\n        return this;\n    }\n    manualAck() {\n        this.mack = true;\n        return this;\n    }\n    maxMessages(max) {\n        this.max = max;\n        return this;\n    }\n    callback(fn) {\n        this.callbackFn = fn;\n        return this;\n    }\n    queue(n) {\n        this.qname = n;\n        this.config.deliver_group = n;\n        return this;\n    }\n    orderedConsumer() {\n        this.ordered = true;\n        return this;\n    }\n    bind(stream, durable) {\n        this.stream = stream;\n        this.config.durable_name = durable;\n        this.isBind = true;\n        return this;\n    }\n    bindStream(stream) {\n        this.stream = stream;\n        return this;\n    }\n    inactiveEphemeralThreshold(millis) {\n        this.config.inactive_threshold = nanos(millis);\n        return this;\n    }\n    maxPullBatch(n) {\n        this.config.max_batch = n;\n        return this;\n    }\n    maxPullRequestExpires(millis) {\n        this.config.max_expires = nanos(millis);\n        return this;\n    }\n    memory() {\n        this.config.mem_storage = true;\n        return this;\n    }\n    numReplicas(n) {\n        this.config.num_replicas = n;\n        return this;\n    }\n}\nfunction consumerOpts(opts) {\n    return new ConsumerOptsBuilderImpl(opts);\n}\nfunction isConsumerOptsBuilder(o) {\n    return typeof o.getOpts === \"function\";\n}\nfunction getLengths(b64) {\n    const len = b64.length;\n    let validLen = b64.indexOf(\"=\");\n    if (validLen === -1) {\n        validLen = len;\n    }\n    const placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n    return [\n        validLen,\n        placeHoldersLen\n    ];\n}\nfunction init(lookup, revLookup, urlsafe = false) {\n    function _byteLength(validLen, placeHoldersLen) {\n        return Math.floor((validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen);\n    }\n    function tripletToBase64(num) {\n        return lookup[num >> 18 & 0x3f] + lookup[num >> 12 & 0x3f] + lookup[num >> 6 & 0x3f] + lookup[num & 0x3f];\n    }\n    function encodeChunk(buf, start, end) {\n        const out = new Array((end - start) / 3);\n        for(let i = start, curTriplet = 0; i < end; i += 3){\n            out[curTriplet++] = tripletToBase64((buf[i] << 16) + (buf[i + 1] << 8) + buf[i + 2]);\n        }\n        return out.join(\"\");\n    }\n    return {\n        byteLength (b64) {\n            return _byteLength.apply(null, getLengths(b64));\n        },\n        toUint8Array (b64) {\n            const [validLen, placeHoldersLen] = getLengths(b64);\n            const buf = new Uint8Array(_byteLength(validLen, placeHoldersLen));\n            const len = placeHoldersLen ? validLen - 4 : validLen;\n            let tmp;\n            let curByte = 0;\n            let i;\n            for(i = 0; i < len; i += 4){\n                tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n                buf[curByte++] = tmp >> 16 & 0xff;\n                buf[curByte++] = tmp >> 8 & 0xff;\n                buf[curByte++] = tmp & 0xff;\n            }\n            if (placeHoldersLen === 2) {\n                tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n                buf[curByte++] = tmp & 0xff;\n            } else if (placeHoldersLen === 1) {\n                tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n                buf[curByte++] = tmp >> 8 & 0xff;\n                buf[curByte++] = tmp & 0xff;\n            }\n            return buf;\n        },\n        fromUint8Array (buf) {\n            const maxChunkLength = 16383;\n            const len = buf.length;\n            const extraBytes = len % 3;\n            const len2 = len - extraBytes;\n            const parts = new Array(Math.ceil(len2 / 16383) + (extraBytes ? 1 : 0));\n            let curChunk = 0;\n            let chunkEnd;\n            for(let i = 0; i < len2; i += maxChunkLength){\n                chunkEnd = i + maxChunkLength;\n                parts[curChunk++] = encodeChunk(buf, i, chunkEnd > len2 ? len2 : chunkEnd);\n            }\n            let tmp;\n            if (extraBytes === 1) {\n                tmp = buf[len2];\n                parts[curChunk] = lookup[tmp >> 2] + lookup[tmp << 4 & 0x3f];\n                if (!urlsafe) parts[curChunk] += \"==\";\n            } else if (extraBytes === 2) {\n                tmp = buf[len2] << 8 | buf[len2 + 1] & 0xff;\n                parts[curChunk] = lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3f] + lookup[tmp << 2 & 0x3f];\n                if (!urlsafe) parts[curChunk] += \"=\";\n            }\n            return parts.join(\"\");\n        }\n    };\n}\nconst lookup = [];\nconst revLookup = [];\nconst code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\";\nfor(let i = 0, l = code.length; i < l; ++i){\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n}\nconst { byteLength, toUint8Array, fromUint8Array } = init(lookup, revLookup, true);\nconst decoder = new TextDecoder();\nconst encoder = new TextEncoder();\nfunction toHexString(buf) {\n    return buf.reduce((hex, __byte)=>`${hex}${__byte < 16 ? \"0\" : \"\"}${__byte.toString(16)}`, \"\");\n}\nfunction fromHexString(hex) {\n    const len = hex.length;\n    if (len % 2 || !/^[0-9a-fA-F]+$/.test(hex)) {\n        throw new TypeError(\"Invalid hex string.\");\n    }\n    hex = hex.toLowerCase();\n    const buf = new Uint8Array(Math.floor(len / 2));\n    const end = len / 2;\n    for(let i = 0; i < end; ++i){\n        buf[i] = parseInt(hex.substr(i * 2, 2), 16);\n    }\n    return buf;\n}\nfunction decode2(buf, encoding = \"utf8\") {\n    if (/^utf-?8$/i.test(encoding)) {\n        return decoder.decode(buf);\n    } else if (/^base64$/i.test(encoding)) {\n        return fromUint8Array(buf);\n    } else if (/^hex(?:adecimal)?$/i.test(encoding)) {\n        return toHexString(buf);\n    } else {\n        throw new TypeError(\"Unsupported string encoding.\");\n    }\n}\nfunction encode2(str, encoding = \"utf8\") {\n    if (/^utf-?8$/i.test(encoding)) {\n        return encoder.encode(str);\n    } else if (/^base64$/i.test(encoding)) {\n        return toUint8Array(str);\n    } else if (/^hex(?:adecimal)?$/i.test(encoding)) {\n        return fromHexString(str);\n    } else {\n        throw new TypeError(\"Unsupported string encoding.\");\n    }\n}\nclass SHA256 {\n    hashSize = 32;\n    _buf;\n    _bufIdx;\n    _count;\n    _K;\n    _H;\n    _finalized;\n    constructor(){\n        this._buf = new Uint8Array(64);\n        this._K = new Uint32Array([\n            0x428a2f98,\n            0x71374491,\n            0xb5c0fbcf,\n            0xe9b5dba5,\n            0x3956c25b,\n            0x59f111f1,\n            0x923f82a4,\n            0xab1c5ed5,\n            0xd807aa98,\n            0x12835b01,\n            0x243185be,\n            0x550c7dc3,\n            0x72be5d74,\n            0x80deb1fe,\n            0x9bdc06a7,\n            0xc19bf174,\n            0xe49b69c1,\n            0xefbe4786,\n            0x0fc19dc6,\n            0x240ca1cc,\n            0x2de92c6f,\n            0x4a7484aa,\n            0x5cb0a9dc,\n            0x76f988da,\n            0x983e5152,\n            0xa831c66d,\n            0xb00327c8,\n            0xbf597fc7,\n            0xc6e00bf3,\n            0xd5a79147,\n            0x06ca6351,\n            0x14292967,\n            0x27b70a85,\n            0x2e1b2138,\n            0x4d2c6dfc,\n            0x53380d13,\n            0x650a7354,\n            0x766a0abb,\n            0x81c2c92e,\n            0x92722c85,\n            0xa2bfe8a1,\n            0xa81a664b,\n            0xc24b8b70,\n            0xc76c51a3,\n            0xd192e819,\n            0xd6990624,\n            0xf40e3585,\n            0x106aa070,\n            0x19a4c116,\n            0x1e376c08,\n            0x2748774c,\n            0x34b0bcb5,\n            0x391c0cb3,\n            0x4ed8aa4a,\n            0x5b9cca4f,\n            0x682e6ff3,\n            0x748f82ee,\n            0x78a5636f,\n            0x84c87814,\n            0x8cc70208,\n            0x90befffa,\n            0xa4506ceb,\n            0xbef9a3f7,\n            0xc67178f2\n        ]);\n        this.init();\n    }\n    init() {\n        this._H = new Uint32Array([\n            0x6a09e667,\n            0xbb67ae85,\n            0x3c6ef372,\n            0xa54ff53a,\n            0x510e527f,\n            0x9b05688c,\n            0x1f83d9ab,\n            0x5be0cd19\n        ]);\n        this._bufIdx = 0;\n        this._count = new Uint32Array(2);\n        this._buf.fill(0);\n        this._finalized = false;\n        return this;\n    }\n    update(msg, inputEncoding) {\n        if (msg === null) {\n            throw new TypeError(\"msg must be a string or Uint8Array.\");\n        } else if (typeof msg === \"string\") {\n            msg = encode2(msg, inputEncoding);\n        }\n        for(let i = 0, len = msg.length; i < len; i++){\n            this._buf[this._bufIdx++] = msg[i];\n            if (this._bufIdx === 64) {\n                this._transform();\n                this._bufIdx = 0;\n            }\n        }\n        const c = this._count;\n        if ((c[0] += msg.length << 3) < msg.length << 3) {\n            c[1]++;\n        }\n        c[1] += msg.length >>> 29;\n        return this;\n    }\n    digest(outputEncoding) {\n        if (this._finalized) {\n            throw new Error(\"digest has already been called.\");\n        }\n        this._finalized = true;\n        const b = this._buf;\n        let idx = this._bufIdx;\n        b[idx++] = 0x80;\n        while(idx !== 56){\n            if (idx === 64) {\n                this._transform();\n                idx = 0;\n            }\n            b[idx++] = 0;\n        }\n        const c = this._count;\n        b[56] = c[1] >>> 24 & 0xff;\n        b[57] = c[1] >>> 16 & 0xff;\n        b[58] = c[1] >>> 8 & 0xff;\n        b[59] = c[1] >>> 0 & 0xff;\n        b[60] = c[0] >>> 24 & 0xff;\n        b[61] = c[0] >>> 16 & 0xff;\n        b[62] = c[0] >>> 8 & 0xff;\n        b[63] = c[0] >>> 0 & 0xff;\n        this._transform();\n        const hash = new Uint8Array(32);\n        for(let i = 0; i < 8; i++){\n            hash[(i << 2) + 0] = this._H[i] >>> 24 & 0xff;\n            hash[(i << 2) + 1] = this._H[i] >>> 16 & 0xff;\n            hash[(i << 2) + 2] = this._H[i] >>> 8 & 0xff;\n            hash[(i << 2) + 3] = this._H[i] >>> 0 & 0xff;\n        }\n        this.init();\n        return outputEncoding ? decode2(hash, outputEncoding) : hash;\n    }\n    _transform() {\n        const h = this._H;\n        let h0 = h[0];\n        let h1 = h[1];\n        let h2 = h[2];\n        let h3 = h[3];\n        let h4 = h[4];\n        let h5 = h[5];\n        let h6 = h[6];\n        let h7 = h[7];\n        const w = new Uint32Array(16);\n        let i;\n        for(i = 0; i < 16; i++){\n            w[i] = this._buf[(i << 2) + 3] | this._buf[(i << 2) + 2] << 8 | this._buf[(i << 2) + 1] << 16 | this._buf[i << 2] << 24;\n        }\n        for(i = 0; i < 64; i++){\n            let tmp;\n            if (i < 16) {\n                tmp = w[i];\n            } else {\n                let a = w[i + 1 & 15];\n                let b = w[i + 14 & 15];\n                tmp = w[i & 15] = (a >>> 7 ^ a >>> 18 ^ a >>> 3 ^ a << 25 ^ a << 14) + (b >>> 17 ^ b >>> 19 ^ b >>> 10 ^ b << 15 ^ b << 13) + w[i & 15] + w[i + 9 & 15] | 0;\n            }\n            tmp = tmp + h7 + (h4 >>> 6 ^ h4 >>> 11 ^ h4 >>> 25 ^ h4 << 26 ^ h4 << 21 ^ h4 << 7) + (h6 ^ h4 & (h5 ^ h6)) + this._K[i] | 0;\n            h7 = h6;\n            h6 = h5;\n            h5 = h4;\n            h4 = h3 + tmp;\n            h3 = h2;\n            h2 = h1;\n            h1 = h0;\n            h0 = tmp + (h1 & h2 ^ h3 & (h1 ^ h2)) + (h1 >>> 2 ^ h1 >>> 13 ^ h1 >>> 22 ^ h1 << 30 ^ h1 << 19 ^ h1 << 10) | 0;\n        }\n        h[0] = h[0] + h0 | 0;\n        h[1] = h[1] + h1 | 0;\n        h[2] = h[2] + h2 | 0;\n        h[3] = h[3] + h3 | 0;\n        h[4] = h[4] + h4 | 0;\n        h[5] = h[5] + h5 | 0;\n        h[6] = h[6] + h6 | 0;\n        h[7] = h[7] + h7 | 0;\n    }\n}\nclass ListerImpl {\n    err;\n    offset;\n    pageInfo;\n    subject;\n    jsm;\n    filter;\n    payload;\n    constructor(subject, filter, jsm, payload){\n        if (!subject) {\n            throw new Error(\"subject is required\");\n        }\n        this.subject = subject;\n        this.jsm = jsm;\n        this.offset = 0;\n        this.pageInfo = {};\n        this.filter = filter;\n        this.payload = payload || {};\n    }\n    async next() {\n        if (this.err) {\n            return [];\n        }\n        if (this.pageInfo && this.offset >= this.pageInfo.total) {\n            return [];\n        }\n        const offset = {\n            offset: this.offset\n        };\n        if (this.payload) {\n            Object.assign(offset, this.payload);\n        }\n        try {\n            const r = await this.jsm._request(this.subject, offset, {\n                timeout: this.jsm.timeout\n            });\n            this.pageInfo = r;\n            this.offset += this.countResponse(r);\n            const a = this.filter(r);\n            return a;\n        } catch (err) {\n            this.err = err;\n            throw err;\n        }\n    }\n    countResponse(r) {\n        switch(r?.type){\n            case \"io.nats.jetstream.api.v1.stream_names_response\":\n            case \"io.nats.jetstream.api.v1.stream_list_response\":\n                return r.streams.length;\n            case \"io.nats.jetstream.api.v1.consumer_list_response\":\n                return r.consumers.length;\n            default:\n                console.error(`jslister.ts: unknown API response for paged output: ${r?.type}`);\n                return r.streams?.length || 0;\n        }\n        return 0;\n    }\n    async *[Symbol.asyncIterator]() {\n        let page = await this.next();\n        while(page.length > 0){\n            for (const item of page){\n                yield item;\n            }\n            page = await this.next();\n        }\n    }\n}\nclass ConsumerAPIImpl extends BaseApiClient {\n    constructor(nc, opts){\n        super(nc, opts);\n    }\n    async add(stream, cfg, action = ConsumerApiAction.Create) {\n        validateStreamName(stream);\n        if (cfg.deliver_group && cfg.flow_control) {\n            throw new Error(\"jetstream flow control is not supported with queue groups\");\n        }\n        if (cfg.deliver_group && cfg.idle_heartbeat) {\n            throw new Error(\"jetstream idle heartbeat is not supported with queue groups\");\n        }\n        const cr = {};\n        cr.config = cfg;\n        cr.stream_name = stream;\n        cr.action = action;\n        if (cr.config.durable_name) {\n            validateDurableName(cr.config.durable_name);\n        }\n        const nci = this.nc;\n        let { min, ok: newAPI } = nci.features.get(Feature.JS_NEW_CONSUMER_CREATE_API);\n        const name = cfg.name === \"\" ? undefined : cfg.name;\n        if (name && !newAPI) {\n            throw new Error(`consumer 'name' requires server ${min}`);\n        }\n        if (name) {\n            try {\n                minValidation(\"name\", name);\n            } catch (err) {\n                const m = err.message;\n                const idx = m.indexOf(\"cannot contain\");\n                if (idx !== -1) {\n                    throw new Error(`consumer 'name' ${m.substring(idx)}`);\n                }\n                throw err;\n            }\n        }\n        let subj;\n        let consumerName = \"\";\n        if (Array.isArray(cfg.filter_subjects)) {\n            const { min, ok } = nci.features.get(Feature.JS_MULTIPLE_CONSUMER_FILTER);\n            if (!ok) {\n                throw new Error(`consumer 'filter_subjects' requires server ${min}`);\n            }\n            newAPI = false;\n        }\n        if (cfg.metadata) {\n            const { min, ok } = nci.features.get(Feature.JS_STREAM_CONSUMER_METADATA);\n            if (!ok) {\n                throw new Error(`consumer 'metadata' requires server ${min}`);\n            }\n        }\n        if (newAPI) {\n            consumerName = cfg.name ?? cfg.durable_name ?? \"\";\n        }\n        if (consumerName !== \"\") {\n            let fs = cfg.filter_subject ?? undefined;\n            if (fs === \">\") {\n                fs = undefined;\n            }\n            subj = fs !== undefined ? `${this.prefix}.CONSUMER.CREATE.${stream}.${consumerName}.${fs}` : `${this.prefix}.CONSUMER.CREATE.${stream}.${consumerName}`;\n        } else {\n            subj = cfg.durable_name ? `${this.prefix}.CONSUMER.DURABLE.CREATE.${stream}.${cfg.durable_name}` : `${this.prefix}.CONSUMER.CREATE.${stream}`;\n        }\n        const r = await this._request(subj, cr);\n        return r;\n    }\n    async update(stream, durable, cfg) {\n        const ci = await this.info(stream, durable);\n        const changable = cfg;\n        return this.add(stream, Object.assign(ci.config, changable), ConsumerApiAction.Update);\n    }\n    async info(stream, name) {\n        validateStreamName(stream);\n        validateDurableName(name);\n        const r = await this._request(`${this.prefix}.CONSUMER.INFO.${stream}.${name}`);\n        return r;\n    }\n    async delete(stream, name) {\n        validateStreamName(stream);\n        validateDurableName(name);\n        const r = await this._request(`${this.prefix}.CONSUMER.DELETE.${stream}.${name}`);\n        const cr = r;\n        return cr.success;\n    }\n    list(stream) {\n        validateStreamName(stream);\n        const filter = (v)=>{\n            const clr = v;\n            return clr.consumers;\n        };\n        const subj = `${this.prefix}.CONSUMER.LIST.${stream}`;\n        return new ListerImpl(subj, filter, this);\n    }\n}\nconst ACK = Uint8Array.of(43, 65, 67, 75);\nconst NAK = Uint8Array.of(45, 78, 65, 75);\nconst WPI = Uint8Array.of(43, 87, 80, 73);\nconst NXT = Uint8Array.of(43, 78, 88, 84);\nconst TERM = Uint8Array.of(43, 84, 69, 82, 77);\nconst SPACE = Uint8Array.of(32);\nfunction toJsMsg(m) {\n    return new JsMsgImpl(m);\n}\nfunction parseInfo(s) {\n    const tokens = s.split(\".\");\n    if (tokens.length === 9) {\n        tokens.splice(2, 0, \"_\", \"\");\n    }\n    if (tokens.length < 11 || tokens[0] !== \"$JS\" || tokens[1] !== \"ACK\") {\n        throw new Error(`not js message`);\n    }\n    const di = {};\n    di.domain = tokens[2] === \"_\" ? \"\" : tokens[2];\n    di.account_hash = tokens[3];\n    di.stream = tokens[4];\n    di.consumer = tokens[5];\n    di.redeliveryCount = parseInt(tokens[6], 10);\n    di.redelivered = di.redeliveryCount > 1;\n    di.streamSequence = parseInt(tokens[7], 10);\n    di.deliverySequence = parseInt(tokens[8], 10);\n    di.timestampNanos = parseInt(tokens[9], 10);\n    di.pending = parseInt(tokens[10], 10);\n    return di;\n}\nclass JsMsgImpl {\n    msg;\n    di;\n    didAck;\n    constructor(msg){\n        this.msg = msg;\n        this.didAck = false;\n    }\n    get subject() {\n        return this.msg.subject;\n    }\n    get sid() {\n        return this.msg.sid;\n    }\n    get data() {\n        return this.msg.data;\n    }\n    get headers() {\n        return this.msg.headers;\n    }\n    get info() {\n        if (!this.di) {\n            this.di = parseInfo(this.reply);\n        }\n        return this.di;\n    }\n    get redelivered() {\n        return this.info.redeliveryCount > 1;\n    }\n    get reply() {\n        return this.msg.reply || \"\";\n    }\n    get seq() {\n        return this.info.streamSequence;\n    }\n    doAck(payload) {\n        if (!this.didAck) {\n            this.didAck = !this.isWIP(payload);\n            this.msg.respond(payload);\n        }\n    }\n    isWIP(p) {\n        return p.length === 4 && p[0] === WPI[0] && p[1] === WPI[1] && p[2] === WPI[2] && p[3] === WPI[3];\n    }\n    async ackAck() {\n        if (!this.didAck) {\n            this.didAck = true;\n            if (this.msg.reply) {\n                const mi = this.msg;\n                const proto = mi.publisher;\n                const trace = !(proto.options?.noAsyncTraces || false);\n                const r = new RequestOne(proto.muxSubscriptions, this.msg.reply, {\n                    timeout: 1000\n                }, trace);\n                proto.request(r);\n                try {\n                    proto.publish(this.msg.reply, ACK, {\n                        reply: `${proto.muxSubscriptions.baseInbox}${r.token}`\n                    });\n                } catch (err) {\n                    r.cancel(err);\n                }\n                try {\n                    await Promise.race([\n                        r.timer,\n                        r.deferred\n                    ]);\n                    return true;\n                } catch (err) {\n                    r.cancel(err);\n                }\n            }\n        }\n        return false;\n    }\n    ack() {\n        this.doAck(ACK);\n    }\n    nak(millis) {\n        let payload = NAK;\n        if (millis) {\n            payload = StringCodec().encode(`-NAK ${JSON.stringify({\n                delay: nanos(millis)\n            })}`);\n        }\n        this.doAck(payload);\n    }\n    working() {\n        this.doAck(WPI);\n    }\n    next(subj, opts = {\n        batch: 1\n    }) {\n        const args = {};\n        args.batch = opts.batch || 1;\n        args.no_wait = opts.no_wait || false;\n        if (opts.expires && opts.expires > 0) {\n            args.expires = nanos(opts.expires);\n        }\n        const data = JSONCodec().encode(args);\n        const payload = DataBuffer.concat(NXT, SPACE, data);\n        const reqOpts = subj ? {\n            reply: subj\n        } : undefined;\n        this.msg.respond(payload, reqOpts);\n    }\n    term(reason = \"\") {\n        let term = TERM;\n        if (reason?.length > 0) {\n            term = StringCodec().encode(`+TERM ${reason}`);\n        }\n        this.doAck(term);\n    }\n    json() {\n        return this.msg.json();\n    }\n    string() {\n        return this.msg.string();\n    }\n}\nfunction checkFn(fn, name, required = false) {\n    if (required === true && !fn) {\n        throw NatsError.errorForCode(ErrorCode.ApiError, new Error(`${name} is not a function`));\n    }\n    if (fn && typeof fn !== \"function\") {\n        throw NatsError.errorForCode(ErrorCode.ApiError, new Error(`${name} is not a function`));\n    }\n}\nclass TypedSubscription extends QueuedIteratorImpl {\n    sub;\n    adapter;\n    subIterDone;\n    constructor(nc, subject, opts){\n        super();\n        checkFn(opts.adapter, \"adapter\", true);\n        this.adapter = opts.adapter;\n        if (opts.callback) {\n            checkFn(opts.callback, \"callback\");\n        }\n        this.noIterator = typeof opts.callback === \"function\";\n        if (opts.ingestionFilterFn) {\n            checkFn(opts.ingestionFilterFn, \"ingestionFilterFn\");\n            this.ingestionFilterFn = opts.ingestionFilterFn;\n        }\n        if (opts.protocolFilterFn) {\n            checkFn(opts.protocolFilterFn, \"protocolFilterFn\");\n            this.protocolFilterFn = opts.protocolFilterFn;\n        }\n        if (opts.dispatchedFn) {\n            checkFn(opts.dispatchedFn, \"dispatchedFn\");\n            this.dispatchedFn = opts.dispatchedFn;\n        }\n        if (opts.cleanupFn) {\n            checkFn(opts.cleanupFn, \"cleanupFn\");\n        }\n        let callback = (err, msg)=>{\n            this.callback(err, msg);\n        };\n        if (opts.callback) {\n            const uh = opts.callback;\n            callback = (err, msg)=>{\n                const [jer, tm] = this.adapter(err, msg);\n                if (jer) {\n                    uh(jer, null);\n                    return;\n                }\n                const { ingest } = this.ingestionFilterFn ? this.ingestionFilterFn(tm, this) : {\n                    ingest: true\n                };\n                if (ingest) {\n                    const ok = this.protocolFilterFn ? this.protocolFilterFn(tm) : true;\n                    if (ok) {\n                        uh(jer, tm);\n                        if (this.dispatchedFn && tm) {\n                            this.dispatchedFn(tm);\n                        }\n                    }\n                }\n            };\n        }\n        const { max, queue, timeout } = opts;\n        const sopts = {\n            queue,\n            timeout,\n            callback\n        };\n        if (max && max > 0) {\n            sopts.max = max;\n        }\n        this.sub = nc.subscribe(subject, sopts);\n        if (opts.cleanupFn) {\n            this.sub.cleanupFn = opts.cleanupFn;\n        }\n        if (!this.noIterator) {\n            this.iterClosed.then(()=>{\n                this.unsubscribe();\n            });\n        }\n        this.subIterDone = deferred();\n        Promise.all([\n            this.sub.closed,\n            this.iterClosed\n        ]).then(()=>{\n            this.subIterDone.resolve();\n        }).catch(()=>{\n            this.subIterDone.resolve();\n        });\n        (async (s)=>{\n            await s.closed;\n            this.stop();\n        })(this.sub).then().catch();\n    }\n    unsubscribe(max) {\n        this.sub.unsubscribe(max);\n    }\n    drain() {\n        return this.sub.drain();\n    }\n    isDraining() {\n        return this.sub.isDraining();\n    }\n    isClosed() {\n        return this.sub.isClosed();\n    }\n    callback(e, msg) {\n        this.sub.cancelTimeout();\n        const [err, tm] = this.adapter(e, msg);\n        if (err) {\n            this.stop(err);\n        }\n        if (tm) {\n            this.push(tm);\n        }\n    }\n    getSubject() {\n        return this.sub.getSubject();\n    }\n    getReceived() {\n        return this.sub.getReceived();\n    }\n    getProcessed() {\n        return this.sub.getProcessed();\n    }\n    getPending() {\n        return this.sub.getPending();\n    }\n    getID() {\n        return this.sub.getID();\n    }\n    getMax() {\n        return this.sub.getMax();\n    }\n    get closed() {\n        return this.sub.closed;\n    }\n}\nclass IdleHeartbeatMonitor {\n    interval;\n    maxOut;\n    cancelAfter;\n    timer;\n    autoCancelTimer;\n    last;\n    missed;\n    count;\n    callback;\n    constructor(interval, cb, opts = {\n        maxOut: 2\n    }){\n        this.interval = interval;\n        this.maxOut = opts?.maxOut || 2;\n        this.cancelAfter = opts?.cancelAfter || 0;\n        this.last = Date.now();\n        this.missed = 0;\n        this.count = 0;\n        this.callback = cb;\n        this._schedule();\n    }\n    cancel() {\n        if (this.autoCancelTimer) {\n            clearTimeout(this.autoCancelTimer);\n        }\n        if (this.timer) {\n            clearInterval(this.timer);\n        }\n        this.timer = 0;\n        this.autoCancelTimer = 0;\n    }\n    work() {\n        this.last = Date.now();\n        this.missed = 0;\n    }\n    _change(interval, cancelAfter = 0, maxOut = 2) {\n        this.interval = interval;\n        this.maxOut = maxOut;\n        this.cancelAfter = cancelAfter;\n        this.restart();\n    }\n    restart() {\n        this.cancel();\n        this._schedule();\n    }\n    _schedule() {\n        if (this.cancelAfter > 0) {\n            this.autoCancelTimer = setTimeout(()=>{\n                this.cancel();\n            }, this.cancelAfter);\n        }\n        this.timer = setInterval(()=>{\n            this.count++;\n            if (Date.now() - this.last > this.interval) {\n                this.missed++;\n            }\n            if (this.missed >= this.maxOut) {\n                try {\n                    if (this.callback(this.missed) === true) {\n                        this.cancel();\n                    }\n                } catch (err) {\n                    console.log(err);\n                }\n            }\n        }, this.interval);\n    }\n}\nvar PullConsumerType;\n(function(PullConsumerType) {\n    PullConsumerType[PullConsumerType[\"Unset\"] = -1] = \"Unset\";\n    PullConsumerType[PullConsumerType[\"Consume\"] = 0] = \"Consume\";\n    PullConsumerType[PullConsumerType[\"Fetch\"] = 1] = \"Fetch\";\n})(PullConsumerType || (PullConsumerType = {}));\nvar ConsumerEvents;\n(function(ConsumerEvents) {\n    ConsumerEvents[\"HeartbeatsMissed\"] = \"heartbeats_missed\";\n    ConsumerEvents[\"ConsumerNotFound\"] = \"consumer_not_found\";\n    ConsumerEvents[\"OrderedConsumerRecreated\"] = \"ordered_consumer_recreated\";\n})(ConsumerEvents || (ConsumerEvents = {}));\nvar ConsumerDebugEvents;\n(function(ConsumerDebugEvents) {\n    ConsumerDebugEvents[\"DebugEvent\"] = \"debug\";\n    ConsumerDebugEvents[\"Discard\"] = \"discard\";\n    ConsumerDebugEvents[\"Next\"] = \"next\";\n})(ConsumerDebugEvents || (ConsumerDebugEvents = {}));\nclass PullConsumerMessagesImpl extends QueuedIteratorImpl {\n    consumer;\n    opts;\n    sub;\n    monitor;\n    pending;\n    inbox;\n    refilling;\n    stack;\n    pong;\n    callback;\n    timeout;\n    cleanupHandler;\n    listeners;\n    statusIterator;\n    forOrderedConsumer;\n    resetHandler;\n    constructor(c, opts, refilling = false){\n        super();\n        this.consumer = c;\n        this.opts = this.parseOptions(opts, refilling);\n        this.callback = opts.callback || null;\n        this.noIterator = typeof this.callback === \"function\";\n        this.monitor = null;\n        this.pong = null;\n        this.pending = {\n            msgs: 0,\n            bytes: 0,\n            requests: 0\n        };\n        this.refilling = refilling;\n        this.stack = new Error().stack.split(\"\\n\").slice(1).join(\"\\n\");\n        this.timeout = null;\n        this.inbox = createInbox(c.api.nc.options.inboxPrefix);\n        this.listeners = [];\n        this.forOrderedConsumer = false;\n        this.start();\n    }\n    start() {\n        const { max_messages, max_bytes, idle_heartbeat, threshold_bytes, threshold_messages } = this.opts;\n        this.closed().then(()=>{\n            if (this.cleanupHandler) {\n                try {\n                    this.cleanupHandler();\n                } catch (_err) {}\n            }\n        });\n        const { sub } = this;\n        if (sub) {\n            sub.unsubscribe();\n        }\n        this.sub = this.consumer.api.nc.subscribe(this.inbox, {\n            callback: (err, msg)=>{\n                if (err) {\n                    this.stop();\n                    return;\n                }\n                this.monitor?.work();\n                const isProtocol = msg.subject === this.inbox;\n                if (isProtocol) {\n                    if (isHeartbeatMsg(msg)) {\n                        return;\n                    }\n                    const code = msg.headers?.code;\n                    const description = msg.headers?.description?.toLowerCase() || \"unknown\";\n                    const { msgsLeft, bytesLeft } = this.parseDiscard(msg.headers);\n                    if (msgsLeft > 0 || bytesLeft > 0) {\n                        this.pending.msgs -= msgsLeft;\n                        this.pending.bytes -= bytesLeft;\n                        this.pending.requests--;\n                        this.notify(ConsumerDebugEvents.Discard, {\n                            msgsLeft,\n                            bytesLeft\n                        });\n                    } else {\n                        const toErr = ()=>{\n                            const err = new NatsError(description, `${code}`);\n                            err.stack += `\\n\\n${this.stack}`;\n                            return err;\n                        };\n                        if (code === 400) {\n                            const error = toErr();\n                            this._push(()=>{\n                                this.stop(error);\n                            });\n                        } else if (code === 409 && description === \"consumer deleted\") {\n                            const error = toErr();\n                            this.stop(error);\n                        } else {\n                            this.notify(ConsumerDebugEvents.DebugEvent, `${code} ${description}`);\n                        }\n                    }\n                } else {\n                    this._push(toJsMsg(msg));\n                    this.received++;\n                    if (this.pending.msgs) {\n                        this.pending.msgs--;\n                    }\n                    if (this.pending.bytes) {\n                        this.pending.bytes -= msg.size();\n                    }\n                }\n                if (this.pending.msgs === 0 && this.pending.bytes === 0) {\n                    this.pending.requests = 0;\n                }\n                if (this.refilling) {\n                    if (max_messages && this.pending.msgs <= threshold_messages || max_bytes && this.pending.bytes <= threshold_bytes) {\n                        const batch = this.pullOptions();\n                        this.pull(batch);\n                    }\n                } else if (this.pending.requests === 0) {\n                    this._push(()=>{\n                        this.stop();\n                    });\n                }\n            }\n        });\n        this.sub.closed.then(()=>{\n            if (this.sub.draining) {\n                this._push(()=>{\n                    this.stop();\n                });\n            }\n        });\n        if (idle_heartbeat) {\n            this.monitor = new IdleHeartbeatMonitor(idle_heartbeat, (data)=>{\n                this.notify(ConsumerEvents.HeartbeatsMissed, data);\n                this.resetPending().then(()=>{}).catch(()=>{});\n                return false;\n            }, {\n                maxOut: 2\n            });\n        }\n        (async ()=>{\n            const status = this.consumer.api.nc.status();\n            this.statusIterator = status;\n            for await (const s of status){\n                switch(s.type){\n                    case Events.Disconnect:\n                        this.monitor?.cancel();\n                        break;\n                    case Events.Reconnect:\n                        this.resetPending().then((ok)=>{\n                            if (ok) {\n                                this.monitor?.restart();\n                            }\n                        }).catch(()=>{});\n                        break;\n                    default:\n                }\n            }\n        })();\n        this.pull(this.pullOptions());\n    }\n    _push(r) {\n        if (!this.callback) {\n            super.push(r);\n        } else {\n            const fn = typeof r === \"function\" ? r : null;\n            try {\n                if (!fn) {\n                    this.callback(r);\n                } else {\n                    fn();\n                }\n            } catch (err) {\n                this.stop(err);\n            }\n        }\n    }\n    notify(type, data) {\n        if (this.listeners.length > 0) {\n            (()=>{\n                this.listeners.forEach((l)=>{\n                    if (!l.done) {\n                        l.push({\n                            type,\n                            data\n                        });\n                    }\n                });\n            })();\n        }\n    }\n    async resetPending() {\n        let notFound = 0;\n        const bo = backoff();\n        let attempt = 0;\n        while(true){\n            if (this.consumer.api.nc.isClosed()) {\n                console.error(\"aborting resetPending - connection is closed\");\n                return false;\n            }\n            try {\n                await this.consumer.info();\n                notFound = 0;\n                this.pending.msgs = 0;\n                this.pending.bytes = 0;\n                this.pending.requests = 0;\n                this.pull(this.pullOptions());\n                return true;\n            } catch (err) {\n                if (err.message === \"consumer not found\") {\n                    notFound++;\n                    this.notify(ConsumerEvents.ConsumerNotFound, notFound);\n                    if (this.resetHandler) {\n                        try {\n                            this.resetHandler();\n                        } catch (_) {}\n                    }\n                    if (this.forOrderedConsumer) {\n                        return false;\n                    }\n                } else {\n                    notFound = 0;\n                }\n                const to = bo.backoff(attempt);\n                await Promise.race([\n                    delay(to),\n                    this.consumer.api.nc.closed()\n                ]);\n                attempt++;\n            }\n        }\n    }\n    pull(opts) {\n        this.pending.bytes += opts.max_bytes ?? 0;\n        this.pending.msgs += opts.batch ?? 0;\n        this.pending.requests++;\n        const nc = this.consumer.api.nc;\n        this._push(()=>{\n            nc.publish(`${this.consumer.api.prefix}.CONSUMER.MSG.NEXT.${this.consumer.stream}.${this.consumer.name}`, this.consumer.api.jc.encode(opts), {\n                reply: this.inbox\n            });\n            this.notify(ConsumerDebugEvents.Next, opts);\n        });\n    }\n    pullOptions() {\n        const batch = this.opts.max_messages - this.pending.msgs;\n        const max_bytes = this.opts.max_bytes - this.pending.bytes;\n        const idle_heartbeat = nanos(this.opts.idle_heartbeat);\n        const expires = nanos(this.opts.expires);\n        return {\n            batch,\n            max_bytes,\n            idle_heartbeat,\n            expires\n        };\n    }\n    parseDiscard(headers) {\n        const discard = {\n            msgsLeft: 0,\n            bytesLeft: 0\n        };\n        const msgsLeft = headers?.get(JsHeaders.PendingMessagesHdr);\n        if (msgsLeft) {\n            discard.msgsLeft = parseInt(msgsLeft);\n        }\n        const bytesLeft = headers?.get(JsHeaders.PendingBytesHdr);\n        if (bytesLeft) {\n            discard.bytesLeft = parseInt(bytesLeft);\n        }\n        return discard;\n    }\n    trackTimeout(t) {\n        this.timeout = t;\n    }\n    close() {\n        this.stop();\n        return this.iterClosed;\n    }\n    closed() {\n        return this.iterClosed;\n    }\n    clearTimers() {\n        this.monitor?.cancel();\n        this.monitor = null;\n        this.timeout?.cancel();\n        this.timeout = null;\n    }\n    setCleanupHandler(fn) {\n        this.cleanupHandler = fn;\n    }\n    stop(err) {\n        this.sub?.unsubscribe();\n        this.clearTimers();\n        this.statusIterator?.stop();\n        this._push(()=>{\n            super.stop(err);\n            this.listeners.forEach((n)=>{\n                n.stop();\n            });\n        });\n    }\n    parseOptions(opts, refilling = false) {\n        const args = opts || {};\n        args.max_messages = args.max_messages || 0;\n        args.max_bytes = args.max_bytes || 0;\n        if (args.max_messages !== 0 && args.max_bytes !== 0) {\n            throw new Error(`only specify one of max_messages or max_bytes`);\n        }\n        if (args.max_messages === 0) {\n            args.max_messages = 100;\n        }\n        args.expires = args.expires || 30_000;\n        if (args.expires < 1000) {\n            throw new Error(\"expires should be at least 1000ms\");\n        }\n        args.idle_heartbeat = args.idle_heartbeat || args.expires / 2;\n        args.idle_heartbeat = args.idle_heartbeat > 30_000 ? 30_000 : args.idle_heartbeat;\n        if (refilling) {\n            const minMsgs = Math.round(args.max_messages * .75) || 1;\n            args.threshold_messages = args.threshold_messages || minMsgs;\n            const minBytes = Math.round(args.max_bytes * .75) || 1;\n            args.threshold_bytes = args.threshold_bytes || minBytes;\n        }\n        return args;\n    }\n    status() {\n        const iter = new QueuedIteratorImpl();\n        this.listeners.push(iter);\n        return Promise.resolve(iter);\n    }\n}\nclass OrderedConsumerMessages extends QueuedIteratorImpl {\n    src;\n    listeners;\n    constructor(){\n        super();\n        this.listeners = [];\n    }\n    setSource(src) {\n        if (this.src) {\n            this.src.resetHandler = undefined;\n            this.src.setCleanupHandler();\n            this.src.stop();\n        }\n        this.src = src;\n        this.src.setCleanupHandler(()=>{\n            this.close().catch();\n        });\n        (async ()=>{\n            const status = await this.src.status();\n            for await (const s of status){\n                this.notify(s.type, s.data);\n            }\n        })().catch(()=>{});\n    }\n    notify(type, data) {\n        if (this.listeners.length > 0) {\n            (()=>{\n                this.listeners.forEach((l)=>{\n                    if (!l.done) {\n                        l.push({\n                            type,\n                            data\n                        });\n                    }\n                });\n            })();\n        }\n    }\n    stop(err) {\n        this.src?.stop(err);\n        super.stop(err);\n        this.listeners.forEach((n)=>{\n            n.stop();\n        });\n    }\n    close() {\n        this.stop();\n        return this.iterClosed;\n    }\n    status() {\n        const iter = new QueuedIteratorImpl();\n        this.listeners.push(iter);\n        return Promise.resolve(iter);\n    }\n}\nclass PullConsumerImpl {\n    api;\n    _info;\n    stream;\n    name;\n    constructor(api, info){\n        this.api = api;\n        this._info = info;\n        this.stream = info.stream_name;\n        this.name = info.name;\n    }\n    consume(opts = {\n        max_messages: 100,\n        expires: 30_000\n    }) {\n        return Promise.resolve(new PullConsumerMessagesImpl(this, opts, true));\n    }\n    fetch(opts = {\n        max_messages: 100,\n        expires: 30_000\n    }) {\n        const m = new PullConsumerMessagesImpl(this, opts, false);\n        const to = Math.round(m.opts.expires * 1.05);\n        const timer = timeout(to);\n        m.closed().then(()=>{\n            timer.cancel();\n        });\n        timer.catch(()=>{\n            m.close().catch();\n        });\n        m.trackTimeout(timer);\n        return Promise.resolve(m);\n    }\n    next(opts = {\n        expires: 30_000\n    }) {\n        const d = deferred();\n        const fopts = opts;\n        fopts.max_messages = 1;\n        const iter = new PullConsumerMessagesImpl(this, fopts, false);\n        const to = Math.round(iter.opts.expires * 1.05);\n        if (to >= 60_000) {\n            (async ()=>{\n                for await (const s of (await iter.status())){\n                    if (s.type === ConsumerEvents.HeartbeatsMissed && s.data >= 2) {\n                        d.reject(new Error(\"consumer missed heartbeats\"));\n                        break;\n                    }\n                }\n            })().catch();\n        }\n        (async ()=>{\n            for await (const m of iter){\n                d.resolve(m);\n                break;\n            }\n        })().catch();\n        const timer = timeout(to);\n        iter.closed().then(()=>{\n            d.resolve(null);\n            timer.cancel();\n        }).catch((err)=>{\n            d.reject(err);\n        });\n        timer.catch((_err)=>{\n            d.resolve(null);\n            iter.close().catch();\n        });\n        iter.trackTimeout(timer);\n        return d;\n    }\n    delete() {\n        const { stream_name, name } = this._info;\n        return this.api.delete(stream_name, name);\n    }\n    info(cached = false) {\n        if (cached) {\n            return Promise.resolve(this._info);\n        }\n        const { stream_name, name } = this._info;\n        return this.api.info(stream_name, name).then((ci)=>{\n            this._info = ci;\n            return this._info;\n        });\n    }\n}\nclass OrderedPullConsumerImpl {\n    api;\n    consumerOpts;\n    consumer;\n    opts;\n    cursor;\n    stream;\n    namePrefix;\n    serial;\n    currentConsumer;\n    userCallback;\n    iter;\n    type;\n    startSeq;\n    constructor(api, stream, opts = {}){\n        this.api = api;\n        this.stream = stream;\n        this.cursor = {\n            stream_seq: 1,\n            deliver_seq: 0\n        };\n        this.namePrefix = nuid.next();\n        this.serial = 0;\n        this.currentConsumer = null;\n        this.userCallback = null;\n        this.iter = null;\n        this.type = PullConsumerType.Unset;\n        this.consumerOpts = opts;\n        this.startSeq = this.consumerOpts.opt_start_seq || 0;\n        this.cursor.stream_seq = this.startSeq > 0 ? this.startSeq - 1 : 0;\n    }\n    getConsumerOpts(seq) {\n        this.serial++;\n        const name = `${this.namePrefix}_${this.serial}`;\n        seq = seq === 0 ? 1 : seq;\n        const config = {\n            name,\n            deliver_policy: DeliverPolicy.StartSequence,\n            opt_start_seq: seq,\n            ack_policy: AckPolicy.None,\n            inactive_threshold: nanos(5 * 60 * 1000),\n            num_replicas: 1\n        };\n        if (this.consumerOpts.headers_only === true) {\n            config.headers_only = true;\n        }\n        if (Array.isArray(this.consumerOpts.filterSubjects)) {\n            config.filter_subjects = this.consumerOpts.filterSubjects;\n        }\n        if (typeof this.consumerOpts.filterSubjects === \"string\") {\n            config.filter_subject = this.consumerOpts.filterSubjects;\n        }\n        if (seq === this.startSeq + 1) {\n            config.deliver_policy = this.consumerOpts.deliver_policy || DeliverPolicy.StartSequence;\n            if (this.consumerOpts.deliver_policy === DeliverPolicy.LastPerSubject || this.consumerOpts.deliver_policy === DeliverPolicy.New || this.consumerOpts.deliver_policy === DeliverPolicy.Last) {\n                delete config.opt_start_seq;\n                config.deliver_policy = this.consumerOpts.deliver_policy;\n            }\n            if (config.deliver_policy === DeliverPolicy.LastPerSubject) {\n                if (typeof config.filter_subjects === \"undefined\" && typeof config.filter_subject === \"undefined\") {\n                    config.filter_subject = \">\";\n                }\n            }\n            if (this.consumerOpts.opt_start_time) {\n                delete config.opt_start_seq;\n                config.deliver_policy = DeliverPolicy.StartTime;\n                config.opt_start_time = this.consumerOpts.opt_start_time;\n            }\n            if (this.consumerOpts.inactive_threshold) {\n                config.inactive_threshold = nanos(this.consumerOpts.inactive_threshold);\n            }\n        }\n        return config;\n    }\n    async resetConsumer(seq = 0) {\n        this.consumer?.delete().catch(()=>{});\n        seq = seq === 0 ? 1 : seq;\n        this.cursor.deliver_seq = 0;\n        const config = this.getConsumerOpts(seq);\n        config.max_deliver = 1;\n        config.mem_storage = true;\n        const bo = backoff();\n        let ci;\n        for(let i = 0;; i++){\n            try {\n                ci = await this.api.add(this.stream, config);\n                this.iter?.notify(ConsumerEvents.OrderedConsumerRecreated, ci.name);\n                break;\n            } catch (err) {\n                if (seq === 0 && i >= 30) {\n                    throw err;\n                } else {\n                    await delay(bo.backoff(i + 1));\n                }\n            }\n        }\n        return ci;\n    }\n    internalHandler(serial) {\n        return (m)=>{\n            if (this.serial !== serial) {\n                return;\n            }\n            const dseq = m.info.deliverySequence;\n            if (dseq !== this.cursor.deliver_seq + 1) {\n                this.reset(this.opts);\n                return;\n            }\n            this.cursor.deliver_seq = dseq;\n            this.cursor.stream_seq = m.info.streamSequence;\n            if (this.userCallback) {\n                this.userCallback(m);\n            } else {\n                this.iter?.push(m);\n            }\n        };\n    }\n    async reset(opts = {\n        max_messages: 100,\n        expires: 30_000\n    }, fromFetch = false) {\n        this.currentConsumer = await this.resetConsumer(this.cursor.stream_seq + 1);\n        if (this.iter === null) {\n            this.iter = new OrderedConsumerMessages();\n        }\n        this.consumer = new PullConsumerImpl(this.api, this.currentConsumer);\n        const copts = opts;\n        copts.callback = this.internalHandler(this.serial);\n        let msgs = null;\n        if (this.type === PullConsumerType.Fetch && fromFetch) {\n            msgs = await this.consumer.fetch(opts);\n        } else if (this.type === PullConsumerType.Consume) {\n            msgs = await this.consumer.consume(opts);\n        } else {\n            return Promise.reject(\"reset called with unset consumer type\");\n        }\n        const msgsImpl = msgs;\n        msgsImpl.forOrderedConsumer = true;\n        msgsImpl.resetHandler = ()=>{\n            this.reset(this.opts);\n        };\n        this.iter.setSource(msgsImpl);\n        return this.iter;\n    }\n    consume(opts = {\n        max_messages: 100,\n        expires: 30_000\n    }) {\n        if (this.type === PullConsumerType.Fetch) {\n            return Promise.reject(new Error(\"ordered consumer initialized as fetch\"));\n        }\n        if (this.type === PullConsumerType.Consume) {\n            return Promise.reject(new Error(\"ordered consumer doesn't support concurrent consume\"));\n        }\n        const { callback } = opts;\n        if (callback) {\n            this.userCallback = callback;\n        }\n        this.type = PullConsumerType.Consume;\n        this.opts = opts;\n        return this.reset(opts);\n    }\n    fetch(opts = {\n        max_messages: 100,\n        expires: 30_000\n    }) {\n        if (this.type === PullConsumerType.Consume) {\n            return Promise.reject(new Error(\"ordered consumer already initialized as consume\"));\n        }\n        if (this.iter?.done === false) {\n            return Promise.reject(new Error(\"ordered consumer doesn't support concurrent fetch\"));\n        }\n        const { callback } = opts;\n        if (callback) {\n            this.userCallback = callback;\n        }\n        this.type = PullConsumerType.Fetch;\n        this.opts = opts;\n        this.iter = new OrderedConsumerMessages();\n        return this.reset(opts, true);\n    }\n    async next(opts = {\n        expires: 30_000\n    }) {\n        const d = deferred();\n        const copts = opts;\n        copts.max_messages = 1;\n        copts.callback = (m)=>{\n            this.userCallback = null;\n            d.resolve(m);\n        };\n        const iter = await this.fetch(copts);\n        iter.iterClosed.then(()=>{\n            d.resolve(null);\n        }).catch((err)=>{\n            d.reject(err);\n        });\n        return d;\n    }\n    delete() {\n        if (!this.currentConsumer) {\n            return Promise.resolve(false);\n        }\n        return this.api.delete(this.stream, this.currentConsumer.name).then((tf)=>{\n            return Promise.resolve(tf);\n        }).catch((err)=>{\n            return Promise.reject(err);\n        }).finally(()=>{\n            this.currentConsumer = null;\n        });\n    }\n    async info(cached) {\n        if (this.currentConsumer == null) {\n            this.currentConsumer = await this.resetConsumer(this.serial);\n            return Promise.resolve(this.currentConsumer);\n        }\n        if (cached && this.currentConsumer) {\n            return Promise.resolve(this.currentConsumer);\n        }\n        return this.api.info(this.stream, this.currentConsumer.name);\n    }\n}\nfunction convertStreamSourceDomain(s) {\n    if (s === undefined) {\n        return undefined;\n    }\n    const { domain } = s;\n    if (domain === undefined) {\n        return s;\n    }\n    const copy = Object.assign({}, s);\n    delete copy.domain;\n    if (domain === \"\") {\n        return copy;\n    }\n    if (copy.external) {\n        throw new Error(\"domain and external are both set\");\n    }\n    copy.external = {\n        api: `$JS.${domain}.API`\n    };\n    return copy;\n}\nvar PubHeaders;\nconst osPrefix = \"OBJ_\";\nclass ConsumersImpl {\n    api;\n    notified;\n    constructor(api){\n        this.api = api;\n        this.notified = false;\n    }\n    checkVersion() {\n        const fv = this.api.nc.features.get(Feature.JS_SIMPLIFICATION);\n        if (!fv.ok) {\n            return Promise.reject(new Error(`consumers framework is only supported on servers ${fv.min} or better`));\n        }\n        return Promise.resolve();\n    }\n    async get(stream, name = {}) {\n        if (typeof name === \"object\") {\n            return this.ordered(stream, name);\n        }\n        await this.checkVersion();\n        return this.api.info(stream, name).then((ci)=>{\n            if (ci.config.deliver_subject !== undefined) {\n                return Promise.reject(new Error(\"push consumer not supported\"));\n            }\n            return new PullConsumerImpl(this.api, ci);\n        }).catch((err)=>{\n            return Promise.reject(err);\n        });\n    }\n    async ordered(stream, opts) {\n        await this.checkVersion();\n        const impl = this.api;\n        const sapi = new StreamAPIImpl(impl.nc, impl.opts);\n        return sapi.info(stream).then((_si)=>{\n            return Promise.resolve(new OrderedPullConsumerImpl(this.api, stream, opts));\n        }).catch((err)=>{\n            return Promise.reject(err);\n        });\n    }\n}\nclass StreamImpl {\n    api;\n    _info;\n    constructor(api, info){\n        this.api = api;\n        this._info = info;\n    }\n    get name() {\n        return this._info.config.name;\n    }\n    alternates() {\n        return this.info().then((si)=>{\n            return si.alternates ? si.alternates : [];\n        });\n    }\n    async best() {\n        await this.info();\n        if (this._info.alternates) {\n            const asi = await this.api.info(this._info.alternates[0].name);\n            return new StreamImpl(this.api, asi);\n        } else {\n            return this;\n        }\n    }\n    info(cached = false, opts) {\n        if (cached) {\n            return Promise.resolve(this._info);\n        }\n        return this.api.info(this.name, opts).then((si)=>{\n            this._info = si;\n            return this._info;\n        });\n    }\n    getConsumer(name) {\n        return new ConsumersImpl(new ConsumerAPIImpl(this.api.nc, this.api.opts)).get(this.name, name);\n    }\n    getMessage(query) {\n        return this.api.getMessage(this.name, query);\n    }\n    deleteMessage(seq, erase) {\n        return this.api.deleteMessage(this.name, seq, erase);\n    }\n}\nfunction NoopKvCodecs() {\n    return {\n        key: {\n            encode (k) {\n                return k;\n            },\n            decode (k) {\n                return k;\n            }\n        },\n        value: {\n            encode (v) {\n                return v;\n            },\n            decode (v) {\n                return v;\n            }\n        }\n    };\n}\nfunction defaultBucketOpts() {\n    return {\n        replicas: 1,\n        history: 1,\n        timeout: 2000,\n        maxBucketSize: -1,\n        maxValueSize: -1,\n        codec: NoopKvCodecs(),\n        storage: StorageType.File\n    };\n}\nconst kvOperationHdr = \"KV-Operation\";\nconst kvSubjectPrefix = \"$KV\";\nconst validKeyRe = /^[-/=.\\w]+$/;\nconst validSearchKey = /^[-/=.>*\\w]+$/;\nconst validBucketRe = /^[-\\w]+$/;\nfunction validateKey(k) {\n    if (k.startsWith(\".\") || k.endsWith(\".\") || !validKeyRe.test(k)) {\n        throw new Error(`invalid key: ${k}`);\n    }\n}\nfunction validateSearchKey(k) {\n    if (k.startsWith(\".\") || k.endsWith(\".\") || !validSearchKey.test(k)) {\n        throw new Error(`invalid key: ${k}`);\n    }\n}\nfunction hasWildcards(k) {\n    if (k.startsWith(\".\") || k.endsWith(\".\")) {\n        throw new Error(`invalid key: ${k}`);\n    }\n    const chunks = k.split(\".\");\n    let hasWildcards = false;\n    for(let i = 0; i < chunks.length; i++){\n        switch(chunks[i]){\n            case \"*\":\n                hasWildcards = true;\n                break;\n            case \">\":\n                if (i !== chunks.length - 1) {\n                    throw new Error(`invalid key: ${k}`);\n                }\n                hasWildcards = true;\n                break;\n            default:\n        }\n    }\n    return hasWildcards;\n}\nfunction validateBucket(name) {\n    if (!validBucketRe.test(name)) {\n        throw new Error(`invalid bucket name: ${name}`);\n    }\n}\n(function(PubHeaders) {\n    PubHeaders[\"MsgIdHdr\"] = \"Nats-Msg-Id\";\n    PubHeaders[\"ExpectedStreamHdr\"] = \"Nats-Expected-Stream\";\n    PubHeaders[\"ExpectedLastSeqHdr\"] = \"Nats-Expected-Last-Sequence\";\n    PubHeaders[\"ExpectedLastMsgIdHdr\"] = \"Nats-Expected-Last-Msg-Id\";\n    PubHeaders[\"ExpectedLastSubjectSequenceHdr\"] = \"Nats-Expected-Last-Subject-Sequence\";\n})(PubHeaders || (PubHeaders = {}));\nclass Bucket {\n    js;\n    jsm;\n    stream;\n    bucket;\n    direct;\n    codec;\n    prefix;\n    editPrefix;\n    useJsPrefix;\n    _prefixLen;\n    constructor(bucket, js, jsm){\n        validateBucket(bucket);\n        this.js = js;\n        this.jsm = jsm;\n        this.bucket = bucket;\n        this.prefix = kvSubjectPrefix;\n        this.editPrefix = \"\";\n        this.useJsPrefix = false;\n        this._prefixLen = 0;\n    }\n    static async create(js, name, opts = {}) {\n        validateBucket(name);\n        const jsm = await js.jetstreamManager();\n        const bucket = new Bucket(name, js, jsm);\n        await bucket.init(opts);\n        return bucket;\n    }\n    static async bind(js, name, opts = {}) {\n        const jsm = await js.jetstreamManager();\n        const info = await jsm.streams.info(`${kvPrefix}${name}`);\n        validateBucket(info.config.name);\n        const bucket = new Bucket(name, js, jsm);\n        Object.assign(bucket, info);\n        bucket.codec = opts.codec || NoopKvCodecs();\n        bucket.direct = info.config.allow_direct ?? false;\n        bucket.initializePrefixes(info);\n        return bucket;\n    }\n    async init(opts = {}) {\n        const bo = Object.assign(defaultBucketOpts(), opts);\n        this.codec = bo.codec;\n        const sc = {};\n        this.stream = sc.name = opts.streamName ?? this.bucketName();\n        sc.retention = RetentionPolicy.Limits;\n        sc.max_msgs_per_subject = bo.history;\n        if (bo.maxBucketSize) {\n            bo.max_bytes = bo.maxBucketSize;\n        }\n        if (bo.max_bytes) {\n            sc.max_bytes = bo.max_bytes;\n        }\n        sc.max_msg_size = bo.maxValueSize;\n        sc.storage = bo.storage;\n        const location = opts.placementCluster ?? \"\";\n        if (location) {\n            opts.placement = {};\n            opts.placement.cluster = location;\n            opts.placement.tags = [];\n        }\n        if (opts.placement) {\n            sc.placement = opts.placement;\n        }\n        if (opts.republish) {\n            sc.republish = opts.republish;\n        }\n        if (opts.description) {\n            sc.description = opts.description;\n        }\n        if (opts.mirror) {\n            const mirror = Object.assign({}, opts.mirror);\n            if (!mirror.name.startsWith(kvPrefix)) {\n                mirror.name = `${kvPrefix}${mirror.name}`;\n            }\n            sc.mirror = mirror;\n            sc.mirror_direct = true;\n        } else if (opts.sources) {\n            const sources = opts.sources.map((s)=>{\n                const c = Object.assign({}, s);\n                if (!c.name.startsWith(kvPrefix)) {\n                    c.name = `${kvPrefix}${c.name}`;\n                }\n            });\n            sc.sources = sources;\n        } else {\n            sc.subjects = [\n                this.subjectForBucket()\n            ];\n        }\n        if (opts.metadata) {\n            sc.metadata = opts.metadata;\n        }\n        if (typeof opts.compression === \"boolean\") {\n            sc.compression = opts.compression ? StoreCompression.S2 : StoreCompression.None;\n        }\n        const nci = this.js.nc;\n        const have = nci.getServerVersion();\n        const discardNew = have ? compare(have, parseSemVer(\"2.7.2\")) >= 0 : false;\n        sc.discard = discardNew ? DiscardPolicy.New : DiscardPolicy.Old;\n        const { ok: direct, min } = nci.features.get(Feature.JS_ALLOW_DIRECT);\n        if (!direct && opts.allow_direct === true) {\n            const v = have ? `${have.major}.${have.minor}.${have.micro}` : \"unknown\";\n            return Promise.reject(new Error(`allow_direct is not available on server version ${v} - requires ${min}`));\n        }\n        opts.allow_direct = typeof opts.allow_direct === \"boolean\" ? opts.allow_direct : direct;\n        sc.allow_direct = opts.allow_direct;\n        this.direct = sc.allow_direct;\n        sc.num_replicas = bo.replicas;\n        if (bo.ttl) {\n            sc.max_age = nanos(bo.ttl);\n        }\n        sc.allow_rollup_hdrs = true;\n        let info;\n        try {\n            info = await this.jsm.streams.info(sc.name);\n            if (!info.config.allow_direct && this.direct === true) {\n                this.direct = false;\n            }\n        } catch (err) {\n            if (err.message === \"stream not found\") {\n                info = await this.jsm.streams.add(sc);\n            } else {\n                throw err;\n            }\n        }\n        this.initializePrefixes(info);\n    }\n    initializePrefixes(info) {\n        this._prefixLen = 0;\n        this.prefix = `$KV.${this.bucket}`;\n        this.useJsPrefix = this.js.apiPrefix !== \"$JS.API\";\n        const { mirror } = info.config;\n        if (mirror) {\n            let n = mirror.name;\n            if (n.startsWith(kvPrefix)) {\n                n = n.substring(kvPrefix.length);\n            }\n            if (mirror.external && mirror.external.api !== \"\") {\n                const mb = mirror.name.substring(kvPrefix.length);\n                this.useJsPrefix = false;\n                this.prefix = `$KV.${mb}`;\n                this.editPrefix = `${mirror.external.api}.$KV.${n}`;\n            } else {\n                this.editPrefix = this.prefix;\n            }\n        }\n    }\n    bucketName() {\n        return this.stream ?? `${kvPrefix}${this.bucket}`;\n    }\n    subjectForBucket() {\n        return `${this.prefix}.${this.bucket}.>`;\n    }\n    subjectForKey(k, edit = false) {\n        const builder = [];\n        if (edit) {\n            if (this.useJsPrefix) {\n                builder.push(this.js.apiPrefix);\n            }\n            if (this.editPrefix !== \"\") {\n                builder.push(this.editPrefix);\n            } else {\n                builder.push(this.prefix);\n            }\n        } else {\n            if (this.prefix) {\n                builder.push(this.prefix);\n            }\n        }\n        builder.push(k);\n        return builder.join(\".\");\n    }\n    fullKeyName(k) {\n        if (this.prefix !== \"\") {\n            return `${this.prefix}.${k}`;\n        }\n        return `${kvSubjectPrefix}.${this.bucket}.${k}`;\n    }\n    get prefixLen() {\n        if (this._prefixLen === 0) {\n            this._prefixLen = this.prefix.length + 1;\n        }\n        return this._prefixLen;\n    }\n    encodeKey(key) {\n        const chunks = [];\n        for (const t of key.split(\".\")){\n            switch(t){\n                case \">\":\n                case \"*\":\n                    chunks.push(t);\n                    break;\n                default:\n                    chunks.push(this.codec.key.encode(t));\n                    break;\n            }\n        }\n        return chunks.join(\".\");\n    }\n    decodeKey(ekey) {\n        const chunks = [];\n        for (const t of ekey.split(\".\")){\n            switch(t){\n                case \">\":\n                case \"*\":\n                    chunks.push(t);\n                    break;\n                default:\n                    chunks.push(this.codec.key.decode(t));\n                    break;\n            }\n        }\n        return chunks.join(\".\");\n    }\n    validateKey = validateKey;\n    validateSearchKey = validateSearchKey;\n    hasWildcards = hasWildcards;\n    close() {\n        return Promise.resolve();\n    }\n    dataLen(data, h) {\n        const slen = h ? h.get(JsHeaders.MessageSizeHdr) || \"\" : \"\";\n        if (slen !== \"\") {\n            return parseInt(slen, 10);\n        }\n        return data.length;\n    }\n    smToEntry(sm) {\n        return new KvStoredEntryImpl(this.bucket, this.prefixLen, sm);\n    }\n    jmToEntry(jm) {\n        const key = this.decodeKey(jm.subject.substring(this.prefixLen));\n        return new KvJsMsgEntryImpl(this.bucket, key, jm);\n    }\n    async create(k, data) {\n        let firstErr;\n        try {\n            const n = await this.put(k, data, {\n                previousSeq: 0\n            });\n            return Promise.resolve(n);\n        } catch (err) {\n            firstErr = err;\n            if (err?.api_error?.err_code !== 10071) {\n                return Promise.reject(err);\n            }\n        }\n        let rev = 0;\n        try {\n            const e = await this.get(k);\n            if (e?.operation === \"DEL\" || e?.operation === \"PURGE\") {\n                rev = e !== null ? e.revision : 0;\n                return this.update(k, data, rev);\n            } else {\n                return Promise.reject(firstErr);\n            }\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    update(k, data, version) {\n        if (version <= 0) {\n            throw new Error(\"version must be greater than 0\");\n        }\n        return this.put(k, data, {\n            previousSeq: version\n        });\n    }\n    async put(k, data, opts = {}) {\n        const ek = this.encodeKey(k);\n        this.validateKey(ek);\n        const o = {};\n        if (opts.previousSeq !== undefined) {\n            const h = headers();\n            o.headers = h;\n            h.set(PubHeaders.ExpectedLastSubjectSequenceHdr, `${opts.previousSeq}`);\n        }\n        try {\n            const pa = await this.js.publish(this.subjectForKey(ek, true), data, o);\n            return pa.seq;\n        } catch (err) {\n            const ne = err;\n            if (ne.isJetStreamError()) {\n                ne.message = ne.api_error?.description;\n                ne.code = `${ne.api_error?.code}`;\n                return Promise.reject(ne);\n            }\n            return Promise.reject(err);\n        }\n    }\n    async get(k, opts) {\n        const ek = this.encodeKey(k);\n        this.validateKey(ek);\n        let arg = {\n            last_by_subj: this.subjectForKey(ek)\n        };\n        if (opts && opts.revision > 0) {\n            arg = {\n                seq: opts.revision\n            };\n        }\n        let sm;\n        try {\n            if (this.direct) {\n                const direct = this.jsm.direct;\n                sm = await direct.getMessage(this.bucketName(), arg);\n            } else {\n                sm = await this.jsm.streams.getMessage(this.bucketName(), arg);\n            }\n            const ke = this.smToEntry(sm);\n            if (ke.key !== ek) {\n                return null;\n            }\n            return ke;\n        } catch (err) {\n            if (err.code === ErrorCode.JetStream404NoMessages) {\n                return null;\n            }\n            throw err;\n        }\n    }\n    purge(k) {\n        return this._deleteOrPurge(k, \"PURGE\");\n    }\n    delete(k) {\n        return this._deleteOrPurge(k, \"DEL\");\n    }\n    async purgeDeletes(olderMillis = 30 * 60 * 1000) {\n        const done = deferred();\n        const buf = [];\n        const i = await this.watch({\n            key: \">\",\n            initializedFn: ()=>{\n                done.resolve();\n            }\n        });\n        (async ()=>{\n            for await (const e of i){\n                if (e.operation === \"DEL\" || e.operation === \"PURGE\") {\n                    buf.push(e);\n                }\n            }\n        })().then();\n        await done;\n        i.stop();\n        const min = Date.now() - olderMillis;\n        const proms = buf.map((e)=>{\n            const subj = this.subjectForKey(e.key);\n            if (e.created.getTime() >= min) {\n                return this.jsm.streams.purge(this.stream, {\n                    filter: subj,\n                    keep: 1\n                });\n            } else {\n                return this.jsm.streams.purge(this.stream, {\n                    filter: subj,\n                    keep: 0\n                });\n            }\n        });\n        const purged = await Promise.all(proms);\n        purged.unshift({\n            success: true,\n            purged: 0\n        });\n        return purged.reduce((pv, cv)=>{\n            pv.purged += cv.purged;\n            return pv;\n        });\n    }\n    async _deleteOrPurge(k, op) {\n        if (!this.hasWildcards(k)) {\n            return this._doDeleteOrPurge(k, op);\n        }\n        const iter = await this.keys(k);\n        const buf = [];\n        for await (const k of iter){\n            buf.push(this._doDeleteOrPurge(k, op));\n            if (buf.length === 100) {\n                await Promise.all(buf);\n                buf.length = 0;\n            }\n        }\n        if (buf.length > 0) {\n            await Promise.all(buf);\n        }\n    }\n    async _doDeleteOrPurge(k, op) {\n        const ek = this.encodeKey(k);\n        this.validateKey(ek);\n        const h = headers();\n        h.set(kvOperationHdr, op);\n        if (op === \"PURGE\") {\n            h.set(JsHeaders.RollupHdr, JsHeaders.RollupValueSubject);\n        }\n        await this.js.publish(this.subjectForKey(ek, true), Empty, {\n            headers: h\n        });\n    }\n    _buildCC(k, content, opts = {}) {\n        const ek = this.encodeKey(k);\n        this.validateSearchKey(k);\n        let deliver_policy = DeliverPolicy.LastPerSubject;\n        if (content === KvWatchInclude.AllHistory) {\n            deliver_policy = DeliverPolicy.All;\n        }\n        if (content === KvWatchInclude.UpdatesOnly) {\n            deliver_policy = DeliverPolicy.New;\n        }\n        return Object.assign({\n            deliver_policy,\n            \"ack_policy\": AckPolicy.None,\n            \"filter_subject\": this.fullKeyName(ek),\n            \"flow_control\": true,\n            \"idle_heartbeat\": nanos(5 * 1000)\n        }, opts);\n    }\n    remove(k) {\n        return this.purge(k);\n    }\n    async history(opts = {}) {\n        const k = opts.key ?? \">\";\n        const qi = new QueuedIteratorImpl();\n        const co = {};\n        co.headers_only = opts.headers_only || false;\n        let fn;\n        fn = ()=>{\n            qi.stop();\n        };\n        let count = 0;\n        const cc = this._buildCC(k, KvWatchInclude.AllHistory, co);\n        const subj = cc.filter_subject;\n        const copts = consumerOpts(cc);\n        copts.bindStream(this.stream);\n        copts.orderedConsumer();\n        copts.callback((err, jm)=>{\n            if (err) {\n                qi.stop(err);\n                return;\n            }\n            if (jm) {\n                const e = this.jmToEntry(jm);\n                qi.push(e);\n                qi.received++;\n                if (fn && count > 0 && qi.received >= count || jm.info.pending === 0) {\n                    qi.push(fn);\n                    fn = undefined;\n                }\n            }\n        });\n        const sub = await this.js.subscribe(subj, copts);\n        if (fn) {\n            const { info: { last } } = sub;\n            const expect = last.num_pending + last.delivered.consumer_seq;\n            if (expect === 0 || qi.received >= expect) {\n                try {\n                    fn();\n                } catch (err) {\n                    qi.stop(err);\n                } finally{\n                    fn = undefined;\n                }\n            } else {\n                count = expect;\n            }\n        }\n        qi._data = sub;\n        qi.iterClosed.then(()=>{\n            sub.unsubscribe();\n        });\n        sub.closed.then(()=>{\n            qi.stop();\n        }).catch((err)=>{\n            qi.stop(err);\n        });\n        return qi;\n    }\n    async watch(opts = {}) {\n        const k = opts.key ?? \">\";\n        const qi = new QueuedIteratorImpl();\n        const co = {};\n        co.headers_only = opts.headers_only || false;\n        let content = KvWatchInclude.LastValue;\n        if (opts.include === KvWatchInclude.AllHistory) {\n            content = KvWatchInclude.AllHistory;\n        } else if (opts.include === KvWatchInclude.UpdatesOnly) {\n            content = KvWatchInclude.UpdatesOnly;\n        }\n        const ignoreDeletes = opts.ignoreDeletes === true;\n        let fn = opts.initializedFn;\n        let count = 0;\n        const cc = this._buildCC(k, content, co);\n        const subj = cc.filter_subject;\n        const copts = consumerOpts(cc);\n        copts.bindStream(this.stream);\n        copts.orderedConsumer();\n        copts.callback((err, jm)=>{\n            if (err) {\n                qi.stop(err);\n                return;\n            }\n            if (jm) {\n                const e = this.jmToEntry(jm);\n                if (ignoreDeletes && e.operation === \"DEL\") {\n                    return;\n                }\n                qi.push(e);\n                qi.received++;\n                if (fn && (count > 0 && qi.received >= count || jm.info.pending === 0)) {\n                    qi.push(fn);\n                    fn = undefined;\n                }\n            }\n        });\n        const sub = await this.js.subscribe(subj, copts);\n        if (fn) {\n            const { info: { last } } = sub;\n            const expect = last.num_pending + last.delivered.consumer_seq;\n            if (expect === 0 || qi.received >= expect) {\n                try {\n                    fn();\n                } catch (err) {\n                    qi.stop(err);\n                } finally{\n                    fn = undefined;\n                }\n            } else {\n                count = expect;\n            }\n        }\n        qi._data = sub;\n        qi.iterClosed.then(()=>{\n            sub.unsubscribe();\n        });\n        sub.closed.then(()=>{\n            qi.stop();\n        }).catch((err)=>{\n            qi.stop(err);\n        });\n        return qi;\n    }\n    async keys(k = \">\") {\n        const keys = new QueuedIteratorImpl();\n        const cc = this._buildCC(k, KvWatchInclude.LastValue, {\n            headers_only: true\n        });\n        const subj = cc.filter_subject;\n        const copts = consumerOpts(cc);\n        copts.bindStream(this.stream);\n        copts.orderedConsumer();\n        const sub = await this.js.subscribe(subj, copts);\n        (async ()=>{\n            for await (const jm of sub){\n                const op = jm.headers?.get(kvOperationHdr);\n                if (op !== \"DEL\" && op !== \"PURGE\") {\n                    const key = this.decodeKey(jm.subject.substring(this.prefixLen));\n                    keys.push(key);\n                }\n                if (jm.info.pending === 0) {\n                    sub.unsubscribe();\n                }\n            }\n        })().then(()=>{\n            keys.stop();\n        }).catch((err)=>{\n            keys.stop(err);\n        });\n        const si = sub;\n        if (si.info.last.num_pending === 0) {\n            sub.unsubscribe();\n        }\n        return keys;\n    }\n    purgeBucket(opts) {\n        return this.jsm.streams.purge(this.bucketName(), opts);\n    }\n    destroy() {\n        return this.jsm.streams.delete(this.bucketName());\n    }\n    async status() {\n        const nc = this.js.nc;\n        const cluster = nc.info?.cluster ?? \"\";\n        const bn = this.bucketName();\n        const si = await this.jsm.streams.info(bn);\n        return new KvStatusImpl(si, cluster);\n    }\n}\nclass KvStatusImpl {\n    si;\n    cluster;\n    constructor(si, cluster = \"\"){\n        this.si = si;\n        this.cluster = cluster;\n    }\n    get bucket() {\n        return this.si.config.name.startsWith(kvPrefix) ? this.si.config.name.substring(kvPrefix.length) : this.si.config.name;\n    }\n    get values() {\n        return this.si.state.messages;\n    }\n    get history() {\n        return this.si.config.max_msgs_per_subject;\n    }\n    get ttl() {\n        return millis(this.si.config.max_age);\n    }\n    get bucket_location() {\n        return this.cluster;\n    }\n    get backingStore() {\n        return this.si.config.storage;\n    }\n    get storage() {\n        return this.si.config.storage;\n    }\n    get replicas() {\n        return this.si.config.num_replicas;\n    }\n    get description() {\n        return this.si.config.description ?? \"\";\n    }\n    get maxBucketSize() {\n        return this.si.config.max_bytes;\n    }\n    get maxValueSize() {\n        return this.si.config.max_msg_size;\n    }\n    get max_bytes() {\n        return this.si.config.max_bytes;\n    }\n    get placement() {\n        return this.si.config.placement || {\n            cluster: \"\",\n            tags: []\n        };\n    }\n    get placementCluster() {\n        return this.si.config.placement?.cluster ?? \"\";\n    }\n    get republish() {\n        return this.si.config.republish ?? {\n            src: \"\",\n            dest: \"\"\n        };\n    }\n    get streamInfo() {\n        return this.si;\n    }\n    get size() {\n        return this.si.state.bytes;\n    }\n    get metadata() {\n        return this.si.config.metadata ?? {};\n    }\n    get compression() {\n        if (this.si.config.compression) {\n            return this.si.config.compression !== StoreCompression.None;\n        }\n        return false;\n    }\n}\nconst digestType = \"SHA-256=\";\nfunction objectStoreStreamName(bucket) {\n    validateBucket(bucket);\n    return `${osPrefix}${bucket}`;\n}\nfunction objectStoreBucketName(stream) {\n    if (stream.startsWith(osPrefix)) {\n        return stream.substring(4);\n    }\n    return stream;\n}\nclass ObjectStoreStatusImpl {\n    si;\n    backingStore;\n    constructor(si){\n        this.si = si;\n        this.backingStore = \"JetStream\";\n    }\n    get bucket() {\n        return objectStoreBucketName(this.si.config.name);\n    }\n    get description() {\n        return this.si.config.description ?? \"\";\n    }\n    get ttl() {\n        return this.si.config.max_age;\n    }\n    get storage() {\n        return this.si.config.storage;\n    }\n    get replicas() {\n        return this.si.config.num_replicas;\n    }\n    get sealed() {\n        return this.si.config.sealed;\n    }\n    get size() {\n        return this.si.state.bytes;\n    }\n    get streamInfo() {\n        return this.si;\n    }\n    get metadata() {\n        return this.si.config.metadata;\n    }\n    get compression() {\n        if (this.si.config.compression) {\n            return this.si.config.compression !== StoreCompression.None;\n        }\n        return false;\n    }\n}\nclass StreamAPIImpl extends BaseApiClient {\n    constructor(nc, opts){\n        super(nc, opts);\n    }\n    checkStreamConfigVersions(cfg) {\n        const nci = this.nc;\n        if (cfg.metadata) {\n            const { min, ok } = nci.features.get(Feature.JS_STREAM_CONSUMER_METADATA);\n            if (!ok) {\n                throw new Error(`stream 'metadata' requires server ${min}`);\n            }\n        }\n        if (cfg.first_seq) {\n            const { min, ok } = nci.features.get(Feature.JS_STREAM_FIRST_SEQ);\n            if (!ok) {\n                throw new Error(`stream 'first_seq' requires server ${min}`);\n            }\n        }\n        if (cfg.subject_transform) {\n            const { min, ok } = nci.features.get(Feature.JS_STREAM_SUBJECT_TRANSFORM);\n            if (!ok) {\n                throw new Error(`stream 'subject_transform' requires server ${min}`);\n            }\n        }\n        if (cfg.compression) {\n            const { min, ok } = nci.features.get(Feature.JS_STREAM_COMPRESSION);\n            if (!ok) {\n                throw new Error(`stream 'compression' requires server ${min}`);\n            }\n        }\n        if (cfg.consumer_limits) {\n            const { min, ok } = nci.features.get(Feature.JS_DEFAULT_CONSUMER_LIMITS);\n            if (!ok) {\n                throw new Error(`stream 'consumer_limits' requires server ${min}`);\n            }\n        }\n        function validateStreamSource(context, src) {\n            const count = src.subject_transforms?.length || 0;\n            if (count > 0) {\n                const { min, ok } = nci.features.get(Feature.JS_STREAM_SOURCE_SUBJECT_TRANSFORM);\n                if (!ok) {\n                    throw new Error(`${context} 'subject_transforms' requires server ${min}`);\n                }\n            }\n        }\n        if (cfg.sources) {\n            cfg.sources.forEach((src)=>{\n                validateStreamSource(\"stream sources\", src);\n            });\n        }\n        if (cfg.mirror) {\n            validateStreamSource(\"stream mirror\", cfg.mirror);\n        }\n    }\n    async add(cfg = {}) {\n        this.checkStreamConfigVersions(cfg);\n        validateStreamName(cfg.name);\n        cfg.mirror = convertStreamSourceDomain(cfg.mirror);\n        cfg.sources = cfg.sources?.map(convertStreamSourceDomain);\n        const r = await this._request(`${this.prefix}.STREAM.CREATE.${cfg.name}`, cfg);\n        const si = r;\n        this._fixInfo(si);\n        return si;\n    }\n    async delete(stream) {\n        validateStreamName(stream);\n        const r = await this._request(`${this.prefix}.STREAM.DELETE.${stream}`);\n        const cr = r;\n        return cr.success;\n    }\n    async update(name, cfg = {}) {\n        if (typeof name === \"object\") {\n            const sc = name;\n            name = sc.name;\n            cfg = sc;\n            console.trace(`\\u001B[33m >> streams.update(config: StreamConfig) api changed to streams.update(name: string, config: StreamUpdateConfig) - this shim will be removed - update your code.  \\u001B[0m`);\n        }\n        this.checkStreamConfigVersions(cfg);\n        validateStreamName(name);\n        const old = await this.info(name);\n        const update = Object.assign(old.config, cfg);\n        update.mirror = convertStreamSourceDomain(update.mirror);\n        update.sources = update.sources?.map(convertStreamSourceDomain);\n        const r = await this._request(`${this.prefix}.STREAM.UPDATE.${name}`, update);\n        const si = r;\n        this._fixInfo(si);\n        return si;\n    }\n    async info(name, data) {\n        validateStreamName(name);\n        const subj = `${this.prefix}.STREAM.INFO.${name}`;\n        const r = await this._request(subj, data);\n        let si = r;\n        let { total, limit } = si;\n        let have = si.state.subjects ? Object.getOwnPropertyNames(si.state.subjects).length : 1;\n        if (total && total > have) {\n            const infos = [\n                si\n            ];\n            const paged = data || {};\n            let i = 0;\n            while(total > have){\n                i++;\n                paged.offset = limit * i;\n                const r = await this._request(subj, paged);\n                total = r.total;\n                infos.push(r);\n                const count = Object.getOwnPropertyNames(r.state.subjects).length;\n                have += count;\n                if (count < limit) {\n                    break;\n                }\n            }\n            let subjects = {};\n            for(let i = 0; i < infos.length; i++){\n                si = infos[i];\n                if (si.state.subjects) {\n                    subjects = Object.assign(subjects, si.state.subjects);\n                }\n            }\n            si.offset = 0;\n            si.total = 0;\n            si.limit = 0;\n            si.state.subjects = subjects;\n        }\n        this._fixInfo(si);\n        return si;\n    }\n    list(subject = \"\") {\n        const payload = subject?.length ? {\n            subject\n        } : {};\n        const listerFilter = (v)=>{\n            const slr = v;\n            slr.streams.forEach((si)=>{\n                this._fixInfo(si);\n            });\n            return slr.streams;\n        };\n        const subj = `${this.prefix}.STREAM.LIST`;\n        return new ListerImpl(subj, listerFilter, this, payload);\n    }\n    _fixInfo(si) {\n        si.config.sealed = si.config.sealed || false;\n        si.config.deny_delete = si.config.deny_delete || false;\n        si.config.deny_purge = si.config.deny_purge || false;\n        si.config.allow_rollup_hdrs = si.config.allow_rollup_hdrs || false;\n    }\n    async purge(name, opts) {\n        if (opts) {\n            const { keep, seq } = opts;\n            if (typeof keep === \"number\" && typeof seq === \"number\") {\n                throw new Error(\"can specify one of keep or seq\");\n            }\n        }\n        validateStreamName(name);\n        const v = await this._request(`${this.prefix}.STREAM.PURGE.${name}`, opts);\n        return v;\n    }\n    async deleteMessage(stream, seq, erase = true) {\n        validateStreamName(stream);\n        const dr = {\n            seq\n        };\n        if (!erase) {\n            dr.no_erase = true;\n        }\n        const r = await this._request(`${this.prefix}.STREAM.MSG.DELETE.${stream}`, dr);\n        const cr = r;\n        return cr.success;\n    }\n    async getMessage(stream, query) {\n        validateStreamName(stream);\n        const r = await this._request(`${this.prefix}.STREAM.MSG.GET.${stream}`, query);\n        const sm = r;\n        return new StoredMsgImpl(sm);\n    }\n    find(subject) {\n        return this.findStream(subject);\n    }\n    listKvs() {\n        const filter = (v)=>{\n            const slr = v;\n            const kvStreams = slr.streams.filter((v)=>{\n                return v.config.name.startsWith(kvPrefix);\n            });\n            kvStreams.forEach((si)=>{\n                this._fixInfo(si);\n            });\n            let cluster = \"\";\n            if (kvStreams.length) {\n                cluster = this.nc.info?.cluster ?? \"\";\n            }\n            const status = kvStreams.map((si)=>{\n                return new KvStatusImpl(si, cluster);\n            });\n            return status;\n        };\n        const subj = `${this.prefix}.STREAM.LIST`;\n        return new ListerImpl(subj, filter, this);\n    }\n    listObjectStores() {\n        const filter = (v)=>{\n            const slr = v;\n            const objStreams = slr.streams.filter((v)=>{\n                return v.config.name.startsWith(osPrefix);\n            });\n            objStreams.forEach((si)=>{\n                this._fixInfo(si);\n            });\n            const status = objStreams.map((si)=>{\n                return new ObjectStoreStatusImpl(si);\n            });\n            return status;\n        };\n        const subj = `${this.prefix}.STREAM.LIST`;\n        return new ListerImpl(subj, filter, this);\n    }\n    names(subject = \"\") {\n        const payload = subject?.length ? {\n            subject\n        } : {};\n        const listerFilter = (v)=>{\n            const sr = v;\n            return sr.streams;\n        };\n        const subj = `${this.prefix}.STREAM.NAMES`;\n        return new ListerImpl(subj, listerFilter, this, payload);\n    }\n    async get(name) {\n        const si = await this.info(name);\n        return Promise.resolve(new StreamImpl(this, si));\n    }\n}\nclass StoredMsgImpl {\n    _header;\n    smr;\n    static jc;\n    constructor(smr){\n        this.smr = smr;\n    }\n    get subject() {\n        return this.smr.message.subject;\n    }\n    get seq() {\n        return this.smr.message.seq;\n    }\n    get timestamp() {\n        return this.smr.message.time;\n    }\n    get time() {\n        return new Date(Date.parse(this.timestamp));\n    }\n    get data() {\n        return this.smr.message.data ? this._parse(this.smr.message.data) : Empty;\n    }\n    get header() {\n        if (!this._header) {\n            if (this.smr.message.hdrs) {\n                const hd = this._parse(this.smr.message.hdrs);\n                this._header = MsgHdrsImpl.decode(hd);\n            } else {\n                this._header = headers();\n            }\n        }\n        return this._header;\n    }\n    _parse(s) {\n        const bs = atob(s);\n        const len = bs.length;\n        const bytes = new Uint8Array(len);\n        for(let i = 0; i < len; i++){\n            bytes[i] = bs.charCodeAt(i);\n        }\n        return bytes;\n    }\n    json(reviver) {\n        return JSONCodec(reviver).decode(this.data);\n    }\n    string() {\n        return TD.decode(this.data);\n    }\n}\nclass StreamsImpl {\n    api;\n    constructor(api){\n        this.api = api;\n    }\n    get(stream) {\n        return this.api.info(stream).then((si)=>{\n            return new StreamImpl(this.api, si);\n        });\n    }\n}\nclass KvStoredEntryImpl {\n    bucket;\n    sm;\n    prefixLen;\n    constructor(bucket, prefixLen, sm){\n        this.bucket = bucket;\n        this.prefixLen = prefixLen;\n        this.sm = sm;\n    }\n    get key() {\n        return this.sm.subject.substring(this.prefixLen);\n    }\n    get value() {\n        return this.sm.data;\n    }\n    get delta() {\n        return 0;\n    }\n    get created() {\n        return this.sm.time;\n    }\n    get revision() {\n        return this.sm.seq;\n    }\n    get operation() {\n        return this.sm.header.get(kvOperationHdr) || \"PUT\";\n    }\n    get length() {\n        const slen = this.sm.header.get(JsHeaders.MessageSizeHdr) || \"\";\n        if (slen !== \"\") {\n            return parseInt(slen, 10);\n        }\n        return this.sm.data.length;\n    }\n    json() {\n        return this.sm.json();\n    }\n    string() {\n        return this.sm.string();\n    }\n}\nclass KvJsMsgEntryImpl {\n    bucket;\n    key;\n    sm;\n    constructor(bucket, key, sm){\n        this.bucket = bucket;\n        this.key = key;\n        this.sm = sm;\n    }\n    get value() {\n        return this.sm.data;\n    }\n    get created() {\n        return new Date(millis(this.sm.info.timestampNanos));\n    }\n    get revision() {\n        return this.sm.seq;\n    }\n    get operation() {\n        return this.sm.headers?.get(kvOperationHdr) || \"PUT\";\n    }\n    get delta() {\n        return this.sm.info.pending;\n    }\n    get length() {\n        const slen = this.sm.headers?.get(JsHeaders.MessageSizeHdr) || \"\";\n        if (slen !== \"\") {\n            return parseInt(slen, 10);\n        }\n        return this.sm.data.length;\n    }\n    json() {\n        return this.sm.json();\n    }\n    string() {\n        return this.sm.string();\n    }\n}\nclass ObjectInfoImpl {\n    info;\n    hdrs;\n    constructor(oi){\n        this.info = oi;\n    }\n    get name() {\n        return this.info.name;\n    }\n    get description() {\n        return this.info.description ?? \"\";\n    }\n    get headers() {\n        if (!this.hdrs) {\n            this.hdrs = MsgHdrsImpl.fromRecord(this.info.headers || {});\n        }\n        return this.hdrs;\n    }\n    get options() {\n        return this.info.options;\n    }\n    get bucket() {\n        return this.info.bucket;\n    }\n    get chunks() {\n        return this.info.chunks;\n    }\n    get deleted() {\n        return this.info.deleted ?? false;\n    }\n    get digest() {\n        return this.info.digest;\n    }\n    get mtime() {\n        return this.info.mtime;\n    }\n    get nuid() {\n        return this.info.nuid;\n    }\n    get size() {\n        return this.info.size;\n    }\n    get revision() {\n        return this.info.revision;\n    }\n    get metadata() {\n        return this.info.metadata || {};\n    }\n    isLink() {\n        return this.info.options?.link !== undefined && this.info.options?.link !== null;\n    }\n}\nfunction toServerObjectStoreMeta(meta) {\n    const v = {\n        name: meta.name,\n        description: meta.description ?? \"\",\n        options: meta.options,\n        metadata: meta.metadata\n    };\n    if (meta.headers) {\n        const mhi = meta.headers;\n        v.headers = mhi.toRecord();\n    }\n    return v;\n}\nfunction emptyReadableStream() {\n    return new ReadableStream({\n        pull (c) {\n            c.enqueue(new Uint8Array(0));\n            c.close();\n        }\n    });\n}\nclass ObjectStoreImpl {\n    jsm;\n    js;\n    stream;\n    name;\n    constructor(name, jsm, js){\n        this.name = name;\n        this.jsm = jsm;\n        this.js = js;\n    }\n    _checkNotEmpty(name) {\n        if (!name || name.length === 0) {\n            return {\n                name,\n                error: new Error(\"name cannot be empty\")\n            };\n        }\n        return {\n            name\n        };\n    }\n    async info(name) {\n        const info = await this.rawInfo(name);\n        return info ? new ObjectInfoImpl(info) : null;\n    }\n    async list() {\n        const buf = [];\n        const iter = await this.watch({\n            ignoreDeletes: true,\n            includeHistory: true\n        });\n        for await (const info of iter){\n            if (info === null) {\n                break;\n            }\n            buf.push(info);\n        }\n        return Promise.resolve(buf);\n    }\n    async rawInfo(name) {\n        const { name: obj, error } = this._checkNotEmpty(name);\n        if (error) {\n            return Promise.reject(error);\n        }\n        const meta = this._metaSubject(obj);\n        try {\n            const m = await this.jsm.streams.getMessage(this.stream, {\n                last_by_subj: meta\n            });\n            const jc = JSONCodec();\n            const soi = jc.decode(m.data);\n            soi.revision = m.seq;\n            return soi;\n        } catch (err) {\n            if (err.code === \"404\") {\n                return null;\n            }\n            return Promise.reject(err);\n        }\n    }\n    async _si(opts) {\n        try {\n            return await this.jsm.streams.info(this.stream, opts);\n        } catch (err) {\n            const nerr = err;\n            if (nerr.code === \"404\") {\n                return null;\n            }\n            return Promise.reject(err);\n        }\n    }\n    async seal() {\n        let info = await this._si();\n        if (info === null) {\n            return Promise.reject(new Error(\"object store not found\"));\n        }\n        info.config.sealed = true;\n        info = await this.jsm.streams.update(this.stream, info.config);\n        return Promise.resolve(new ObjectStoreStatusImpl(info));\n    }\n    async status(opts) {\n        const info = await this._si(opts);\n        if (info === null) {\n            return Promise.reject(new Error(\"object store not found\"));\n        }\n        return Promise.resolve(new ObjectStoreStatusImpl(info));\n    }\n    destroy() {\n        return this.jsm.streams.delete(this.stream);\n    }\n    async _put(meta, rs, opts) {\n        const jsopts = this.js.getOptions();\n        opts = opts || {\n            timeout: jsopts.timeout\n        };\n        opts.timeout = opts.timeout || jsopts.timeout;\n        opts.previousRevision = opts.previousRevision ?? undefined;\n        const { timeout, previousRevision } = opts;\n        const si = this.js.nc.info;\n        const maxPayload = si?.max_payload || 1024;\n        meta = meta || {};\n        meta.options = meta.options || {};\n        let maxChunk = meta.options?.max_chunk_size || 128 * 1024;\n        maxChunk = maxChunk > maxPayload ? maxPayload : maxChunk;\n        meta.options.max_chunk_size = maxChunk;\n        const old = await this.info(meta.name);\n        const { name: n, error } = this._checkNotEmpty(meta.name);\n        if (error) {\n            return Promise.reject(error);\n        }\n        const id = nuid.next();\n        const chunkSubj = this._chunkSubject(id);\n        const metaSubj = this._metaSubject(n);\n        const info = Object.assign({\n            bucket: this.name,\n            nuid: id,\n            size: 0,\n            chunks: 0\n        }, toServerObjectStoreMeta(meta));\n        const d = deferred();\n        const proms = [];\n        const db = new DataBuffer();\n        try {\n            const reader = rs ? rs.getReader() : null;\n            const sha = new SHA256();\n            while(true){\n                const { done, value } = reader ? await reader.read() : {\n                    done: true,\n                    value: undefined\n                };\n                if (done) {\n                    if (db.size() > 0) {\n                        const payload = db.drain();\n                        sha.update(payload);\n                        info.chunks++;\n                        info.size += payload.length;\n                        proms.push(this.js.publish(chunkSubj, payload, {\n                            timeout\n                        }));\n                    }\n                    await Promise.all(proms);\n                    proms.length = 0;\n                    info.mtime = new Date().toISOString();\n                    const digest = sha.digest(\"base64\");\n                    const pad = digest.length % 3;\n                    const padding = pad > 0 ? \"=\".repeat(pad) : \"\";\n                    info.digest = `${digestType}${digest}${padding}`;\n                    info.deleted = false;\n                    const h = headers();\n                    if (typeof previousRevision === \"number\") {\n                        h.set(PubHeaders.ExpectedLastSubjectSequenceHdr, `${previousRevision}`);\n                    }\n                    h.set(JsHeaders.RollupHdr, JsHeaders.RollupValueSubject);\n                    const pa = await this.js.publish(metaSubj, JSONCodec().encode(info), {\n                        headers: h,\n                        timeout\n                    });\n                    info.revision = pa.seq;\n                    if (old) {\n                        try {\n                            await this.jsm.streams.purge(this.stream, {\n                                filter: `$O.${this.name}.C.${old.nuid}`\n                            });\n                        } catch (_err) {}\n                    }\n                    d.resolve(new ObjectInfoImpl(info));\n                    break;\n                }\n                if (value) {\n                    db.fill(value);\n                    while(db.size() > maxChunk){\n                        info.chunks++;\n                        info.size += maxChunk;\n                        const payload = db.drain(meta.options.max_chunk_size);\n                        sha.update(payload);\n                        proms.push(this.js.publish(chunkSubj, payload, {\n                            timeout\n                        }));\n                    }\n                }\n            }\n        } catch (err) {\n            await this.jsm.streams.purge(this.stream, {\n                filter: chunkSubj\n            });\n            d.reject(err);\n        }\n        return d;\n    }\n    putBlob(meta, data, opts) {\n        function readableStreamFrom(data) {\n            return new ReadableStream({\n                pull (controller) {\n                    controller.enqueue(data);\n                    controller.close();\n                }\n            });\n        }\n        if (data === null) {\n            data = new Uint8Array(0);\n        }\n        return this.put(meta, readableStreamFrom(data), opts);\n    }\n    put(meta, rs, opts) {\n        if (meta?.options?.link) {\n            return Promise.reject(new Error(\"link cannot be set when putting the object in bucket\"));\n        }\n        return this._put(meta, rs, opts);\n    }\n    async getBlob(name) {\n        async function fromReadableStream(rs) {\n            const buf = new DataBuffer();\n            const reader = rs.getReader();\n            while(true){\n                const { done, value } = await reader.read();\n                if (done) {\n                    return buf.drain();\n                }\n                if (value && value.length) {\n                    buf.fill(value);\n                }\n            }\n        }\n        const r = await this.get(name);\n        if (r === null) {\n            return Promise.resolve(null);\n        }\n        const vs = await Promise.all([\n            r.error,\n            fromReadableStream(r.data)\n        ]);\n        if (vs[0]) {\n            return Promise.reject(vs[0]);\n        } else {\n            return Promise.resolve(vs[1]);\n        }\n    }\n    async get(name) {\n        const info = await this.rawInfo(name);\n        if (info === null) {\n            return Promise.resolve(null);\n        }\n        if (info.deleted) {\n            return Promise.resolve(null);\n        }\n        if (info.options && info.options.link) {\n            const ln = info.options.link.name || \"\";\n            if (ln === \"\") {\n                throw new Error(\"link is a bucket\");\n            }\n            const os = info.options.link.bucket !== this.name ? await ObjectStoreImpl.create(this.js, info.options.link.bucket) : this;\n            return os.get(ln);\n        }\n        const d = deferred();\n        const r = {\n            info: new ObjectInfoImpl(info),\n            error: d\n        };\n        if (info.size === 0) {\n            r.data = emptyReadableStream();\n            d.resolve(null);\n            return Promise.resolve(r);\n        }\n        let controller;\n        const oc = consumerOpts();\n        oc.orderedConsumer();\n        const sha = new SHA256();\n        const subj = `$O.${this.name}.C.${info.nuid}`;\n        const sub = await this.js.subscribe(subj, oc);\n        (async ()=>{\n            for await (const jm of sub){\n                if (jm.data.length > 0) {\n                    sha.update(jm.data);\n                    controller.enqueue(jm.data);\n                }\n                if (jm.info.pending === 0) {\n                    const hash = sha.digest(\"base64\");\n                    const pad = hash.length % 3;\n                    const padding = pad > 0 ? \"=\".repeat(pad) : \"\";\n                    const digest = `${digestType}${hash}${padding}`;\n                    if (digest !== info.digest) {\n                        controller.error(new Error(`received a corrupt object, digests do not match received: ${info.digest} calculated ${digest}`));\n                    } else {\n                        controller.close();\n                    }\n                    sub.unsubscribe();\n                }\n            }\n        })().then(()=>{\n            d.resolve();\n        }).catch((err)=>{\n            controller.error(err);\n            d.reject(err);\n        });\n        r.data = new ReadableStream({\n            start (c) {\n                controller = c;\n            },\n            cancel () {\n                sub.unsubscribe();\n            }\n        });\n        return r;\n    }\n    linkStore(name, bucket) {\n        if (!(bucket instanceof ObjectStoreImpl)) {\n            return Promise.reject(\"bucket required\");\n        }\n        const osi = bucket;\n        const { name: n, error } = this._checkNotEmpty(name);\n        if (error) {\n            return Promise.reject(error);\n        }\n        const meta = {\n            name: n,\n            options: {\n                link: {\n                    bucket: osi.name\n                }\n            }\n        };\n        return this._put(meta, null);\n    }\n    async link(name, info) {\n        const { name: n, error } = this._checkNotEmpty(name);\n        if (error) {\n            return Promise.reject(error);\n        }\n        if (info.deleted) {\n            return Promise.reject(new Error(\"src object is deleted\"));\n        }\n        if (info.isLink()) {\n            return Promise.reject(new Error(\"src object is a link\"));\n        }\n        const dest = await this.rawInfo(name);\n        if (dest !== null && !dest.deleted) {\n            return Promise.reject(new Error(\"an object already exists with that name\"));\n        }\n        const link = {\n            bucket: info.bucket,\n            name: info.name\n        };\n        const mm = {\n            name: n,\n            bucket: info.bucket,\n            options: {\n                link: link\n            }\n        };\n        await this.js.publish(this._metaSubject(name), JSON.stringify(mm));\n        const i = await this.info(name);\n        return Promise.resolve(i);\n    }\n    async delete(name) {\n        const info = await this.rawInfo(name);\n        if (info === null) {\n            return Promise.resolve({\n                purged: 0,\n                success: false\n            });\n        }\n        info.deleted = true;\n        info.size = 0;\n        info.chunks = 0;\n        info.digest = \"\";\n        const jc = JSONCodec();\n        const h = headers();\n        h.set(JsHeaders.RollupHdr, JsHeaders.RollupValueSubject);\n        await this.js.publish(this._metaSubject(info.name), jc.encode(info), {\n            headers: h\n        });\n        return this.jsm.streams.purge(this.stream, {\n            filter: this._chunkSubject(info.nuid)\n        });\n    }\n    async update(name, meta = {}) {\n        const info = await this.rawInfo(name);\n        if (info === null) {\n            return Promise.reject(new Error(\"object not found\"));\n        }\n        if (info.deleted) {\n            return Promise.reject(new Error(\"cannot update meta for a deleted object\"));\n        }\n        meta.name = meta.name ?? info.name;\n        const { name: n, error } = this._checkNotEmpty(meta.name);\n        if (error) {\n            return Promise.reject(error);\n        }\n        if (name !== meta.name) {\n            const i = await this.info(meta.name);\n            if (i && !i.deleted) {\n                return Promise.reject(new Error(\"an object already exists with that name\"));\n            }\n        }\n        meta.name = n;\n        const ii = Object.assign({}, info, toServerObjectStoreMeta(meta));\n        const ack = await this.js.publish(this._metaSubject(ii.name), JSON.stringify(ii));\n        if (name !== meta.name) {\n            await this.jsm.streams.purge(this.stream, {\n                filter: this._metaSubject(name)\n            });\n        }\n        return Promise.resolve(ack);\n    }\n    async watch(opts = {}) {\n        opts.includeHistory = opts.includeHistory ?? false;\n        opts.ignoreDeletes = opts.ignoreDeletes ?? false;\n        let initialized = false;\n        const qi = new QueuedIteratorImpl();\n        const subj = this._metaSubjectAll();\n        try {\n            await this.jsm.streams.getMessage(this.stream, {\n                last_by_subj: subj\n            });\n        } catch (err) {\n            if (err.code === \"404\") {\n                qi.push(null);\n                initialized = true;\n            } else {\n                qi.stop(err);\n            }\n        }\n        const jc = JSONCodec();\n        const copts = consumerOpts();\n        copts.orderedConsumer();\n        if (opts.includeHistory) {\n            copts.deliverLastPerSubject();\n        } else {\n            initialized = true;\n            copts.deliverNew();\n        }\n        copts.callback((err, jm)=>{\n            if (err) {\n                qi.stop(err);\n                return;\n            }\n            if (jm !== null) {\n                const oi = jc.decode(jm.data);\n                if (oi.deleted && opts.ignoreDeletes === true) {} else {\n                    qi.push(oi);\n                }\n                if (jm.info?.pending === 0 && !initialized) {\n                    initialized = true;\n                    qi.push(null);\n                }\n            }\n        });\n        const sub = await this.js.subscribe(subj, copts);\n        qi._data = sub;\n        qi.iterClosed.then(()=>{\n            sub.unsubscribe();\n        });\n        sub.closed.then(()=>{\n            qi.stop();\n        }).catch((err)=>{\n            qi.stop(err);\n        });\n        return qi;\n    }\n    _chunkSubject(id) {\n        return `$O.${this.name}.C.${id}`;\n    }\n    _metaSubject(n) {\n        return `$O.${this.name}.M.${Base64UrlPaddedCodec.encode(n)}`;\n    }\n    _metaSubjectAll() {\n        return `$O.${this.name}.M.>`;\n    }\n    async init(opts = {}) {\n        try {\n            this.stream = objectStoreStreamName(this.name);\n        } catch (err) {\n            return Promise.reject(err);\n        }\n        const max_age = opts?.ttl || 0;\n        delete opts.ttl;\n        const sc = Object.assign({\n            max_age\n        }, opts);\n        sc.name = this.stream;\n        sc.allow_direct = true;\n        sc.allow_rollup_hdrs = true;\n        sc.discard = DiscardPolicy.New;\n        sc.subjects = [\n            `$O.${this.name}.C.>`,\n            `$O.${this.name}.M.>`\n        ];\n        if (opts.placement) {\n            sc.placement = opts.placement;\n        }\n        if (opts.metadata) {\n            sc.metadata = opts.metadata;\n        }\n        if (typeof opts.compression === \"boolean\") {\n            sc.compression = opts.compression ? StoreCompression.S2 : StoreCompression.None;\n        }\n        try {\n            await this.jsm.streams.info(sc.name);\n        } catch (err) {\n            if (err.message === \"stream not found\") {\n                await this.jsm.streams.add(sc);\n            }\n        }\n    }\n    static async create(js, name, opts = {}) {\n        const jsm = await js.jetstreamManager();\n        const os = new ObjectStoreImpl(name, jsm, js);\n        await os.init(opts);\n        return Promise.resolve(os);\n    }\n}\nclass ViewsImpl {\n    js;\n    jsm;\n    constructor(js){\n        this.js = js;\n    }\n    kv(name, opts = {}) {\n        const jsi = this.js;\n        const { ok, min } = jsi.nc.features.get(Feature.JS_KV);\n        if (!ok) {\n            return Promise.reject(new Error(`kv is only supported on servers ${min} or better`));\n        }\n        if (opts.bindOnly) {\n            return Bucket.bind(this.js, name);\n        }\n        return Bucket.create(this.js, name, opts);\n    }\n    os(name, opts = {}) {\n        if (typeof crypto?.subtle?.digest !== \"function\") {\n            return Promise.reject(new Error(\"objectstore: unable to calculate hashes - crypto.subtle.digest with sha256 support is required\"));\n        }\n        const jsi = this.js;\n        const { ok, min } = jsi.nc.features.get(Feature.JS_OBJECTSTORE);\n        if (!ok) {\n            return Promise.reject(new Error(`objectstore is only supported on servers ${min} or better`));\n        }\n        return ObjectStoreImpl.create(this.js, name, opts);\n    }\n}\nclass JetStreamClientImpl extends BaseApiClient {\n    consumers;\n    streams;\n    consumerAPI;\n    streamAPI;\n    constructor(nc, opts){\n        super(nc, opts);\n        this.consumerAPI = new ConsumerAPIImpl(nc, opts);\n        this.streamAPI = new StreamAPIImpl(nc, opts);\n        this.consumers = new ConsumersImpl(this.consumerAPI);\n        this.streams = new StreamsImpl(this.streamAPI);\n    }\n    jetstreamManager(checkAPI) {\n        const opts = Object.assign({\n            checkAPI\n        }, this.opts);\n        return this.nc.jetstreamManager(opts);\n    }\n    get apiPrefix() {\n        return this.prefix;\n    }\n    get views() {\n        return new ViewsImpl(this);\n    }\n    async publish(subj, data = Empty, opts) {\n        opts = opts || {};\n        opts.expect = opts.expect || {};\n        const mh = opts?.headers || headers();\n        if (opts) {\n            if (opts.msgID) {\n                mh.set(PubHeaders.MsgIdHdr, opts.msgID);\n            }\n            if (opts.expect.lastMsgID) {\n                mh.set(PubHeaders.ExpectedLastMsgIdHdr, opts.expect.lastMsgID);\n            }\n            if (opts.expect.streamName) {\n                mh.set(PubHeaders.ExpectedStreamHdr, opts.expect.streamName);\n            }\n            if (typeof opts.expect.lastSequence === \"number\") {\n                mh.set(PubHeaders.ExpectedLastSeqHdr, `${opts.expect.lastSequence}`);\n            }\n            if (typeof opts.expect.lastSubjectSequence === \"number\") {\n                mh.set(PubHeaders.ExpectedLastSubjectSequenceHdr, `${opts.expect.lastSubjectSequence}`);\n            }\n        }\n        const to = opts.timeout || this.timeout;\n        const ro = {};\n        if (to) {\n            ro.timeout = to;\n        }\n        if (opts) {\n            ro.headers = mh;\n        }\n        let { retries, retry_delay } = opts;\n        retries = retries || 1;\n        retry_delay = retry_delay || 250;\n        let r;\n        for(let i = 0; i < retries; i++){\n            try {\n                r = await this.nc.request(subj, data, ro);\n                break;\n            } catch (err) {\n                const ne = err;\n                if (ne.code === \"503\" && i + 1 < retries) {\n                    await delay(retry_delay);\n                } else {\n                    throw err;\n                }\n            }\n        }\n        const pa = this.parseJsResponse(r);\n        if (pa.stream === \"\") {\n            throw NatsError.errorForCode(ErrorCode.JetStreamInvalidAck);\n        }\n        pa.duplicate = pa.duplicate ? pa.duplicate : false;\n        return pa;\n    }\n    async pull(stream, durable, expires = 0) {\n        validateStreamName(stream);\n        validateDurableName(durable);\n        let timeout = this.timeout;\n        if (expires > timeout) {\n            timeout = expires;\n        }\n        expires = expires < 0 ? 0 : nanos(expires);\n        const pullOpts = {\n            batch: 1,\n            no_wait: expires === 0,\n            expires\n        };\n        const msg = await this.nc.request(`${this.prefix}.CONSUMER.MSG.NEXT.${stream}.${durable}`, this.jc.encode(pullOpts), {\n            noMux: true,\n            timeout\n        });\n        const err = checkJsError(msg);\n        if (err) {\n            throw err;\n        }\n        return toJsMsg(msg);\n    }\n    fetch(stream, durable, opts = {}) {\n        validateStreamName(stream);\n        validateDurableName(durable);\n        let timer = null;\n        const trackBytes = (opts.max_bytes ?? 0) > 0;\n        let receivedBytes = 0;\n        const max_bytes = trackBytes ? opts.max_bytes : 0;\n        let monitor = null;\n        const args = {};\n        args.batch = opts.batch || 1;\n        if (max_bytes) {\n            const fv = this.nc.features.get(Feature.JS_PULL_MAX_BYTES);\n            if (!fv.ok) {\n                throw new Error(`max_bytes is only supported on servers ${fv.min} or better`);\n            }\n            args.max_bytes = max_bytes;\n        }\n        args.no_wait = opts.no_wait || false;\n        if (args.no_wait && args.expires) {\n            args.expires = 0;\n        }\n        const expires = opts.expires || 0;\n        if (expires) {\n            args.expires = nanos(expires);\n        }\n        if (expires === 0 && args.no_wait === false) {\n            throw new Error(\"expires or no_wait is required\");\n        }\n        const hb = opts.idle_heartbeat || 0;\n        if (hb) {\n            args.idle_heartbeat = nanos(hb);\n            if (opts.delay_heartbeat === true) {\n                args.idle_heartbeat = nanos(hb * 4);\n            }\n        }\n        const qi = new QueuedIteratorImpl();\n        const wants = args.batch;\n        let received = 0;\n        qi.protocolFilterFn = (jm, _ingest = false)=>{\n            const jsmi = jm;\n            if (isHeartbeatMsg(jsmi.msg)) {\n                monitor?.work();\n                return false;\n            }\n            return true;\n        };\n        qi.dispatchedFn = (m)=>{\n            if (m) {\n                if (trackBytes) {\n                    receivedBytes += m.data.length;\n                }\n                received++;\n                if (timer && m.info.pending === 0) {\n                    return;\n                }\n                if (qi.getPending() === 1 && m.info.pending === 0 || wants === received || max_bytes > 0 && receivedBytes >= max_bytes) {\n                    qi.stop();\n                }\n            }\n        };\n        const inbox = createInbox(this.nc.options.inboxPrefix);\n        const sub = this.nc.subscribe(inbox, {\n            max: opts.batch,\n            callback: (err, msg)=>{\n                if (err === null) {\n                    err = checkJsError(msg);\n                }\n                if (err !== null) {\n                    if (timer) {\n                        timer.cancel();\n                        timer = null;\n                    }\n                    if (isNatsError(err)) {\n                        qi.stop(hideNonTerminalJsErrors(err) === null ? undefined : err);\n                    } else {\n                        qi.stop(err);\n                    }\n                } else {\n                    monitor?.work();\n                    qi.received++;\n                    qi.push(toJsMsg(msg));\n                }\n            }\n        });\n        if (expires) {\n            timer = timeout(expires);\n            timer.catch(()=>{\n                if (!sub.isClosed()) {\n                    sub.drain().catch(()=>{});\n                    timer = null;\n                }\n                if (monitor) {\n                    monitor.cancel();\n                }\n            });\n        }\n        (async ()=>{\n            try {\n                if (hb) {\n                    monitor = new IdleHeartbeatMonitor(hb, (v)=>{\n                        qi.push(()=>{\n                            qi.err = new NatsError(`${Js409Errors.IdleHeartbeatMissed}: ${v}`, ErrorCode.JetStreamIdleHeartBeat);\n                        });\n                        return true;\n                    });\n                }\n            } catch (_err) {}\n            await sub.closed;\n            if (timer !== null) {\n                timer.cancel();\n                timer = null;\n            }\n            if (monitor) {\n                monitor.cancel();\n            }\n            qi.stop();\n        })().catch();\n        this.nc.publish(`${this.prefix}.CONSUMER.MSG.NEXT.${stream}.${durable}`, this.jc.encode(args), {\n            reply: inbox\n        });\n        return qi;\n    }\n    async pullSubscribe(subject, opts = consumerOpts()) {\n        const cso = await this._processOptions(subject, opts);\n        if (cso.ordered) {\n            throw new Error(\"pull subscribers cannot be be ordered\");\n        }\n        if (cso.config.deliver_subject) {\n            throw new Error(\"consumer info specifies deliver_subject - pull consumers cannot have deliver_subject set\");\n        }\n        const ackPolicy = cso.config.ack_policy;\n        if (ackPolicy === AckPolicy.None || ackPolicy === AckPolicy.All) {\n            throw new Error(\"ack policy for pull consumers must be explicit\");\n        }\n        const so = this._buildTypedSubscriptionOpts(cso);\n        const sub = new JetStreamPullSubscriptionImpl(this, cso.deliver, so);\n        sub.info = cso;\n        try {\n            await this._maybeCreateConsumer(cso);\n        } catch (err) {\n            sub.unsubscribe();\n            throw err;\n        }\n        return sub;\n    }\n    async subscribe(subject, opts = consumerOpts()) {\n        const cso = await this._processOptions(subject, opts);\n        if (!cso.isBind && !cso.config.deliver_subject) {\n            throw new Error(\"push consumer requires deliver_subject\");\n        }\n        const so = this._buildTypedSubscriptionOpts(cso);\n        const sub = new JetStreamSubscriptionImpl(this, cso.deliver, so);\n        sub.info = cso;\n        try {\n            await this._maybeCreateConsumer(cso);\n        } catch (err) {\n            sub.unsubscribe();\n            throw err;\n        }\n        sub._maybeSetupHbMonitoring();\n        return sub;\n    }\n    async _processOptions(subject, opts = consumerOpts()) {\n        const jsi = isConsumerOptsBuilder(opts) ? opts.getOpts() : opts;\n        jsi.isBind = isConsumerOptsBuilder(opts) ? opts.isBind : false;\n        jsi.flow_control = {\n            heartbeat_count: 0,\n            fc_count: 0,\n            consumer_restarts: 0\n        };\n        if (jsi.ordered) {\n            jsi.ordered_consumer_sequence = {\n                stream_seq: 0,\n                delivery_seq: 0\n            };\n            if (jsi.config.ack_policy !== AckPolicy.NotSet && jsi.config.ack_policy !== AckPolicy.None) {\n                throw new NatsError(\"ordered consumer: ack_policy can only be set to 'none'\", ErrorCode.ApiError);\n            }\n            if (jsi.config.durable_name && jsi.config.durable_name.length > 0) {\n                throw new NatsError(\"ordered consumer: durable_name cannot be set\", ErrorCode.ApiError);\n            }\n            if (jsi.config.deliver_subject && jsi.config.deliver_subject.length > 0) {\n                throw new NatsError(\"ordered consumer: deliver_subject cannot be set\", ErrorCode.ApiError);\n            }\n            if (jsi.config.max_deliver !== undefined && jsi.config.max_deliver > 1) {\n                throw new NatsError(\"ordered consumer: max_deliver cannot be set\", ErrorCode.ApiError);\n            }\n            if (jsi.config.deliver_group && jsi.config.deliver_group.length > 0) {\n                throw new NatsError(\"ordered consumer: deliver_group cannot be set\", ErrorCode.ApiError);\n            }\n            jsi.config.deliver_subject = createInbox(this.nc.options.inboxPrefix);\n            jsi.config.ack_policy = AckPolicy.None;\n            jsi.config.max_deliver = 1;\n            jsi.config.flow_control = true;\n            jsi.config.idle_heartbeat = jsi.config.idle_heartbeat || nanos(5000);\n            jsi.config.ack_wait = nanos(22 * 60 * 60 * 1000);\n            jsi.config.mem_storage = true;\n            jsi.config.num_replicas = 1;\n        }\n        if (jsi.config.ack_policy === AckPolicy.NotSet) {\n            jsi.config.ack_policy = AckPolicy.All;\n        }\n        jsi.api = this;\n        jsi.config = jsi.config || {};\n        jsi.stream = jsi.stream ? jsi.stream : await this.findStream(subject);\n        jsi.attached = false;\n        if (jsi.config.durable_name) {\n            try {\n                const info = await this.consumerAPI.info(jsi.stream, jsi.config.durable_name);\n                if (info) {\n                    if (info.config.filter_subject && info.config.filter_subject !== subject) {\n                        throw new Error(\"subject does not match consumer\");\n                    }\n                    const qn = jsi.config.deliver_group ?? \"\";\n                    if (qn === \"\" && info.push_bound === true) {\n                        throw new Error(`duplicate subscription`);\n                    }\n                    const rqn = info.config.deliver_group ?? \"\";\n                    if (qn !== rqn) {\n                        if (rqn === \"\") {\n                            throw new Error(`durable requires no queue group`);\n                        } else {\n                            throw new Error(`durable requires queue group '${rqn}'`);\n                        }\n                    }\n                    jsi.last = info;\n                    jsi.config = info.config;\n                    jsi.attached = true;\n                    if (!jsi.config.durable_name) {\n                        jsi.name = info.name;\n                    }\n                }\n            } catch (err) {\n                if (err.code !== \"404\") {\n                    throw err;\n                }\n            }\n        }\n        if (!jsi.attached && jsi.config.filter_subject === undefined && jsi.config.filter_subjects === undefined) {\n            jsi.config.filter_subject = subject;\n        }\n        jsi.deliver = jsi.config.deliver_subject || createInbox(this.nc.options.inboxPrefix);\n        return jsi;\n    }\n    _buildTypedSubscriptionOpts(jsi) {\n        const so = {};\n        so.adapter = msgAdapter(jsi.callbackFn === undefined);\n        so.ingestionFilterFn = JetStreamClientImpl.ingestionFn(jsi.ordered);\n        so.protocolFilterFn = (jm, ingest = false)=>{\n            const jsmi = jm;\n            if (isFlowControlMsg(jsmi.msg)) {\n                if (!ingest) {\n                    jsmi.msg.respond();\n                }\n                return false;\n            }\n            return true;\n        };\n        if (!jsi.mack && jsi.config.ack_policy !== AckPolicy.None) {\n            so.dispatchedFn = autoAckJsMsg;\n        }\n        if (jsi.callbackFn) {\n            so.callback = jsi.callbackFn;\n        }\n        so.max = jsi.max || 0;\n        so.queue = jsi.queue;\n        return so;\n    }\n    async _maybeCreateConsumer(jsi) {\n        if (jsi.attached) {\n            return;\n        }\n        if (jsi.isBind) {\n            throw new Error(`unable to bind - durable consumer ${jsi.config.durable_name} doesn't exist in ${jsi.stream}`);\n        }\n        jsi.config = Object.assign({\n            deliver_policy: DeliverPolicy.All,\n            ack_policy: AckPolicy.Explicit,\n            ack_wait: nanos(30 * 1000),\n            replay_policy: ReplayPolicy.Instant\n        }, jsi.config);\n        const ci = await this.consumerAPI.add(jsi.stream, jsi.config);\n        if (Array.isArray(jsi.config.filter_subjects && !Array.isArray(ci.config.filter_subjects))) {\n            throw new Error(`jetstream server doesn't support consumers with multiple filter subjects`);\n        }\n        jsi.name = ci.name;\n        jsi.config = ci.config;\n        jsi.last = ci;\n    }\n    static ingestionFn(ordered) {\n        return (jm, ctx)=>{\n            const jsub = ctx;\n            if (!jm) return {\n                ingest: false,\n                protocol: false\n            };\n            const jmi = jm;\n            if (!checkJsError(jmi.msg)) {\n                jsub.monitor?.work();\n            }\n            if (isHeartbeatMsg(jmi.msg)) {\n                const ingest = ordered ? jsub._checkHbOrderConsumer(jmi.msg) : true;\n                if (!ordered) {\n                    jsub.info.flow_control.heartbeat_count++;\n                }\n                return {\n                    ingest,\n                    protocol: true\n                };\n            } else if (isFlowControlMsg(jmi.msg)) {\n                jsub.info.flow_control.fc_count++;\n                return {\n                    ingest: true,\n                    protocol: true\n                };\n            }\n            const ingest = ordered ? jsub._checkOrderedConsumer(jm) : true;\n            return {\n                ingest,\n                protocol: false\n            };\n        };\n    }\n}\nclass JetStreamSubscriptionImpl extends TypedSubscription {\n    js;\n    monitor;\n    constructor(js, subject, opts){\n        super(js.nc, subject, opts);\n        this.js = js;\n        this.monitor = null;\n        this.sub.closed.then(()=>{\n            if (this.monitor) {\n                this.monitor.cancel();\n            }\n        });\n    }\n    set info(info) {\n        this.sub.info = info;\n    }\n    get info() {\n        return this.sub.info;\n    }\n    _resetOrderedConsumer(sseq) {\n        if (this.info === null || this.sub.isClosed()) {\n            return;\n        }\n        const newDeliver = createInbox(this.js.nc.options.inboxPrefix);\n        const nci = this.js.nc;\n        nci._resub(this.sub, newDeliver);\n        const info = this.info;\n        info.ordered_consumer_sequence.delivery_seq = 0;\n        info.flow_control.heartbeat_count = 0;\n        info.flow_control.fc_count = 0;\n        info.flow_control.consumer_restarts++;\n        info.deliver = newDeliver;\n        info.config.deliver_subject = newDeliver;\n        info.config.deliver_policy = DeliverPolicy.StartSequence;\n        info.config.opt_start_seq = sseq;\n        const req = {};\n        req.stream_name = this.info.stream;\n        req.config = info.config;\n        const subj = `${info.api.prefix}.CONSUMER.CREATE.${info.stream}`;\n        this.js._request(subj, req).then((v)=>{\n            const ci = v;\n            this.info.config = ci.config;\n            this.info.name = ci.name;\n        }).catch((err)=>{\n            const nerr = new NatsError(`unable to recreate ordered consumer ${info.stream} at seq ${sseq}`, ErrorCode.RequestError, err);\n            this.sub.callback(nerr, {});\n        });\n    }\n    _maybeSetupHbMonitoring() {\n        const ns = this.info?.config?.idle_heartbeat || 0;\n        if (ns) {\n            this._setupHbMonitoring(millis(ns));\n        }\n    }\n    _setupHbMonitoring(millis, cancelAfter = 0) {\n        const opts = {\n            cancelAfter: 0,\n            maxOut: 2\n        };\n        if (cancelAfter) {\n            opts.cancelAfter = cancelAfter;\n        }\n        const sub = this.sub;\n        const handler = (v)=>{\n            const msg = newJsErrorMsg(409, `${Js409Errors.IdleHeartbeatMissed}: ${v}`, this.sub.subject);\n            const ordered = this.info?.ordered;\n            if (!ordered) {\n                this.sub.callback(null, msg);\n            } else {\n                if (!this.js.nc.protocol.connected) {\n                    return false;\n                }\n                const seq = this.info?.ordered_consumer_sequence?.stream_seq || 0;\n                this._resetOrderedConsumer(seq + 1);\n                return false;\n            }\n            return !sub.noIterator;\n        };\n        this.monitor = new IdleHeartbeatMonitor(millis, handler, opts);\n    }\n    _checkHbOrderConsumer(msg) {\n        const rm = msg.headers.get(JsHeaders.ConsumerStalledHdr);\n        if (rm !== \"\") {\n            const nci = this.js.nc;\n            nci.publish(rm);\n        }\n        const lastDelivered = parseInt(msg.headers.get(JsHeaders.LastConsumerSeqHdr), 10);\n        const ordered = this.info.ordered_consumer_sequence;\n        this.info.flow_control.heartbeat_count++;\n        if (lastDelivered !== ordered.delivery_seq) {\n            this._resetOrderedConsumer(ordered.stream_seq + 1);\n        }\n        return false;\n    }\n    _checkOrderedConsumer(jm) {\n        const ordered = this.info.ordered_consumer_sequence;\n        const sseq = jm.info.streamSequence;\n        const dseq = jm.info.deliverySequence;\n        if (dseq != ordered.delivery_seq + 1) {\n            this._resetOrderedConsumer(ordered.stream_seq + 1);\n            return false;\n        }\n        ordered.delivery_seq = dseq;\n        ordered.stream_seq = sseq;\n        return true;\n    }\n    async destroy() {\n        if (!this.isClosed()) {\n            await this.drain();\n        }\n        const jinfo = this.sub.info;\n        const name = jinfo.config.durable_name || jinfo.name;\n        const subj = `${jinfo.api.prefix}.CONSUMER.DELETE.${jinfo.stream}.${name}`;\n        await jinfo.api._request(subj);\n    }\n    async consumerInfo() {\n        const jinfo = this.sub.info;\n        const name = jinfo.config.durable_name || jinfo.name;\n        const subj = `${jinfo.api.prefix}.CONSUMER.INFO.${jinfo.stream}.${name}`;\n        const ci = await jinfo.api._request(subj);\n        jinfo.last = ci;\n        return ci;\n    }\n}\nclass JetStreamPullSubscriptionImpl extends JetStreamSubscriptionImpl {\n    constructor(js, subject, opts){\n        super(js, subject, opts);\n    }\n    pull(opts = {\n        batch: 1\n    }) {\n        const { stream, config, name } = this.sub.info;\n        const consumer = config.durable_name ?? name;\n        const args = {};\n        args.batch = opts.batch || 1;\n        args.no_wait = opts.no_wait || false;\n        if ((opts.max_bytes ?? 0) > 0) {\n            const fv = this.js.nc.features.get(Feature.JS_PULL_MAX_BYTES);\n            if (!fv.ok) {\n                throw new Error(`max_bytes is only supported on servers ${fv.min} or better`);\n            }\n            args.max_bytes = opts.max_bytes;\n        }\n        let expires = 0;\n        if (opts.expires && opts.expires > 0) {\n            expires = opts.expires;\n            args.expires = nanos(expires);\n        }\n        let hb = 0;\n        if (opts.idle_heartbeat && opts.idle_heartbeat > 0) {\n            hb = opts.idle_heartbeat;\n            args.idle_heartbeat = nanos(hb);\n        }\n        if (hb && expires === 0) {\n            throw new Error(\"idle_heartbeat requires expires\");\n        }\n        if (hb > expires) {\n            throw new Error(\"expires must be greater than idle_heartbeat\");\n        }\n        if (this.info) {\n            if (this.monitor) {\n                this.monitor.cancel();\n            }\n            if (expires && hb) {\n                if (!this.monitor) {\n                    this._setupHbMonitoring(hb, expires);\n                } else {\n                    this.monitor._change(hb, expires);\n                }\n            }\n            const api = this.info.api;\n            const subj = `${api.prefix}.CONSUMER.MSG.NEXT.${stream}.${consumer}`;\n            const reply = this.sub.subject;\n            api.nc.publish(subj, api.jc.encode(args), {\n                reply: reply\n            });\n        }\n    }\n}\nfunction msgAdapter(iterator) {\n    if (iterator) {\n        return iterMsgAdapter;\n    } else {\n        return cbMsgAdapter;\n    }\n}\nfunction cbMsgAdapter(err, msg) {\n    if (err) {\n        return [\n            err,\n            null\n        ];\n    }\n    err = checkJsError(msg);\n    if (err) {\n        return [\n            err,\n            null\n        ];\n    }\n    return [\n        null,\n        toJsMsg(msg)\n    ];\n}\nfunction iterMsgAdapter(err, msg) {\n    if (err) {\n        return [\n            err,\n            null\n        ];\n    }\n    const ne = checkJsError(msg);\n    if (ne !== null) {\n        return [\n            hideNonTerminalJsErrors(ne),\n            null\n        ];\n    }\n    return [\n        null,\n        toJsMsg(msg)\n    ];\n}\nfunction hideNonTerminalJsErrors(ne) {\n    if (ne !== null) {\n        switch(ne.code){\n            case ErrorCode.JetStream404NoMessages:\n            case ErrorCode.JetStream408RequestTimeout:\n                return null;\n            case ErrorCode.JetStream409:\n                if (isTerminal409(ne)) {\n                    return ne;\n                }\n                return null;\n            default:\n                return ne;\n        }\n    }\n    return null;\n}\nfunction autoAckJsMsg(data) {\n    if (data) {\n        data.ack();\n    }\n}\nclass DirectStreamAPIImpl extends BaseApiClient {\n    constructor(nc, opts){\n        super(nc, opts);\n    }\n    async getMessage(stream, query) {\n        validateStreamName(stream);\n        let qq = query;\n        const { last_by_subj } = qq;\n        if (last_by_subj) {\n            qq = null;\n        }\n        const payload = qq ? this.jc.encode(qq) : Empty;\n        const pre = this.opts.apiPrefix || \"$JS.API\";\n        const subj = last_by_subj ? `${pre}.DIRECT.GET.${stream}.${last_by_subj}` : `${pre}.DIRECT.GET.${stream}`;\n        const r = await this.nc.request(subj, payload);\n        const err = checkJsError(r);\n        if (err) {\n            return Promise.reject(err);\n        }\n        const dm = new DirectMsgImpl(r);\n        return Promise.resolve(dm);\n    }\n}\nclass DirectMsgImpl {\n    data;\n    header;\n    static jc;\n    constructor(m){\n        if (!m.headers) {\n            throw new Error(\"headers expected\");\n        }\n        this.data = m.data;\n        this.header = m.headers;\n    }\n    get subject() {\n        return this.header.last(DirectMsgHeaders.Subject);\n    }\n    get seq() {\n        const v = this.header.last(DirectMsgHeaders.Sequence);\n        return typeof v === \"string\" ? parseInt(v) : 0;\n    }\n    get time() {\n        return new Date(Date.parse(this.timestamp));\n    }\n    get timestamp() {\n        return this.header.last(DirectMsgHeaders.TimeStamp);\n    }\n    get stream() {\n        return this.header.last(DirectMsgHeaders.Stream);\n    }\n    json(reviver) {\n        return JSONCodec(reviver).decode(this.data);\n    }\n    string() {\n        return TD.decode(this.data);\n    }\n}\nclass JetStreamManagerImpl extends BaseApiClient {\n    streams;\n    consumers;\n    direct;\n    constructor(nc, opts){\n        super(nc, opts);\n        this.streams = new StreamAPIImpl(nc, opts);\n        this.consumers = new ConsumerAPIImpl(nc, opts);\n        this.direct = new DirectStreamAPIImpl(nc, opts);\n    }\n    async getAccountInfo() {\n        const r = await this._request(`${this.prefix}.INFO`);\n        return r;\n    }\n    jetstream() {\n        return this.nc.jetstream(this.getOptions());\n    }\n    advisories() {\n        const iter = new QueuedIteratorImpl();\n        this.nc.subscribe(`$JS.EVENT.ADVISORY.>`, {\n            callback: (err, msg)=>{\n                if (err) {\n                    throw err;\n                }\n                try {\n                    const d = this.parseJsResponse(msg);\n                    const chunks = d.type.split(\".\");\n                    const kind = chunks[chunks.length - 1];\n                    iter.push({\n                        kind: kind,\n                        data: d\n                    });\n                } catch (err) {\n                    iter.stop(err);\n                }\n            }\n        });\n        return iter;\n    }\n}\nconst ServiceApiPrefix = \"$SRV\";\nclass ServiceMsgImpl {\n    msg;\n    constructor(msg){\n        this.msg = msg;\n    }\n    get data() {\n        return this.msg.data;\n    }\n    get sid() {\n        return this.msg.sid;\n    }\n    get subject() {\n        return this.msg.subject;\n    }\n    get reply() {\n        return this.msg.reply || \"\";\n    }\n    get headers() {\n        return this.msg.headers;\n    }\n    respond(data, opts) {\n        return this.msg.respond(data, opts);\n    }\n    respondError(code, description, data, opts) {\n        opts = opts || {};\n        opts.headers = opts.headers || headers();\n        opts.headers?.set(ServiceErrorCodeHeader, `${code}`);\n        opts.headers?.set(ServiceErrorHeader, description);\n        return this.msg.respond(data, opts);\n    }\n    json(reviver) {\n        return this.msg.json(reviver);\n    }\n    string() {\n        return this.msg.string();\n    }\n}\nclass ServiceGroupImpl {\n    subject;\n    queue;\n    srv;\n    constructor(parent, name = \"\", queue = \"\"){\n        if (name !== \"\") {\n            validInternalToken(\"service group\", name);\n        }\n        let root = \"\";\n        if (parent instanceof ServiceImpl) {\n            this.srv = parent;\n            root = \"\";\n        } else if (parent instanceof ServiceGroupImpl) {\n            const sg = parent;\n            this.srv = sg.srv;\n            if (queue === \"\" && sg.queue !== \"\") {\n                queue = sg.queue;\n            }\n            root = sg.subject;\n        } else {\n            throw new Error(\"unknown ServiceGroup type\");\n        }\n        this.subject = this.calcSubject(root, name);\n        this.queue = queue;\n    }\n    calcSubject(root, name = \"\") {\n        if (name === \"\") {\n            return root;\n        }\n        return root !== \"\" ? `${root}.${name}` : name;\n    }\n    addEndpoint(name = \"\", opts) {\n        opts = opts || {\n            subject: name\n        };\n        const args = typeof opts === \"function\" ? {\n            handler: opts,\n            subject: name\n        } : opts;\n        validateName(\"endpoint\", name);\n        let { subject, handler, metadata, queue } = args;\n        subject = subject || name;\n        queue = queue || this.queue;\n        validSubjectName(\"endpoint subject\", subject);\n        subject = this.calcSubject(this.subject, subject);\n        const ne = {\n            name,\n            subject,\n            queue,\n            handler,\n            metadata\n        };\n        return this.srv._addEndpoint(ne);\n    }\n    addGroup(name = \"\", queue = \"\") {\n        return new ServiceGroupImpl(this, name, queue);\n    }\n}\nfunction validSubjectName(context, subj) {\n    if (subj === \"\") {\n        throw new Error(`${context} cannot be empty`);\n    }\n    if (subj.indexOf(\" \") !== -1) {\n        throw new Error(`${context} cannot contain spaces: '${subj}'`);\n    }\n    const tokens = subj.split(\".\");\n    tokens.forEach((v, idx)=>{\n        if (v === \">\" && idx !== tokens.length - 1) {\n            throw new Error(`${context} cannot have internal '>': '${subj}'`);\n        }\n    });\n}\nfunction validInternalToken(context, subj) {\n    if (subj.indexOf(\" \") !== -1) {\n        throw new Error(`${context} cannot contain spaces: '${subj}'`);\n    }\n    const tokens = subj.split(\".\");\n    tokens.forEach((v)=>{\n        if (v === \">\") {\n            throw new Error(`${context} name cannot contain internal '>': '${subj}'`);\n        }\n    });\n}\nclass ServiceImpl {\n    nc;\n    _id;\n    config;\n    handlers;\n    internal;\n    _stopped;\n    _done;\n    started;\n    static controlSubject(verb, name = \"\", id = \"\", prefix) {\n        const pre = prefix ?? ServiceApiPrefix;\n        if (name === \"\" && id === \"\") {\n            return `${pre}.${verb}`;\n        }\n        validateName(\"control subject name\", name);\n        if (id !== \"\") {\n            validateName(\"control subject id\", id);\n            return `${pre}.${verb}.${name}.${id}`;\n        }\n        return `${pre}.${verb}.${name}`;\n    }\n    constructor(nc, config = {\n        name: \"\",\n        version: \"\"\n    }){\n        this.nc = nc;\n        this.config = Object.assign({}, config);\n        if (!this.config.queue) {\n            this.config.queue = \"q\";\n        }\n        validateName(\"name\", this.config.name);\n        validateName(\"queue\", this.config.queue);\n        parseSemVer(this.config.version);\n        this._id = nuid.next();\n        this.internal = [];\n        this._done = deferred();\n        this._stopped = false;\n        this.handlers = [];\n        this.started = new Date().toISOString();\n        this.reset();\n        this.nc.closed().then(()=>{\n            this.close().catch();\n        }).catch((err)=>{\n            this.close(err).catch();\n        });\n    }\n    get subjects() {\n        return this.handlers.filter((s)=>{\n            return s.internal === false;\n        }).map((s)=>{\n            return s.subject;\n        });\n    }\n    get id() {\n        return this._id;\n    }\n    get name() {\n        return this.config.name;\n    }\n    get description() {\n        return this.config.description ?? \"\";\n    }\n    get version() {\n        return this.config.version;\n    }\n    get metadata() {\n        return this.config.metadata;\n    }\n    errorToHeader(err) {\n        const h = headers();\n        if (err instanceof ServiceError) {\n            const se = err;\n            h.set(ServiceErrorHeader, se.message);\n            h.set(ServiceErrorCodeHeader, `${se.code}`);\n        } else {\n            h.set(ServiceErrorHeader, err.message);\n            h.set(ServiceErrorCodeHeader, \"500\");\n        }\n        return h;\n    }\n    setupHandler(h, internal = false) {\n        const queue = internal ? \"\" : h.queue ? h.queue : this.config.queue;\n        const { name, subject, handler } = h;\n        const sv = h;\n        sv.internal = internal;\n        if (internal) {\n            this.internal.push(sv);\n        }\n        sv.stats = new NamedEndpointStatsImpl(name, subject, queue);\n        sv.queue = queue;\n        const callback = handler ? (err, msg)=>{\n            if (err) {\n                this.close(err);\n                return;\n            }\n            const start = Date.now();\n            try {\n                handler(err, new ServiceMsgImpl(msg));\n            } catch (err) {\n                sv.stats.countError(err);\n                msg?.respond(Empty, {\n                    headers: this.errorToHeader(err)\n                });\n            } finally{\n                sv.stats.countLatency(start);\n            }\n        } : undefined;\n        sv.sub = this.nc.subscribe(subject, {\n            callback,\n            queue\n        });\n        sv.sub.closed.then(()=>{\n            if (!this._stopped) {\n                this.close(new Error(`required subscription ${h.subject} stopped`)).catch();\n            }\n        }).catch((err)=>{\n            if (!this._stopped) {\n                const ne = new Error(`required subscription ${h.subject} errored: ${err.message}`);\n                ne.stack = err.stack;\n                this.close(ne).catch();\n            }\n        });\n        return sv;\n    }\n    info() {\n        return {\n            type: ServiceResponseType.INFO,\n            name: this.name,\n            id: this.id,\n            version: this.version,\n            description: this.description,\n            metadata: this.metadata,\n            endpoints: this.endpoints()\n        };\n    }\n    endpoints() {\n        return this.handlers.map((v)=>{\n            const { subject, metadata, name, queue } = v;\n            return {\n                subject,\n                metadata,\n                name,\n                queue_group: queue\n            };\n        });\n    }\n    async stats() {\n        const endpoints = [];\n        for (const h of this.handlers){\n            if (typeof this.config.statsHandler === \"function\") {\n                try {\n                    h.stats.data = await this.config.statsHandler(h);\n                } catch (err) {\n                    h.stats.countError(err);\n                }\n            }\n            endpoints.push(h.stats.stats(h.qi));\n        }\n        return {\n            type: ServiceResponseType.STATS,\n            name: this.name,\n            id: this.id,\n            version: this.version,\n            started: this.started,\n            metadata: this.metadata,\n            endpoints\n        };\n    }\n    addInternalHandler(verb, handler) {\n        const v = `${verb}`.toUpperCase();\n        this._doAddInternalHandler(`${v}-all`, verb, handler);\n        this._doAddInternalHandler(`${v}-kind`, verb, handler, this.name);\n        this._doAddInternalHandler(`${v}`, verb, handler, this.name, this.id);\n    }\n    _doAddInternalHandler(name, verb, handler, kind = \"\", id = \"\") {\n        const endpoint = {};\n        endpoint.name = name;\n        endpoint.subject = ServiceImpl.controlSubject(verb, kind, id);\n        endpoint.handler = handler;\n        this.setupHandler(endpoint, true);\n    }\n    start() {\n        const jc = JSONCodec();\n        const statsHandler = (err, msg)=>{\n            if (err) {\n                this.close(err);\n                return Promise.reject(err);\n            }\n            return this.stats().then((s)=>{\n                msg?.respond(jc.encode(s));\n                return Promise.resolve();\n            });\n        };\n        const infoHandler = (err, msg)=>{\n            if (err) {\n                this.close(err);\n                return Promise.reject(err);\n            }\n            msg?.respond(jc.encode(this.info()));\n            return Promise.resolve();\n        };\n        const ping = jc.encode(this.ping());\n        const pingHandler = (err, msg)=>{\n            if (err) {\n                this.close(err).then().catch();\n                return Promise.reject(err);\n            }\n            msg.respond(ping);\n            return Promise.resolve();\n        };\n        this.addInternalHandler(ServiceVerb.PING, pingHandler);\n        this.addInternalHandler(ServiceVerb.STATS, statsHandler);\n        this.addInternalHandler(ServiceVerb.INFO, infoHandler);\n        this.handlers.forEach((h)=>{\n            const { subject } = h;\n            if (typeof subject !== \"string\") {\n                return;\n            }\n            if (h.handler === null) {\n                return;\n            }\n            this.setupHandler(h);\n        });\n        return Promise.resolve(this);\n    }\n    close(err) {\n        if (this._stopped) {\n            return this._done;\n        }\n        this._stopped = true;\n        let buf = [];\n        if (!this.nc.isClosed()) {\n            buf = this.handlers.concat(this.internal).map((h)=>{\n                return h.sub.drain();\n            });\n        }\n        Promise.allSettled(buf).then(()=>{\n            this._done.resolve(err ? err : null);\n        });\n        return this._done;\n    }\n    get stopped() {\n        return this._done;\n    }\n    get isStopped() {\n        return this._stopped;\n    }\n    stop(err) {\n        return this.close(err);\n    }\n    ping() {\n        return {\n            type: ServiceResponseType.PING,\n            name: this.name,\n            id: this.id,\n            version: this.version,\n            metadata: this.metadata\n        };\n    }\n    reset() {\n        this.started = new Date().toISOString();\n        if (this.handlers) {\n            for (const h of this.handlers){\n                h.stats.reset(h.qi);\n            }\n        }\n    }\n    addGroup(name, queue) {\n        return new ServiceGroupImpl(this, name, queue);\n    }\n    addEndpoint(name, handler) {\n        const sg = new ServiceGroupImpl(this);\n        return sg.addEndpoint(name, handler);\n    }\n    _addEndpoint(e) {\n        const qi = new QueuedIteratorImpl();\n        qi.noIterator = typeof e.handler === \"function\";\n        if (!qi.noIterator) {\n            e.handler = (err, msg)=>{\n                err ? this.stop(err).catch() : qi.push(new ServiceMsgImpl(msg));\n            };\n            qi.iterClosed.then(()=>{\n                this.close().catch();\n            });\n        }\n        const ss = this.setupHandler(e, false);\n        ss.qi = qi;\n        this.handlers.push(ss);\n        return qi;\n    }\n}\nclass NamedEndpointStatsImpl {\n    name;\n    subject;\n    average_processing_time;\n    num_requests;\n    processing_time;\n    num_errors;\n    last_error;\n    data;\n    metadata;\n    queue;\n    constructor(name, subject, queue = \"\"){\n        this.name = name;\n        this.subject = subject;\n        this.average_processing_time = 0;\n        this.num_errors = 0;\n        this.num_requests = 0;\n        this.processing_time = 0;\n        this.queue = queue;\n    }\n    reset(qi) {\n        this.num_requests = 0;\n        this.processing_time = 0;\n        this.average_processing_time = 0;\n        this.num_errors = 0;\n        this.last_error = undefined;\n        this.data = undefined;\n        const qii = qi;\n        if (qii) {\n            qii.time = 0;\n            qii.processed = 0;\n        }\n    }\n    countLatency(start) {\n        this.num_requests++;\n        this.processing_time += nanos(Date.now() - start);\n        this.average_processing_time = Math.round(this.processing_time / this.num_requests);\n    }\n    countError(err) {\n        this.num_errors++;\n        this.last_error = err.message;\n    }\n    _stats() {\n        const { name, subject, average_processing_time, num_errors, num_requests, processing_time, last_error, data, queue } = this;\n        return {\n            name,\n            subject,\n            average_processing_time,\n            num_errors,\n            num_requests,\n            processing_time,\n            last_error,\n            data,\n            queue_group: queue\n        };\n    }\n    stats(qi) {\n        const qii = qi;\n        if (qii?.noIterator === false) {\n            this.processing_time = qii.time;\n            this.num_requests = qii.processed;\n            this.average_processing_time = this.processing_time > 0 && this.num_requests > 0 ? this.processing_time / this.num_requests : 0;\n        }\n        return this._stats();\n    }\n}\nclass ServiceClientImpl {\n    nc;\n    prefix;\n    opts;\n    constructor(nc, opts = {\n        strategy: RequestStrategy.JitterTimer,\n        maxWait: 2000\n    }, prefix){\n        this.nc = nc;\n        this.prefix = prefix;\n        this.opts = opts;\n    }\n    ping(name = \"\", id = \"\") {\n        return this.q(ServiceVerb.PING, name, id);\n    }\n    stats(name = \"\", id = \"\") {\n        return this.q(ServiceVerb.STATS, name, id);\n    }\n    info(name = \"\", id = \"\") {\n        return this.q(ServiceVerb.INFO, name, id);\n    }\n    async q(v, name = \"\", id = \"\") {\n        const iter = new QueuedIteratorImpl();\n        const jc = JSONCodec();\n        const subj = ServiceImpl.controlSubject(v, name, id, this.prefix);\n        const responses = await this.nc.requestMany(subj, Empty, this.opts);\n        (async ()=>{\n            for await (const m of responses){\n                try {\n                    const s = jc.decode(m.data);\n                    iter.push(s);\n                } catch (err) {\n                    iter.push(()=>{\n                        iter.stop(err);\n                    });\n                }\n            }\n            iter.push(()=>{\n                iter.stop();\n            });\n        })().catch((err)=>{\n            iter.stop(err);\n        });\n        return iter;\n    }\n}\nclass NatsConnectionImpl {\n    options;\n    protocol;\n    draining;\n    listeners;\n    _services;\n    constructor(opts){\n        this.draining = false;\n        this.options = parseOptions(opts);\n        this.listeners = [];\n    }\n    static connect(opts = {}) {\n        return new Promise((resolve, reject)=>{\n            const nc = new NatsConnectionImpl(opts);\n            ProtocolHandler.connect(nc.options, nc).then((ph)=>{\n                nc.protocol = ph;\n                (async function() {\n                    for await (const s of ph.status()){\n                        nc.listeners.forEach((l)=>{\n                            l.push(s);\n                        });\n                    }\n                })();\n                resolve(nc);\n            }).catch((err)=>{\n                reject(err);\n            });\n        });\n    }\n    closed() {\n        return this.protocol.closed;\n    }\n    async close() {\n        await this.protocol.close();\n    }\n    _check(subject, sub, pub) {\n        if (this.isClosed()) {\n            throw NatsError.errorForCode(ErrorCode.ConnectionClosed);\n        }\n        if (sub && this.isDraining()) {\n            throw NatsError.errorForCode(ErrorCode.ConnectionDraining);\n        }\n        if (pub && this.protocol.noMorePublishing) {\n            throw NatsError.errorForCode(ErrorCode.ConnectionDraining);\n        }\n        subject = subject || \"\";\n        if (subject.length === 0) {\n            throw NatsError.errorForCode(ErrorCode.BadSubject);\n        }\n    }\n    publish(subject, data, options) {\n        this._check(subject, false, true);\n        this.protocol.publish(subject, data, options);\n    }\n    subscribe(subject, opts = {}) {\n        this._check(subject, true, false);\n        const sub = new SubscriptionImpl(this.protocol, subject, opts);\n        this.protocol.subscribe(sub);\n        return sub;\n    }\n    _resub(s, subject, max) {\n        this._check(subject, true, false);\n        const si = s;\n        si.max = max;\n        if (max) {\n            si.max = max + si.received;\n        }\n        this.protocol.resub(si, subject);\n    }\n    requestMany(subject, data = Empty, opts = {\n        maxWait: 1000,\n        maxMessages: -1\n    }) {\n        const asyncTraces = !(this.protocol.options.noAsyncTraces || false);\n        try {\n            this._check(subject, true, true);\n        } catch (err) {\n            return Promise.reject(err);\n        }\n        opts.strategy = opts.strategy || RequestStrategy.Timer;\n        opts.maxWait = opts.maxWait || 1000;\n        if (opts.maxWait < 1) {\n            return Promise.reject(new NatsError(\"timeout\", ErrorCode.InvalidOption));\n        }\n        const qi = new QueuedIteratorImpl();\n        function stop(err) {\n            qi.push(()=>{\n                qi.stop(err);\n            });\n        }\n        function callback(err, msg) {\n            if (err || msg === null) {\n                stop(err === null ? undefined : err);\n            } else {\n                qi.push(msg);\n            }\n        }\n        if (opts.noMux) {\n            const stack = asyncTraces ? new Error().stack : null;\n            let max = typeof opts.maxMessages === \"number\" && opts.maxMessages > 0 ? opts.maxMessages : -1;\n            const sub = this.subscribe(createInbox(this.options.inboxPrefix), {\n                callback: (err, msg)=>{\n                    if (msg?.data?.length === 0 && msg?.headers?.status === ErrorCode.NoResponders) {\n                        err = NatsError.errorForCode(ErrorCode.NoResponders);\n                    }\n                    if (err) {\n                        if (stack) {\n                            err.stack += `\\n\\n${stack}`;\n                        }\n                        cancel(err);\n                        return;\n                    }\n                    callback(null, msg);\n                    if (opts.strategy === RequestStrategy.Count) {\n                        max--;\n                        if (max === 0) {\n                            cancel();\n                        }\n                    }\n                    if (opts.strategy === RequestStrategy.JitterTimer) {\n                        clearTimers();\n                        timer = setTimeout(()=>{\n                            cancel();\n                        }, 300);\n                    }\n                    if (opts.strategy === RequestStrategy.SentinelMsg) {\n                        if (msg && msg.data.length === 0) {\n                            cancel();\n                        }\n                    }\n                }\n            });\n            sub.closed.then(()=>{\n                stop();\n            }).catch((err)=>{\n                qi.stop(err);\n            });\n            const cancel = (err)=>{\n                if (err) {\n                    qi.push(()=>{\n                        throw err;\n                    });\n                }\n                clearTimers();\n                sub.drain().then(()=>{\n                    stop();\n                }).catch((_err)=>{\n                    stop();\n                });\n            };\n            qi.iterClosed.then(()=>{\n                clearTimers();\n                sub?.unsubscribe();\n            }).catch((_err)=>{\n                clearTimers();\n                sub?.unsubscribe();\n            });\n            try {\n                this.publish(subject, data, {\n                    reply: sub.getSubject()\n                });\n            } catch (err) {\n                cancel(err);\n            }\n            let timer = setTimeout(()=>{\n                cancel();\n            }, opts.maxWait);\n            const clearTimers = ()=>{\n                if (timer) {\n                    clearTimeout(timer);\n                }\n            };\n        } else {\n            const rmo = opts;\n            rmo.callback = callback;\n            qi.iterClosed.then(()=>{\n                r.cancel();\n            }).catch((err)=>{\n                r.cancel(err);\n            });\n            const r = new RequestMany(this.protocol.muxSubscriptions, subject, rmo);\n            this.protocol.request(r);\n            try {\n                this.publish(subject, data, {\n                    reply: `${this.protocol.muxSubscriptions.baseInbox}${r.token}`,\n                    headers: opts.headers\n                });\n            } catch (err) {\n                r.cancel(err);\n            }\n        }\n        return Promise.resolve(qi);\n    }\n    request(subject, data, opts = {\n        timeout: 1000,\n        noMux: false\n    }) {\n        try {\n            this._check(subject, true, true);\n        } catch (err) {\n            return Promise.reject(err);\n        }\n        const asyncTraces = !(this.protocol.options.noAsyncTraces || false);\n        opts.timeout = opts.timeout || 1000;\n        if (opts.timeout < 1) {\n            return Promise.reject(new NatsError(\"timeout\", ErrorCode.InvalidOption));\n        }\n        if (!opts.noMux && opts.reply) {\n            return Promise.reject(new NatsError(\"reply can only be used with noMux\", ErrorCode.InvalidOption));\n        }\n        if (opts.noMux) {\n            const inbox = opts.reply ? opts.reply : createInbox(this.options.inboxPrefix);\n            const d = deferred();\n            const errCtx = asyncTraces ? new Error() : null;\n            const sub = this.subscribe(inbox, {\n                max: 1,\n                timeout: opts.timeout,\n                callback: (err, msg)=>{\n                    if (err) {\n                        if (errCtx && err.code !== ErrorCode.Timeout) {\n                            err.stack += `\\n\\n${errCtx.stack}`;\n                        }\n                        d.reject(err);\n                    } else {\n                        err = isRequestError(msg);\n                        if (err) {\n                            if (errCtx) {\n                                err.stack += `\\n\\n${errCtx.stack}`;\n                            }\n                            d.reject(err);\n                        } else {\n                            d.resolve(msg);\n                        }\n                    }\n                }\n            });\n            sub.requestSubject = subject;\n            this.protocol.publish(subject, data, {\n                reply: inbox,\n                headers: opts.headers\n            });\n            return d;\n        } else {\n            const r = new RequestOne(this.protocol.muxSubscriptions, subject, opts, asyncTraces);\n            this.protocol.request(r);\n            try {\n                this.publish(subject, data, {\n                    reply: `${this.protocol.muxSubscriptions.baseInbox}${r.token}`,\n                    headers: opts.headers\n                });\n            } catch (err) {\n                r.cancel(err);\n            }\n            const p = Promise.race([\n                r.timer,\n                r.deferred\n            ]);\n            p.catch(()=>{\n                r.cancel();\n            });\n            return p;\n        }\n    }\n    flush() {\n        if (this.isClosed()) {\n            return Promise.reject(NatsError.errorForCode(ErrorCode.ConnectionClosed));\n        }\n        return this.protocol.flush();\n    }\n    drain() {\n        if (this.isClosed()) {\n            return Promise.reject(NatsError.errorForCode(ErrorCode.ConnectionClosed));\n        }\n        if (this.isDraining()) {\n            return Promise.reject(NatsError.errorForCode(ErrorCode.ConnectionDraining));\n        }\n        this.draining = true;\n        return this.protocol.drain();\n    }\n    isClosed() {\n        return this.protocol.isClosed();\n    }\n    isDraining() {\n        return this.draining;\n    }\n    getServer() {\n        const srv = this.protocol.getServer();\n        return srv ? srv.listen : \"\";\n    }\n    status() {\n        const iter = new QueuedIteratorImpl();\n        iter.iterClosed.then(()=>{\n            const idx = this.listeners.indexOf(iter);\n            this.listeners.splice(idx, 1);\n        });\n        this.listeners.push(iter);\n        return iter;\n    }\n    get info() {\n        return this.protocol.isClosed() ? undefined : this.protocol.info;\n    }\n    stats() {\n        return {\n            inBytes: this.protocol.inBytes,\n            outBytes: this.protocol.outBytes,\n            inMsgs: this.protocol.inMsgs,\n            outMsgs: this.protocol.outMsgs\n        };\n    }\n    async jetstreamManager(opts = {}) {\n        const adm = new JetStreamManagerImpl(this, opts);\n        if (opts.checkAPI !== false) {\n            try {\n                await adm.getAccountInfo();\n            } catch (err) {\n                const ne = err;\n                if (ne.code === ErrorCode.NoResponders) {\n                    ne.code = ErrorCode.JetStreamNotEnabled;\n                }\n                throw ne;\n            }\n        }\n        return adm;\n    }\n    jetstream(opts = {}) {\n        return new JetStreamClientImpl(this, opts);\n    }\n    getServerVersion() {\n        const info = this.info;\n        return info ? parseSemVer(info.version) : undefined;\n    }\n    async rtt() {\n        if (!this.protocol._closed && !this.protocol.connected) {\n            throw NatsError.errorForCode(ErrorCode.Disconnect);\n        }\n        const start = Date.now();\n        await this.flush();\n        return Date.now() - start;\n    }\n    get features() {\n        return this.protocol.features;\n    }\n    get services() {\n        if (!this._services) {\n            this._services = new ServicesFactory(this);\n        }\n        return this._services;\n    }\n    reconnect() {\n        if (this.isClosed()) {\n            return Promise.reject(NatsError.errorForCode(ErrorCode.ConnectionClosed));\n        }\n        if (this.isDraining()) {\n            return Promise.reject(NatsError.errorForCode(ErrorCode.ConnectionDraining));\n        }\n        return this.protocol.reconnect();\n    }\n}\nclass ServicesFactory {\n    nc;\n    constructor(nc){\n        this.nc = nc;\n    }\n    add(config) {\n        try {\n            const s = new ServiceImpl(this.nc, config);\n            return s.start();\n        } catch (err) {\n            return Promise.reject(err);\n        }\n    }\n    client(opts, prefix) {\n        return new ServiceClientImpl(this.nc, opts, prefix);\n    }\n}\nclass Metric {\n    name;\n    duration;\n    date;\n    payload;\n    msgs;\n    lang;\n    version;\n    bytes;\n    asyncRequests;\n    min;\n    max;\n    constructor(name, duration){\n        this.name = name;\n        this.duration = duration;\n        this.date = Date.now();\n        this.payload = 0;\n        this.msgs = 0;\n        this.bytes = 0;\n    }\n    toString() {\n        const sec = this.duration / 1000;\n        const mps = Math.round(this.msgs / sec);\n        const label = this.asyncRequests ? \"asyncRequests\" : \"\";\n        let minmax = \"\";\n        if (this.max) {\n            minmax = `${this.min}/${this.max}`;\n        }\n        return `${this.name}${label ? \" [asyncRequests]\" : \"\"} ${humanizeNumber(mps)} msgs/sec - [${sec.toFixed(2)} secs] ~ ${throughput(this.bytes, sec)} ${minmax}`;\n    }\n    toCsv() {\n        return `\"${this.name}\",${new Date(this.date).toISOString()},${this.lang},${this.version},${this.msgs},${this.payload},${this.bytes},${this.duration},${this.asyncRequests ? this.asyncRequests : false}\\n`;\n    }\n    static header() {\n        return `Test,Date,Lang,Version,Count,MsgPayload,Bytes,Millis,Async\\n`;\n    }\n}\nclass Bench {\n    nc;\n    callbacks;\n    msgs;\n    size;\n    subject;\n    asyncRequests;\n    pub;\n    sub;\n    req;\n    rep;\n    perf;\n    payload;\n    constructor(nc, opts = {\n        msgs: 100000,\n        size: 128,\n        subject: \"\",\n        asyncRequests: false,\n        pub: false,\n        sub: false,\n        req: false,\n        rep: false\n    }){\n        this.nc = nc;\n        this.callbacks = opts.callbacks || false;\n        this.msgs = opts.msgs || 0;\n        this.size = opts.size || 0;\n        this.subject = opts.subject || nuid.next();\n        this.asyncRequests = opts.asyncRequests || false;\n        this.pub = opts.pub || false;\n        this.sub = opts.sub || false;\n        this.req = opts.req || false;\n        this.rep = opts.rep || false;\n        this.perf = new Perf();\n        this.payload = this.size ? new Uint8Array(this.size) : Empty;\n        if (!this.pub && !this.sub && !this.req && !this.rep) {\n            throw new Error(\"no bench option selected\");\n        }\n    }\n    async run() {\n        this.nc.closed().then((err)=>{\n            if (err) {\n                throw new NatsError(`bench closed with an error: ${err.message}`, ErrorCode.Unknown, err);\n            }\n        });\n        if (this.callbacks) {\n            await this.runCallbacks();\n        } else {\n            await this.runAsync();\n        }\n        return this.processMetrics();\n    }\n    processMetrics() {\n        const nc = this.nc;\n        const { lang, version } = nc.protocol.transport;\n        if (this.pub && this.sub) {\n            this.perf.measure(\"pubsub\", \"pubStart\", \"subStop\");\n        }\n        if (this.req && this.rep) {\n            this.perf.measure(\"reqrep\", \"reqStart\", \"reqStop\");\n        }\n        const measures = this.perf.getEntries();\n        const pubsub = measures.find((m)=>m.name === \"pubsub\");\n        const reqrep = measures.find((m)=>m.name === \"reqrep\");\n        const req = measures.find((m)=>m.name === \"req\");\n        const rep = measures.find((m)=>m.name === \"rep\");\n        const pub = measures.find((m)=>m.name === \"pub\");\n        const sub = measures.find((m)=>m.name === \"sub\");\n        const stats = this.nc.stats();\n        const metrics = [];\n        if (pubsub) {\n            const { name, duration } = pubsub;\n            const m = new Metric(name, duration);\n            m.msgs = this.msgs * 2;\n            m.bytes = stats.inBytes + stats.outBytes;\n            m.lang = lang;\n            m.version = version;\n            m.payload = this.payload.length;\n            metrics.push(m);\n        }\n        if (reqrep) {\n            const { name, duration } = reqrep;\n            const m = new Metric(name, duration);\n            m.msgs = this.msgs * 2;\n            m.bytes = stats.inBytes + stats.outBytes;\n            m.lang = lang;\n            m.version = version;\n            m.payload = this.payload.length;\n            metrics.push(m);\n        }\n        if (pub) {\n            const { name, duration } = pub;\n            const m = new Metric(name, duration);\n            m.msgs = this.msgs;\n            m.bytes = stats.outBytes;\n            m.lang = lang;\n            m.version = version;\n            m.payload = this.payload.length;\n            metrics.push(m);\n        }\n        if (sub) {\n            const { name, duration } = sub;\n            const m = new Metric(name, duration);\n            m.msgs = this.msgs;\n            m.bytes = stats.inBytes;\n            m.lang = lang;\n            m.version = version;\n            m.payload = this.payload.length;\n            metrics.push(m);\n        }\n        if (rep) {\n            const { name, duration } = rep;\n            const m = new Metric(name, duration);\n            m.msgs = this.msgs;\n            m.bytes = stats.inBytes + stats.outBytes;\n            m.lang = lang;\n            m.version = version;\n            m.payload = this.payload.length;\n            metrics.push(m);\n        }\n        if (req) {\n            const { name, duration } = req;\n            const m = new Metric(name, duration);\n            m.msgs = this.msgs;\n            m.bytes = stats.inBytes + stats.outBytes;\n            m.lang = lang;\n            m.version = version;\n            m.payload = this.payload.length;\n            metrics.push(m);\n        }\n        return metrics;\n    }\n    async runCallbacks() {\n        const jobs = [];\n        if (this.sub) {\n            const d = deferred();\n            jobs.push(d);\n            let i = 0;\n            this.nc.subscribe(this.subject, {\n                max: this.msgs,\n                callback: ()=>{\n                    i++;\n                    if (i === 1) {\n                        this.perf.mark(\"subStart\");\n                    }\n                    if (i === this.msgs) {\n                        this.perf.mark(\"subStop\");\n                        this.perf.measure(\"sub\", \"subStart\", \"subStop\");\n                        d.resolve();\n                    }\n                }\n            });\n        }\n        if (this.rep) {\n            const d = deferred();\n            jobs.push(d);\n            let i = 0;\n            this.nc.subscribe(this.subject, {\n                max: this.msgs,\n                callback: (_, m)=>{\n                    m.respond(this.payload);\n                    i++;\n                    if (i === 1) {\n                        this.perf.mark(\"repStart\");\n                    }\n                    if (i === this.msgs) {\n                        this.perf.mark(\"repStop\");\n                        this.perf.measure(\"rep\", \"repStart\", \"repStop\");\n                        d.resolve();\n                    }\n                }\n            });\n        }\n        if (this.pub) {\n            const job = (async ()=>{\n                this.perf.mark(\"pubStart\");\n                for(let i = 0; i < this.msgs; i++){\n                    this.nc.publish(this.subject, this.payload);\n                }\n                await this.nc.flush();\n                this.perf.mark(\"pubStop\");\n                this.perf.measure(\"pub\", \"pubStart\", \"pubStop\");\n            })();\n            jobs.push(job);\n        }\n        if (this.req) {\n            const job = (async ()=>{\n                if (this.asyncRequests) {\n                    this.perf.mark(\"reqStart\");\n                    const a = [];\n                    for(let i = 0; i < this.msgs; i++){\n                        a.push(this.nc.request(this.subject, this.payload, {\n                            timeout: 20000\n                        }));\n                    }\n                    await Promise.all(a);\n                    this.perf.mark(\"reqStop\");\n                    this.perf.measure(\"req\", \"reqStart\", \"reqStop\");\n                } else {\n                    this.perf.mark(\"reqStart\");\n                    for(let i = 0; i < this.msgs; i++){\n                        await this.nc.request(this.subject);\n                    }\n                    this.perf.mark(\"reqStop\");\n                    this.perf.measure(\"req\", \"reqStart\", \"reqStop\");\n                }\n            })();\n            jobs.push(job);\n        }\n        await Promise.all(jobs);\n    }\n    async runAsync() {\n        const jobs = [];\n        if (this.rep) {\n            let first = false;\n            const sub = this.nc.subscribe(this.subject, {\n                max: this.msgs\n            });\n            const job = (async ()=>{\n                for await (const m of sub){\n                    if (!first) {\n                        this.perf.mark(\"repStart\");\n                        first = true;\n                    }\n                    m.respond(this.payload);\n                }\n                await this.nc.flush();\n                this.perf.mark(\"repStop\");\n                this.perf.measure(\"rep\", \"repStart\", \"repStop\");\n            })();\n            jobs.push(job);\n        }\n        if (this.sub) {\n            let first = false;\n            const sub = this.nc.subscribe(this.subject, {\n                max: this.msgs\n            });\n            const job = (async ()=>{\n                for await (const _m of sub){\n                    if (!first) {\n                        this.perf.mark(\"subStart\");\n                        first = true;\n                    }\n                }\n                this.perf.mark(\"subStop\");\n                this.perf.measure(\"sub\", \"subStart\", \"subStop\");\n            })();\n            jobs.push(job);\n        }\n        if (this.pub) {\n            const job = (async ()=>{\n                this.perf.mark(\"pubStart\");\n                for(let i = 0; i < this.msgs; i++){\n                    this.nc.publish(this.subject, this.payload);\n                }\n                await this.nc.flush();\n                this.perf.mark(\"pubStop\");\n                this.perf.measure(\"pub\", \"pubStart\", \"pubStop\");\n            })();\n            jobs.push(job);\n        }\n        if (this.req) {\n            const job = (async ()=>{\n                if (this.asyncRequests) {\n                    this.perf.mark(\"reqStart\");\n                    const a = [];\n                    for(let i = 0; i < this.msgs; i++){\n                        a.push(this.nc.request(this.subject, this.payload, {\n                            timeout: 20000\n                        }));\n                    }\n                    await Promise.all(a);\n                    this.perf.mark(\"reqStop\");\n                    this.perf.measure(\"req\", \"reqStart\", \"reqStop\");\n                } else {\n                    this.perf.mark(\"reqStart\");\n                    for(let i = 0; i < this.msgs; i++){\n                        await this.nc.request(this.subject);\n                    }\n                    this.perf.mark(\"reqStop\");\n                    this.perf.measure(\"req\", \"reqStart\", \"reqStop\");\n                }\n            })();\n            jobs.push(job);\n        }\n        await Promise.all(jobs);\n    }\n}\nfunction throughput(bytes, seconds) {\n    return `${humanizeBytes(bytes / seconds)}/sec`;\n}\nfunction humanizeBytes(bytes, si = false) {\n    const base = si ? 1000 : 1024;\n    const pre = si ? [\n        \"k\",\n        \"M\",\n        \"G\",\n        \"T\",\n        \"P\",\n        \"E\"\n    ] : [\n        \"K\",\n        \"M\",\n        \"G\",\n        \"T\",\n        \"P\",\n        \"E\"\n    ];\n    const post = si ? \"iB\" : \"B\";\n    if (bytes < base) {\n        return `${bytes.toFixed(2)} ${post}`;\n    }\n    const exp = parseInt(Math.log(bytes) / Math.log(base) + \"\");\n    const index = parseInt(exp - 1 + \"\");\n    return `${(bytes / Math.pow(base, exp)).toFixed(2)} ${pre[index]}${post}`;\n}\nfunction humanizeNumber(n) {\n    return n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\nexport { backoff as backoff, Bench as Bench, buildAuthenticator as buildAuthenticator, canonicalMIMEHeaderKey as canonicalMIMEHeaderKey, createInbox as createInbox, credsAuthenticator as credsAuthenticator, deadline as deadline, DebugEvents as DebugEvents, deferred as deferred, delay as delay, Empty as Empty, ErrorCode as ErrorCode, Events as Events, headers as headers, JSONCodec as JSONCodec, jwtAuthenticator as jwtAuthenticator, Match as Match, Metric as Metric, MsgHdrsImpl as MsgHdrsImpl, NatsError as NatsError, nkeyAuthenticator as nkeyAuthenticator, mod as nkeys, Nuid as Nuid, nuid as nuid, RequestStrategy as RequestStrategy, ServiceError as ServiceError, ServiceErrorCodeHeader as ServiceErrorCodeHeader, ServiceErrorHeader as ServiceErrorHeader, ServiceResponseType as ServiceResponseType, ServiceVerb as ServiceVerb, StringCodec as StringCodec, syncIterator as syncIterator, tokenAuthenticator as tokenAuthenticator, usernamePasswordAuthenticator as usernamePasswordAuthenticator };\nexport { checkJsError as checkJsError, isFlowControlMsg as isFlowControlMsg, isHeartbeatMsg as isHeartbeatMsg, millis as millis, nanos as nanos };\nexport { AckPolicy as AckPolicy, AdvisoryKind as AdvisoryKind, ConsumerDebugEvents as ConsumerDebugEvents, ConsumerEvents as ConsumerEvents, DeliverPolicy as DeliverPolicy, DirectMsgHeaders as DirectMsgHeaders, DiscardPolicy as DiscardPolicy, JsHeaders as JsHeaders, ReplayPolicy as ReplayPolicy, RepublishHeaders as RepublishHeaders, RetentionPolicy as RetentionPolicy, StorageType as StorageType, StoreCompression as StoreCompression };\nexport { consumerOpts as consumerOpts };\nconst VERSION = \"1.19.1\";\nconst LANG = \"nats.ws\";\nclass WsTransport {\n    version;\n    lang;\n    closeError;\n    connected;\n    done;\n    socket;\n    options;\n    socketClosed;\n    encrypted;\n    peeked;\n    yields;\n    signal;\n    closedNotification;\n    constructor(){\n        this.version = VERSION;\n        this.lang = LANG;\n        this.connected = false;\n        this.done = false;\n        this.socketClosed = false;\n        this.encrypted = false;\n        this.peeked = false;\n        this.yields = [];\n        this.signal = deferred();\n        this.closedNotification = deferred();\n    }\n    async connect(server, options) {\n        const connected = false;\n        const connLock = deferred();\n        if (options.tls) {\n            connLock.reject(new NatsError(\"tls\", ErrorCode.InvalidOption));\n            return connLock;\n        }\n        this.options = options;\n        const u = server.src;\n        if (options.wsFactory) {\n            const { socket, encrypted } = await options.wsFactory(server.src, options);\n            this.socket = socket;\n            this.encrypted = encrypted;\n        } else {\n            this.encrypted = u.indexOf(\"wss://\") === 0;\n            this.socket = new WebSocket(u);\n        }\n        this.socket.binaryType = \"arraybuffer\";\n        this.socket.onopen = ()=>{\n            if (this.isDiscarded()) {\n                return;\n            }\n        };\n        this.socket.onmessage = (me)=>{\n            if (this.isDiscarded()) {\n                return;\n            }\n            this.yields.push(new Uint8Array(me.data));\n            if (this.peeked) {\n                this.signal.resolve();\n                return;\n            }\n            const t = DataBuffer.concat(...this.yields);\n            const pm = extractProtocolMessage(t);\n            if (pm !== \"\") {\n                const m = INFO.exec(pm);\n                if (!m) {\n                    if (options.debug) {\n                        console.error(\"!!!\", render(t));\n                    }\n                    connLock.reject(new Error(\"unexpected response from server\"));\n                    return;\n                }\n                try {\n                    const info = JSON.parse(m[1]);\n                    checkOptions(info, this.options);\n                    this.peeked = true;\n                    this.connected = true;\n                    this.signal.resolve();\n                    connLock.resolve();\n                } catch (err) {\n                    connLock.reject(err);\n                    return;\n                }\n            }\n        };\n        this.socket.onclose = (evt)=>{\n            if (this.isDiscarded()) {\n                return;\n            }\n            this.socketClosed = true;\n            let reason;\n            if (this.done) return;\n            if (!evt.wasClean) {\n                reason = new Error(evt.reason);\n            }\n            this._closed(reason);\n        };\n        this.socket.onerror = (e)=>{\n            if (this.isDiscarded()) {\n                return;\n            }\n            const evt = e;\n            const err = new NatsError(evt.message, ErrorCode.Unknown, new Error(evt.error));\n            if (!connected) {\n                connLock.reject(err);\n            } else {\n                this._closed(err);\n            }\n        };\n        return connLock;\n    }\n    disconnect() {\n        this._closed(undefined, true);\n    }\n    async _closed(err, internal = true) {\n        if (this.isDiscarded()) {\n            return;\n        }\n        if (!this.connected) return;\n        if (this.done) return;\n        this.closeError = err;\n        if (!err) {\n            while(!this.socketClosed && this.socket.bufferedAmount > 0){\n                await delay(100);\n            }\n        }\n        this.done = true;\n        try {\n            this.socket.close(err ? 1002 : 1000, err ? err.message : undefined);\n        } catch (err) {}\n        if (internal) {\n            this.closedNotification.resolve(err);\n        }\n    }\n    get isClosed() {\n        return this.done;\n    }\n    [Symbol.asyncIterator]() {\n        return this.iterate();\n    }\n    async *iterate() {\n        while(true){\n            if (this.isDiscarded()) {\n                return;\n            }\n            if (this.yields.length === 0) {\n                await this.signal;\n            }\n            const yields = this.yields;\n            this.yields = [];\n            for(let i = 0; i < yields.length; i++){\n                if (this.options.debug) {\n                    console.info(`> ${render(yields[i])}`);\n                }\n                yield yields[i];\n            }\n            if (this.done) {\n                break;\n            } else if (this.yields.length === 0) {\n                yields.length = 0;\n                this.yields = yields;\n                this.signal = deferred();\n            }\n        }\n    }\n    isEncrypted() {\n        return this.connected && this.encrypted;\n    }\n    send(frame) {\n        if (this.isDiscarded()) {\n            return;\n        }\n        try {\n            this.socket.send(frame.buffer);\n            if (this.options.debug) {\n                console.info(`< ${render(frame)}`);\n            }\n            return;\n        } catch (err) {\n            if (this.options.debug) {\n                console.error(`!!! ${render(frame)}: ${err}`);\n            }\n        }\n    }\n    close(err) {\n        return this._closed(err, false);\n    }\n    closed() {\n        return this.closedNotification;\n    }\n    isDiscarded() {\n        if (this.done) {\n            this.discard();\n            return true;\n        }\n        return false;\n    }\n    discard() {\n        this.done = true;\n        try {\n            this.socket?.close();\n        } catch (_err) {}\n    }\n}\nfunction wsUrlParseFn(u) {\n    const ut = /^(.*:\\/\\/)(.*)/;\n    if (!ut.test(u)) {\n        u = `https://${u}`;\n    }\n    let url = new URL(u);\n    const srcProto = url.protocol.toLowerCase();\n    if (srcProto !== \"https:\" && srcProto !== \"http\") {\n        u = u.replace(/^(.*:\\/\\/)(.*)/gm, \"$2\");\n        url = new URL(`http://${u}`);\n    }\n    let protocol;\n    let port;\n    const host = url.hostname;\n    const path = url.pathname;\n    const search = url.search || \"\";\n    switch(srcProto){\n        case \"http:\":\n        case \"ws:\":\n        case \"nats:\":\n            port = url.port || \"80\";\n            protocol = \"ws:\";\n            break;\n        default:\n            port = url.port || \"443\";\n            protocol = \"wss:\";\n            break;\n    }\n    return `${protocol}//${host}:${port}${path}${search}`;\n}\nfunction connect(opts = {}) {\n    setTransportFactory({\n        defaultPort: 443,\n        urlParseFn: wsUrlParseFn,\n        factory: ()=>{\n            return new WsTransport();\n        }\n    });\n    return NatsConnectionImpl.connect(opts);\n}\nexport { connect as connect };\n"],
  "mappings": "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AA,IAC9B,IAAI,IAAI,WAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,WAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,SAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,SAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,WAAY,SAAU;AAAA,IAC9B,IAAI,IAAI,WAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,WAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,WAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,WAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,WAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,SAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,SAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,SAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,YAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,WAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,WAAY,UAAU;AAAA,IAC9B,IAAI,IAAI,WAA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ACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,E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",
  "names": ["module", "Events", "DebugEvents", "ErrorCode", "code", "Match", "RequestStrategy", "ServiceResponseType", "ServiceVerb", "millis", "s", "Kind", "State", "cc", "Feature", "nacl", "init", "NKeysErrorCode", "Prefix", "err", "headers", "Js409Errors", "RetentionPolicy", "DiscardPolicy", "StorageType", "DeliverPolicy", "AckPolicy", "ReplayPolicy", "StoreCompression", "ConsumerApiAction", "AdvisoryKind", "JsHeaders", "KvWatchInclude", "DirectMsgHeaders", "RepublishHeaders", "lookup", "revLookup", "min", "timeout", "PullConsumerType", "ConsumerEvents", "ConsumerDebugEvents", "iter", "copy", "hasWildcards", "PubHeaders", "k", "r", "i", "v", "data", "ingest", "base", "err"]
}
